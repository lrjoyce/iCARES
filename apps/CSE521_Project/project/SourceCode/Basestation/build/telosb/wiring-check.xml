<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:DemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb69b1ba0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb6936d70"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb6936d70"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb6931840"/></to>
    </wire>
    <wire loc="18:DemoAppC.nc">
      <from><interface-ref name="Photo" scoped="" ref="0xb69ab3c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb692e100"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb692e100"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb5826e68"/></to>
    </wire>
    <wire loc="19:DemoAppC.nc">
      <from><interface-ref name="IntTemp" scoped="" ref="0xb69ad0f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb63bfdf0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb63bfdf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb5589b20"/></to>
    </wire>
    <wire loc="20:DemoAppC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0xb69addd0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0xb63ab978"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0xb63ab978"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0xb5562468"/></to>
    </wire>
    <wire loc="21:DemoAppC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0xb69acb28"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0xb61d13f8"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0xb61d13f8"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0xb54d2eb0"/></to>
    </wire>
    <wire loc="23:DemoAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb69a5a30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb61d0d40"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb61d0d40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb61a8b40"/></to>
    </wire>
    <wire loc="24:DemoAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb696fb40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5b59938"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5b59938"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5312200"/></to>
    </wire>
    <wire loc="25:DemoAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb696cd70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5b09d30"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5b09d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb61cc010"/>
      <arguments>
        <value cst="I:150">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:DemoAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6966e68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb61cca00"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb61cca00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb61a4510"/></to>
    </wire>
    <wire loc="28:DemoAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb696d658"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5b02010"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5b02010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5ac89b0"/></to>
    </wire>
    <wire loc="29:DemoAppC.nc">
      <from><interface-ref name="SerialAMSend" scoped="" ref="0xb696b4f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5b028e8"/>
      <arguments>
        <value cst="I:150">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:DemoAppC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0xb696dd10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5b01620"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5b01620"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5afcf10"/></to>
    </wire>
    <wire loc="32:DemoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb695ed10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61f8230"/></to>
    </wire>
    <wire loc="33:DemoAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6956ba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb58febd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb58febd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:DemoP.nc">
      <from><interface-ref name="sendPacket" scoped="" ref="0xb6953c40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:DemoP.nc">
      <from><interface-ref name="sendSerialPacket" scoped="" ref="0xb6951490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:DemoP.nc">
      <from><interface-ref name="readSensors" scoped="" ref="0xb6953450"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb52676a0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5ac8618"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5bd25c8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5c21280"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5c33570"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5c468b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5d06c98"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5d8e290"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60cb4b0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb53d2120"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5ff93a8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb612d4a0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb550f430"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6431010"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb65427b8"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5806010"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb67bcc88"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb6931bd8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb6c4ea78"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb6c4ea78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb69d49f0"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb6918240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb69322c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb69322c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6932c80"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb6918648"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0xb692c0b8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0xb691a0b8"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0xb691a0b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb691aa08"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb692c498"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6928248"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0xb692c878"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb61e5c88"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb691aa08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb69091e0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0xb69131d8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0xb69095b0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb69be600"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb6908010"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0xb68e5628"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6874050"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0xb68d8468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6871e78"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0xb68dc518"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6877350"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0xb68cd930"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6863be8"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0xb68e05f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6878b98"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0xb68d1db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6863510"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0xb68cb438"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6856b08"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0xb68d5388"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb685f8f8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0xb68e2e68"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb68a42c8"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0xb68ce788"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb686be88"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0xb68d2db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb686b7b0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0xb68d7010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb686ccb8"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0xb68dcdb8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6873198"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0xb68cc278"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb685eb08"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0xb68d7c00"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6868b00"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0xb68e0db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6874aa8"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0xb68e61f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68c83a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0xb68d05f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb685e430"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0xb68eb9e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6878140"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0xb68d5ef8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb685b8f8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0xb68d9c18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb687b430"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0xb68cd090"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6867cc8"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0xb68ded58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb68a4d20"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0xb68d15f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb68675f0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0xb68ccb18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb685ab08"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0xb68d67e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6864a20"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0xb68d0db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb685a430"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0xb68cfeb8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb686f010"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0xb68cf5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6856430"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0xb68d25f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb68708f0"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0xb68d4a78"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb68578f8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0xb68ab3d0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68ab068"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0xb68ab728"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0xb6853558"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0xb68aba80"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0xb68539e0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb687bbe8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68c83a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb687a890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68ab068"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6877b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68c83a0"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb68767b0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68ab068"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6873950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68c83a0"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb68725f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68ab068"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0xb68a8e50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0xb68a71d0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0xb6853e68"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0xb68a7528"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0xb684f300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb686f7c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb686d430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb686a650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6869278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6866510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6865190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6862430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6861080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb685d350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb685c010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6859350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6858010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6855350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6854010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb69d3238"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb69d3e90"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb6c4d948"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb5826e68"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6808300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb692ed08"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb5823d78"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb5823d78"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb643c8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0xb6934d20"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0xb63c7788"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb5824ad8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb63c7d30"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb5820480"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb63c7d30"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb67ffab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5824ad8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb67f3e08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb581edc8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb581edc8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb67be310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0xb6803300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb581e730"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb581e730"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb65abea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb581b070"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5824ad8"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0xb67e2828"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb581d690"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb67bd010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb581db68"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb67bd900"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb65a69a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb67c67d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb5814d28"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb581b070"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb65a5638"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb58143c0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0xb67bd010"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb67b61f8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0xb67bc120"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0xb67b5310"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0xb67bd900"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb67b6ae8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb67be310"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb67b84e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb67c67d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb670a170"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb670a170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5805350"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0xb67b2818"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb670acb8"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb670acb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5805e98"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0xb67aa538"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0xb672a0b8"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0xb67a00d8"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0xb66a1d88"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0xb66a1d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65fbd68"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0xb67a7268"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0xb669f010"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0xb669f010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f85f8"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0xb67a63c8"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0xb669e178"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0xb669e178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f6d68"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0xb679f588"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0xb669d368"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0xb669d368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f35f8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0xb679e748"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0xb669b4c8"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0xb669b4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f1d68"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0xb679d908"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0xb669a688"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0xb669a688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ee5f8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0xb679cac8"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0xb6699848"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0xb6699848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ecd68"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0xb679bc88"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0xb6698a08"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0xb6698a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0xb67b4620"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0xb68e61f8"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0xb67b3368"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0xb68e2e68"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0xb67b3eb8"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0xb68eb9e8"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0xb67a9a08"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0xb68ded58"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0xb67a8258"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0xb68e05f8"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb670a8b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5805a90"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb58043a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb66d3208"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb58047d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5806348"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5804dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0xb66cad88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6657148"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0xb66bd010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb663fd68"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0xb6694158"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66365f8"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0xb6681e58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ecd68"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0xb6693280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6634d68"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0xb66bb368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6639d68"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0xb66b05a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6620d68"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0xb66a5688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6606d68"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0xb6690760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb662fd68"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0xb66873d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65fbd68"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0xb667c3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0xb66c6368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6650730"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0xb668f920"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb662c5f8"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0xb66c3688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb664b5f8"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0xb66b8848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66315f8"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0xb66adae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66175f8"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0xb66a2bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65fe5f8"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0xb66cca08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb665d220"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0xb66c0bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6644de8"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0xb66b5d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb662ad68"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0xb6695010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66365f8"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0xb6684918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f35f8"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0xb667d280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0xb668a010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66085f8"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0xb66b2178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6625e68"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0xb66a7368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb660bd68"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0xb6683ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f1d68"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0xb668ead8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6610d68"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0xb66c8010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66558a0"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0xb66bc178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb663c5f8"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0xb66ba4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66365f8"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0xb66af768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb661d5f8"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0xb66a4848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66035f8"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0xb668ce60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb660bd68"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0xb66d16a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66783a8"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0xb66c2848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6649d68"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0xb66b7a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb662fd68"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0xb66acca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6615d68"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0xb6689170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb662ad68"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0xb6686598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f85f8"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0xb667f010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0xb66a9010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6610d68"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0xb6688288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66275f8"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0xb66cbbc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb665b948"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0xb66bfd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66415f8"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0xb66b3010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66275f8"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0xb668dca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb660d5f8"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0xb6682c98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ee5f8"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0xb66b13e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66225f8"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0xb66a64c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66085f8"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0xb66c7178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6652030"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0xb66c44c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb664ee50"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0xb66b9688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6634d68"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0xb66ae928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb661ad68"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0xb66a3a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6601d68"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0xb66cd848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6660aa0"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0xb66c1a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66465f8"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0xb66b6bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb662c5f8"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0xb66abe68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66125f8"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0xb6691588"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66315f8"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0xb6685758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f6d68"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0xb66923e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb66315f8"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0xb66a8178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb660d5f8"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0xb667e168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ecd68"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0xb667b5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65fe5f8"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0xb6697be8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6639d68"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0xb65abea0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb65a3df8"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb656b8f0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0xb65a69a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6568378"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb65a5638"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb65690e0"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb65a4598"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb65697b8"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb65a4c70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0xb65a0468"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb654b0a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb654b0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0xb659d888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb645be80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb645be80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0xb659ac40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6457c90"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6457c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0xb65a12d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0xb672a0b8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0xb6567940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb653e010"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb653e010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6492390"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb65427b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6538090"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb653a040"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb645fd80"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6538090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5633788"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb646a6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb64ae010"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6497360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb65384e8"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb65384e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb56246b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6465730"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb64f4260"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb64f4260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb64e5490"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb5633788"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5618060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb56213b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb5633be0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb5633be0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb56184d8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5622180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb64f4260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5617e48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb561c480"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb561c480"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5616a70"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb561b090"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb561b090"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb56154f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb561bac8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb561bac8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0xb68d8468"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0xb68d25f8"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0xb68d7c00"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0xb68d15f8"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0xb68d67e8"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0xb68d1db8"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0xb68d5388"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0xb68d05f8"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0xb68d5ef8"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0xb68d0db8"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0xb68d4a78"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0xb68cf5f8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb64d46f8"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb64f6d30"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb64f6d30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb64ef768"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64ee870"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb6496d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb6467948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb55cb140"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5820480"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb6436518"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5820480"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6435d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb55ce860"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb55ce860"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb65abea0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb64351b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55ceef8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55ceef8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb67be310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb643c8b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb63ee010"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb642d100"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb6436518"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb63d2ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6435d70"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0xb63d47d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb6431780"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb642e280"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb64351b8"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb642db48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb63f1690"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb63f1690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55c17d0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0xb64144d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0xb641c448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0xb6419c88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb63f1238"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb55c58f8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb55c58f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb55b62f8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb55be4c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55c5d50"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb55c5d50"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55b6770"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb55bf278"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb64f4260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb55b3108"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb55b9690"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb55b9690"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55b3d00"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55b8330"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55b8330"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb55b2790"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb55b8d68"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb55b8d68"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb55cc760"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb67bd010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb55ccc38"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb67bd900"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb65a69a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb67c67d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb558d9f8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55cb140"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb65a5638"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb558d090"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb5589b20"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6808300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb63bea28"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb55859d8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb55859d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb643c8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb5587800"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb63b4990"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb55830e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb63b4990"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb67ffab8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5587800"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb67f3e08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55807b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55807b0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb67be310"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0xb6803300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5580118"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5580118"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb65abea0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb557f9f0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5587800"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb557f030"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb67bd010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb557f508"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb67bd900"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb65a69a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb67c67d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb5578d90"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb557f9f0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb65a5638"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb5578428"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb55707f8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55830e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb6436518"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55830e0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6435d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5573e70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5573e70"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb65abea0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb64351b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5571530"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5571530"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb67be310"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5571d88"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb67bd010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5570310"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb67bd900"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb65a69a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb67c67d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb5567010"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55707f8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb65a5638"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb5569668"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0xb61d4580"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0xb5561030"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0xb61d5968"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0xb5561418"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0xb61d5580"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0xb5562080"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0xb5560010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb637f740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0xb5560dc0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb637c1b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0xb55606e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb637f740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0xb555f970"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb637c1b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0xb637c1b8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb63316f8"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb637f740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6326158"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6326158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb62685f8"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0xb6330270"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0xb63268c0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0xb63268c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6323cd8"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0xb6330be8"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0xb63252f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb63252f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6317518"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0xb632f5f0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0xb6325d78"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0xb6325d78"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb626aad0"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb632fc58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6202dc0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6202dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb632ce70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0xb632bee8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0xb632bab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb62685f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb550d8d0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb63226d0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0xb66c8010"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6317e90"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0xb66c7178"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb63136d0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0xb66c6368"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0xb630c9c8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6315cc0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0xb630b3e8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6323cd8"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb630bde0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6317518"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb630e6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb630fc70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb630fc70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0xb6272190"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0xb62f98c0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0xb62f98c0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0xb62eeeb8"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6224ca0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb630e010"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6223cc0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb62277f0"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb62277f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb550cad0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6223628"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6227158"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6227158"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb550c438"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0xb630ac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0xb62f9010"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0xb62ee608"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0xb62f48e0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0xb62e7010"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0xb62f8a38"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0xb62eb070"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0xb62f7c18"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0xb62ea288"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0xb62fedd8"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0xb62ef448"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0xb62f56e8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0xb62e9cf8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0xb62f31a8"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0xb62e78c0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0xb62fac10"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0xb62f0288"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0xb62f6528"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0xb62eab38"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0xb62fd6e8"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0xb62efcf8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0xb62f4030"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0xb62e86e8"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0xb62f8188"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0xb62ed798"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0xb62f7368"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0xb62eb920"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0xb62fe528"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0xb62f0b38"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0xb62f6dd8"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0xb62e9448"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6268d38"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb550c030"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb550b010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6227ca0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb550b438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb550f768"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb550a6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb54ef2e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6224ca0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb54ef898"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb6223310"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb54efbb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6223628"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb54ee310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6223cc0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0xb54ee748"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0xb54eeb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb61e5c88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb61fbeb0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb61f8ef8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb61fad58"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb61fad58"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb61e49b8"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb61f78f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb61e6840"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb61e6840"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb61e11a8"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb61f62e8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb61e5300"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb61e5300"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb61de990"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb61e3350"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0xb66a5688"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb61e1b20"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0xb66a4848"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb61dd350"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0xb66a3a08"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0xb61d0010"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0xb54d2ac8"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0xb61d1010"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0xb54d4af8"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0xb61d2450"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0xb54d4ee0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0xb54d1a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb637f740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0xb54d0868"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb637c1b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0xb54d0190"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb637f740"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0xb54cf430"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb637c1b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb61a8b40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6190458"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb61cd630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb61a7470"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb61a7470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5bb3c80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb61cc6a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb61a5510"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb61a5510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb5bb0db0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb61a4510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5bafdc0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb61b54e8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cb6860"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cb6860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cad260"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb61b0e68"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6197da0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6197da0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb61864e0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb61cc010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb61a7e30"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb61a7e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5bb0718"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb61bcb18"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb61a35b0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb61a35b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb618baf8"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb61c0998"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61a5880"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb61a5880"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5baf1a8"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb61beec0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5cb3288"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5cb3288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5cabc50"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6190458"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5bcb1d0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb6197578"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb5baeea8"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6196280"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb5bae830"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb619ed40"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb618b2a0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb618b2a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb61864e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb5bccae8"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb618baf8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5cb76e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb61927a8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6186b00"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6186b00"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb5bcda20"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb619c9a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6186118"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6186118"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5cb6208"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0xb5ba8108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6190d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5bad738"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb618c760"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb618c760"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb5c08b40"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5badea0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb618cee8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb618cee8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb5c07320"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5ba9130"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5df8720"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5bab280"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cb17e0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5babaa0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cae630"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb5baa010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb61304a8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb61304a8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb612b010"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb5ba9870"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb617f9a0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb617f9a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb617b748"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5ba87d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5bcb1d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb5bcac30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5cb6208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5caebc0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb5bcda20"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb5bbfec0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb5c08b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb5c01118"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb5bccae8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb5bc9888"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6185be0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5c08770"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5c08770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0xb5c02d28"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5cb76e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5cae0b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6190d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5c0a9a0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5c0a9a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5c05e50"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6185470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5c08090"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5c08090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb5c025b8"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb618c010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb5c07700"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb5c07700"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb5c01c80"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb5c07320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb5c018a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb5bcac30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb61838d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb61838d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb617e940"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5c06298"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5c3a7f0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5c3a7f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5c36e90"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5c36010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5bcd320"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5bcd320"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5bbf228"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5bbf228"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5bcc040"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5bcc040"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5bca0a8"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5bca0a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6183ed8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6183ed8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb617b010"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5c07ea8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5bcc720"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5bcc720"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb5bca810"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5bca810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5c37628"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5c37628"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5c24af8"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5c37e78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb617f5e8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb617f5e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5d07b60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5d07b60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5d02a40"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb617a010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb613b3e0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb613b3e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb612d830"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb61741e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb61385e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb61385e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb612a0d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6174c28"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d99c00"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6174c28"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d07180"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb5d07180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d02060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb5d99c00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d8e630"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb616f1f0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0xb5d960f0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb5d960f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5d8eb28"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb616f9b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb5d96808"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb5d96808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb5d8d2d0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb6173ef8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb6169698"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6178e10"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb5c44c40"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb5c44c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb5c426e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0xb6167ef0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5c49970"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5c49970"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5ffc378"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6173280"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0xb6164170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0xb61658a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0xb6165060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xb6137100"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xb612abb8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0xb61285d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb60cba78"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb60cba78"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb60c64d8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb6125030"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb60a3210"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb60a3210"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb609b030"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6125a38"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb60a10b0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb60a10b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb60948a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb61244c0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0xb60a04c8"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb60a04c8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb608f8a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb6123010"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0xb607fef0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb607fef0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb606f010"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6119950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5e44e28"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5e44e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb604fd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb6117758"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0xb5e424e8"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5e424e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb6117b70"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0xb5e42ef0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5e42ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb6119530"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0xb5e43da0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5e43da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb6119010"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e40260"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e40260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb611a3f0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0xb5e3b190"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5e3b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb611a8f8"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0xb5e3a2b0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5e3a2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb611ae00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0xb5e3a6e8"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5e3a6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb611f358"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e3e270"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e3e270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb611f878"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e3e6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e3e6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb611cbc8"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0xb5e338c0"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5e338c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb611c678"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0xb5e33488"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5e33488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb611fd88"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0xb5e3dbd8"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5e3dbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb611b330"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0xb5e3eae0"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5e3eae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb611b838"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb5e3d368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5e3d368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0xb6118908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5e29e88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5e29e88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb604fd98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0xb6118158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5e11980"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5e11980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb604fd98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6122010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5df8720"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb6128010"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5df7ae0"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5df7ae0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5de61d8"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0xb61102c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0xb6111ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb60cb4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60c6060"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb60c6060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb54b15c8"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb60c64d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb54b1a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb54b15c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb54ad788"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb54b1a20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb54a96b8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb54ad788"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb549d240"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb54a63b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb54adbe0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb54adbe0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb549d6b8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb54a7180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb60b7218"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb60b7218"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb60b4a98"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5498060"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb54a1588"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb54a1588"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5498c58"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb54a0250"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb54a0250"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb54976b0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb54a0c88"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb54a0c88"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb60b3cd8"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb64f6d30"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb60a3c18"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb60997c0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb60a2688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6096060"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb60ca7e8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb609f7f0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb60a1aa8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb60910a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb609e190"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0xb66cad88"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb609b9a8"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0xb66b05a8"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6098190"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0xb66cbbc8"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb60969d8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0xb66d16a0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6093270"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0xb66acca8"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6091a18"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0xb66b13e8"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb608e270"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0xb66adae8"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb607f7f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb607e9f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb6082618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb606e960"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb607d010"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0xb68d7010"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0xb607da48"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0xb68ce788"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0xb6072270"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0xb66b13e8"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0xb606f608"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0xb62f9010"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0xb606d010"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0xb62fac10"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5e42190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5e3ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5e372b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5e3be38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5e31b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5e32a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5e42b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5e34190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5e32190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5e385c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5e39880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5e43530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb6041488"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5e40910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5e40c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5e34c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5e3f080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5e325c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5e35cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5e3ef18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5e35448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5e376e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5e35880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5e316e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5e32e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5e39cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5e37b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5e33cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5e3ab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5e2f010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5e43a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5e3fde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5e3d7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5e38a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5e38e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5e3b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5e3f3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5e3fa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5e405b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5e33050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5e312b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5e38190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5e35010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5e42840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5e39010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5e3f730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5e39448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5e345c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5e2f6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6040788"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0xb6046880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb603f208"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0xb6044100"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb603f9b0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb604fd98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6041c98"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb603d178"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0xb6036f18"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb6000148"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb6000148"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5ffc378"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb603d5b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5ffd1d0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5ffd1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb54293b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb603a590"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5ffd888"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb5ffd888"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5429e88"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb6036a48"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb5ffdbc0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb5ffdbc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb54287a8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb603c6d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0xb6034528"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5ffc378"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5ff99d8"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb54287a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb5fabba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb5429e88"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5fadeb8"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb54293b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fad010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5429a70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5423898"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5423898"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5ed85e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb5fadeb8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5f66bb8"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb54281d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb5fab290"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb5fab290"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb5f66ef0"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5faae18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5428bc0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb541cb50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5fada58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb5faa3c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb54231e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb54231e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5ed9b38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb5fa8108"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5420870"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5420870"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5edcb60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5fada58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f66790"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb5fabba8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb5f65578"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5fad010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5f66030"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f64208"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5faae18"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb5f65a58"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0xb5faa3c8"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f62cf0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0xb5fa8108"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0xb5f64570"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5f5a280"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5f5a280"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0xb5f54510"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5f61170"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0xb5f61d88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5f57758"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0xb5f51418"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5f58b28"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5f52e50"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0xb5f36438"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0xb6695010"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0xb5f35598"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0xb6693280"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0xb5f34758"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0xb66923e0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0xb5f33918"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0xb668f920"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0xb5f32ad8"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0xb6690760"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0xb5f387a0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0xb5ebd9f8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5420c88"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ed94c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0xb541f010"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0xb5ec3578"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0xb5ec3578"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0xb5ebd9f8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5422170"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5f5a280"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5423cb0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ed8a68"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ed8a68"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ec7510"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5ed6238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb541cb50"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5ed85e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5ec9a48"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5ec9a48"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb53d1cf8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0xb5edcb60"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5ed5af8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5ed9b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5ec9308"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5ec9308"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb53d15b8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ed94c8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ed4010"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ec7510"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb53d07e8"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5ec79c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5ed6238"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ed4ae8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ec7510"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0xb5ed4378"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5f58b28"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0xb5ed47b0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5f57758"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5ec9e50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb53d0150"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb53d0ca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5ec79c0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb53cf170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb53d2458"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb53cd358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0xb5eb76d8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0xb5f54510"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0xb5eb4010"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0xb6695010"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0xb5eb3168"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0xb66923e0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5e22bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5e27190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e23270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5e21a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5e1c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5e21e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5e16b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5e17a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5e27b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5e1a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5e17190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5e23ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5e22368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5e1d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5e1e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5e202b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5e28550"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5e26910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5e26c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5e1ac00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5e25080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5e175c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e26260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5e1bcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5e23f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e236a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5e28dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5e1b448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5e1c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5e1b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5e166e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5e17e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5e1ecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5e1cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5e18cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5e20b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5e15010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5e28a68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5e25de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5e227a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5e1da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5e206e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5e1de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5e21190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5e274e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5e215c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5e253d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5e25a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5e188c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5e18488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5e265b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5e18050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5e162b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5e1d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5e1b010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5e27840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5e27ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5e1e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5e25730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5e1e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5e1a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5e156e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5e0a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5e10c28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e0ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5e086a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5e05e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5e08ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5dfd6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5dff5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5e0e6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5e02cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5e00cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5e0b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5e0a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5e05190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5e06468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5e08f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5e10060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5e0d4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5e0d840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5e017c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5e0dc18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5dff190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e0ed70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5e02880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5e0bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e0b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5e108d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5e02010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5e032b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5e02448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5dfd2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5dffa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5e068a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5e036e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5e008c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5e077a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5dfdb20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5e10578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5e0ca18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5e0a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5e055c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5e07368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5e05a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5e0adb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5e0e010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5e08270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5e0c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5e0c6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5e00488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5e00050"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5e0d190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5e01c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5dffe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5e06cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5e03b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5e0e368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5e0ea18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5e07bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5e0c368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5e06030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5e01190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5dfc270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0xb5de6db8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0xb5ddfb08"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0xb5ddfb08"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0xb5ddb888"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0xb5dd60e0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0xb5dce010"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0xb5dce010"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0xb5dcd4e8"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0xb5dd65e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5ddc590"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0xb5dce4e8"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0xb5ddd640"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0xb5ddd640"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb5da7940"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb5dc9010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb5db6d50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb5db6d50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb5db3888"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0xb5dcd9c0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0xb5dce4e8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5db2388"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0xb5da6160"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0xb5da6160"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb5da5eb8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5da2010"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0xb68e61f8"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb5da0350"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0xb66c0bc8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d958d8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d8dbc8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0xb5d95d40"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0xb5d8c0b8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0xb5d8c680"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb60cba78"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb5d85d88"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb60ca7e8"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb5d84830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb60a3210"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb5d802f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0xb60a1aa8"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb5d85710"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0xb607f7f0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb5d80d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5d24d88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5d24d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb604fd98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d7e4a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d234f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d234f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5d7dc48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb5d23a08"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5d23a08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5d7c098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0xb5d22840"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5d22840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5d7c4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0xb5d22b98"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5d22b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d7c8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d21910"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d21910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5d7d760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb5d1d368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5d1d368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5d7ea68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0xb5d106e8"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5d106e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d7d258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d12190"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d12190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d7cd38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d1e6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d1e6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5d7b7b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb5d1c5c8"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5d1c5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5d7bcd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb5d1ca00"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5d1ca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5d7b370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0xb5d1f730"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5d1f730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5d7abc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0xb5d116e8"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5d116e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5d7a220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb5d12a00"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5d12a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5d7a6e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb5d12e38"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5d12e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb5d76978"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb5d07620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb5d07620"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb5d02500"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5d890e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5d89920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5d88088"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cb6860"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5d85040"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5cb2a00"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5cb2a00"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5ca9400"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5d76ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5d1dbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5d22190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5d1e270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5d172b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5d1ce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5d11b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5d15190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5d1eae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5d185c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5d19880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5d1b2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5d21c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5d15c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5d1f080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5d125c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5d21260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5d16cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5d1ef18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5d23d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5d16448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5d176e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5d16880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5d19cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5d17b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5d13cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5d1bb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5d10010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5d1fde0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5d1d7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5d18a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5d1b6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5d18e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5d1c190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5d224e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5d1f3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5d1fa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5d138c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5d13488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5d215b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5d13050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5d112b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5d18190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5d16010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5d22ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5d19010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5d19448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5d155c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0xb5d06010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0xb5d02ed8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5cf61a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb5d012c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb60a3210"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb5d01cc8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0xb60a3c18"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb5d00768"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0xb60a2688"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb5cff2a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0xb6082618"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb5cff968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5cb8438"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5cb8438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb604fd98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5cfe128"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0xb5c5e5c8"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5c5e5c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5cfece0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c6fb98"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c6fb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5cfe8b0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0xb5c6d260"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5c6d260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5cfd1f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cfda30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5cfb2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cb6860"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb5cfc010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb61304a8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5cfae98"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb5c6abe0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5c6abe0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5cf8408"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb5c69030"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5c69030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5cfaa58"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0xb5c6d990"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5c6d990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5cf7318"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0xb5c5e190"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5c5e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5cf88d0"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb5c5f010"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5c5f010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5cf8d98"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb5c5f448"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5c5f448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5cf7818"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c60b20"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c60b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5cf7d00"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb5c70030"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5c70030"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0xb5cef378"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5c77550"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb60b7218"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0xb5ca7350"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb5cafb78"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb5ca7da8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb653a040"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb5c758b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5c6a270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5c706e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5c6c810"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5c65880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5c69468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5c6f190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5c626e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5c606e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5c6b0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5c6b920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5c66b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5c67e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5c698a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5cb8af0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5c6fef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5c61190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5c6d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5c6f840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5c622b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5c6b4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5c6cc48"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5c70388"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5c64a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5c65cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5c64e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5c5fcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5c662b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5c64190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5c602b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5c67190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5c6c3d8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5c6bd58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5c65010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5c69cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5c65448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5c6a7a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5c70a38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5c6c080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5c61e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5c61a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5c615c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5c5f880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb6046880"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5c666e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5c645c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5c70d90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5c6f4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5c675c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5c6dce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5c67a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5c62b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb6044100"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5c5eca0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb5c44380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb5c46dd0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb5c47060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5c468b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5c33960"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5c36010"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5c32060"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5c35f10"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5c35f10"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5ffc378"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb5c32818"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb5c44c40"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c32cb8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0xb5c37a50"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0xb5c24f20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5c216a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb5c37e78"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c21a68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5c004c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5c06298"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5c00c30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb5c07ea8"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5bff010"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5bff830"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5bffde8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb5bd2900"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0xb5be5cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0xb5bcb840"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5bc88f0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5bc88f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5ffc378"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5bbc6a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb618baf8"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5312200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb530ed88"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5b58010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5312898"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5312898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb61cca00"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5b586a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5311010"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5311010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61c0998"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5b0b330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5311c08"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5311c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb61bcb18"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb530a500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5b43678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb530ab98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61c0998"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5b43678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5b3d908"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5b150a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb61cd630"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5b15750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61c0998"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5b143f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb61cca00"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb5b14ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb5b14f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5b08070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb61cca00"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5b08708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61c0998"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5ac89b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5ac1988"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5b028e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5afd830"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5b012c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5afc010"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5affa10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5aca5c8"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5b01d10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5afc338"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb5ac8618"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5ac15f0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5ac2518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5afe010"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5acaaf0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5ac5890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5ac9250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5ac5288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb5ac2010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb5904338"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5ac5890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5a0b1e8"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5ac5288"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5a46d78"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb5a0b978"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb5ac2010"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5ab2d78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5ac2518"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5a0a908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5ac2518"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb59fca88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5ac2518"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb5a0be60"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb5ab62a8"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb5a0a350"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb5ab8098"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb5ab24f0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb5a08eb8"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb5abcb20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5a07a48"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb5a07a48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5911b20"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb59fc200"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb5a07ec8"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb5a07ec8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb5913ca8"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb5a813b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb5aa1250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb5a84bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb5a7f040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb5a095f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb5a09a28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb59ead28"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb59125d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb59125d0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb59e2bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb5913ca8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb59e2010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59129e8"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb590e010"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb590e3a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb59131d8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb59131d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb59e6e08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5913890"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb52a0ea8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb52a0ea8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5933500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59e0e40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59129e8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb529c300"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb59e3880"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb59e03e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb52a07f0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb52a07f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb59349f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb59df640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb529deb0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb529deb0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb59342a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb59e3880"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb59ddd10"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb59e2bc0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb59a3b28"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb59e2010"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb59a3208"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb59e6e08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb59dd5b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59a2790"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59e0e40"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb59a2030"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0xb59e03e8"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb599f3e8"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0xb59df640"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0xb59a2af8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5999a38"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5999a38"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0xb5991438"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb599f930"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb5941010"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5941010"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb64f6d30"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb599ea40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5994348"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb598fd70"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb5999590"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb5994f28"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0xb598e358"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0xb668dca0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0xb598d4b8"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0xb668ce60"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0xb598c678"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0xb668a010"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0xb598b838"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0xb6688288"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0xb598a9f8"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0xb6689170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb529f718"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5999a38"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb529f300"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5933988"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5933988"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb592d978"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5931158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb529c300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5933500"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb592ee98"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb592ee98"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb52653a8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0xb59342a8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5931dc8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb59349f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb592e758"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb592e758"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5266bc0"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb592d978"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5265e48"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0xb5930670"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5994348"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb592de28"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5931158"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5930de0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb592d978"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb592ac60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb592d2e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb592d2e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb52657b0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb592a550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb5999590"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5263338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb592de28"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5263760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb52679d8"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5262970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb5248248"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb592a550"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5248640"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb592a948"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5248958"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb592ac60"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5247010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5929310"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="DemoP" loc="1:DemoP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC" loc="40(DemoAppC.PhotoC):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadClientC" loc="47(DemoAppC.PhotoC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadStreamClientC" loc="47(DemoAppC.PhotoC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC" loc="44(DemoAppC.InternalTempC):../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC" loc="47(DemoAppC.InternalTempC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC" loc="47(DemoAppC.InternalTempC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <module/>
    </component>
    <component qname="DemoAppC.TempC" loc="45(DemoAppC.TempC):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TempC.SensirionSht11ReaderP" loc="45(DemoAppC.TempC.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.HumidityC" loc="45(DemoAppC.HumidityC):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.HumidityC.SensirionSht11ReaderP" loc="45(DemoAppC.HumidityC.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="1">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
        <long>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.AMSenderC" loc="47(DemoAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:150">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.AMSenderC.SenderC" loc="47(DemoAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(DemoAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.AMReceiverC" loc="43(DemoAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:150">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.TimerMilliC" loc="44(DemoAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0xb68cad78" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0xb68c7010" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0xb68c7258" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0xb68c7470" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0xb68c7688" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0xb68c7898" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0xb68c7ac0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0xb68c7ce8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0xb68c6010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0xb68a6668" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0xb68a68c8" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb672ca90" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb67058b8" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0xb66777b8" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0xb66779e8" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0xb6677c18" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0xb6677e48" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0xb6676068" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6515d40" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6515d40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb64f0860" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb64f0860"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb64f2a68" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb64f2a68"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb64f2ed0" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb64f2ed0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb64e3168" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb64e3168"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb64e35e0" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb64e35e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb64e3848" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb64e3cd8" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb64e3cd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb64f9650" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb64f9650"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb64f9ab8" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb64f9ab8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb64f9d20" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb64f9d20"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb64cf1c0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb64cf1c0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb64cf428" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb64b0a10" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb64b0a10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb64913a8" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb64913a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb6491588" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6466cd0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6466cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0xb63ec2f0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0xb63ec4c8" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb63ec4c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureC" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6267088" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0xb625f270" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0xb6251528" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb5db1320" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb5db1320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb5db1758" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5db1758"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb5b5bdb8" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb5b558e8" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb5b4f398" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb5b3fba0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb5b0a630" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0xb69b1ba0" loc="3:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0xb69b1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb69b1d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Photo" ref="0xb69ab3c8" loc="5:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Photo" scoped="" ref="0xb69ab3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb69ab9f0"/>
        <function-ref name="readDone" scoped="" ref="0xb69abc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6966e68" loc="13:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb6966e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb696d050"/>
        <function-ref name="payloadLength" scoped="" ref="0xb696d130"/>
        <function-ref name="getPayload" scoped="" ref="0xb696d210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb696d2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb696d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb696fb40" loc="11:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb696fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb696fd18"/>
        <function-ref name="getPayload" scoped="" ref="0xb696fdf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb696fed8"/>
        <function-ref name="cancel" scoped="" ref="0xb69a7010"/>
        <function-ref name="sendDone" scoped="" ref="0xb69a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb696d658" loc="15:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0xb696d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb696d830"/>
        <function-ref name="stopDone" scoped="" ref="0xb696d910"/>
        <function-ref name="start" scoped="" ref="0xb696d9f0"/>
        <function-ref name="stop" scoped="" ref="0xb696dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb69a5a30" loc="10:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0xb69a5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb69a5c08"/>
        <function-ref name="stopDone" scoped="" ref="0xb69a5ce8"/>
        <function-ref name="start" scoped="" ref="0xb69a5dc8"/>
        <function-ref name="stop" scoped="" ref="0xb69a5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0xb69acb28" loc="8:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb69acb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb69a91e0"/>
        <function-ref name="readDone" scoped="" ref="0xb69a9438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0xb696dd10" loc="16:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacket" scoped="" ref="0xb696dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb696dee8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb696b010"/>
        <function-ref name="getPayload" scoped="" ref="0xb696b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb696b1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb696b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb696cd70" loc="12:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb696cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb69a4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPacket" ref="0xb6953c40" loc="34:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendPacket" scoped="" ref="0xb6953c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6953e18"/>
        <function-ref name="runTask" scoped="" ref="0xb6953ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialPacket" ref="0xb6951490" loc="35:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendSerialPacket" scoped="" ref="0xb6951490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6951668"/>
        <function-ref name="runTask" scoped="" ref="0xb6951748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntTemp" ref="0xb69ad0f0" loc="6:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IntTemp" scoped="" ref="0xb69ad0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb69ad718"/>
        <function-ref name="readDone" scoped="" ref="0xb69ad970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb695ed10" loc="20:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb695ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6965010"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb69650f0"/>
        <function-ref name="led1On" scoped="" ref="0xb69651d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69652b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6965390"/>
        <function-ref name="get" scoped="" ref="0xb6965470"/>
        <function-ref name="led1Off" scoped="" ref="0xb6965550"/>
        <function-ref name="led2Off" scoped="" ref="0xb69658d0"/>
        <function-ref name="set" scoped="" ref="0xb6965630"/>
        <function-ref name="led0On" scoped="" ref="0xb6965710"/>
        <function-ref name="led2On" scoped="" ref="0xb69657f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0xb69addd0" loc="7:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temp" scoped="" ref="0xb69addd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb69ac448"/>
        <function-ref name="readDone" scoped="" ref="0xb69ac6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensors" ref="0xb6953450" loc="33:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensors" scoped="" ref="0xb6953450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6953628"/>
        <function-ref name="runTask" scoped="" ref="0xb6953708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSend" ref="0xb696b4f0" loc="17:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialAMSend" scoped="" ref="0xb696b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb696b6c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb696b7a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb696b888"/>
        <function-ref name="cancel" scoped="" ref="0xb696b968"/>
        <function-ref name="sendDone" scoped="" ref="0xb696ba48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6956ba8" loc="21:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6956ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb695d6a8"/>
        <function-ref name="fired" scoped="" ref="0xb6964948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb695d068"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6964df8"/>
        <function-ref name="getdt" scoped="" ref="0xb695db58"/>
        <function-ref name="gett0" scoped="" ref="0xb695d900"/>
        <function-ref name="isRunning" scoped="" ref="0xb6964ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb69641f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb695d388"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6964470"/>
        <function-ref name="stop" scoped="" ref="0xb69646f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb6933a50" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0xb6933a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6933c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb6936d70" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0xb6936d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb6933010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69322c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb69322c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6932498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb692c498" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0xb692c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb692c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6932c80" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6932c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6932e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0xb692c0b8" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0xb692c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb692c290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0xb692c878" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0xb692c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb692ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6928248" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6928248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6928420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0xb691a0b8" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0xb691a0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb691a290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0xb69131d8" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0xb69131d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0xb69139d0"/>
        <function-ref name="initTimerB" scoped="" ref="0xb6913490"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0xb6913570"/>
        <function-ref name="initTimerA" scoped="" ref="0xb6913650"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0xb69133b0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0xb6913730"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0xb6913810"/>
        <function-ref name="initClocks" scoped="" ref="0xb69138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb691aa08" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb691aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb691abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0xb69095b0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0xb69095b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0xb6909da8"/>
        <function-ref name="initTimerB" scoped="" ref="0xb6909868"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0xb6909948"/>
        <function-ref name="initTimerA" scoped="" ref="0xb6909a28"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0xb6909788"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0xb6909b08"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0xb6909be8"/>
        <function-ref name="initClocks" scoped="" ref="0xb6909cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb6908010" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0xb6908010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb69081e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69091e0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb69091e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69093b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0xb68e5628" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0xb68e5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68e5800"/>
        <function-ref name="getControl" scoped="" ref="0xb68e58e0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68e59c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68e5aa0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68e5b80"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68e5c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68e5d40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68e5e20"/>
        <function-ref name="setControl" scoped="" ref="0xb68e5f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0xb68d8468" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0xb68d8468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d8640"/>
        <function-ref name="getControl" scoped="" ref="0xb68d8720"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d8800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d88e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d89c0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d8aa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d8b80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d8c60"/>
        <function-ref name="setControl" scoped="" ref="0xb68d8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0xb68dc518" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0xb68dc518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68dc6f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68dc7d0"/>
        <function-ref name="captured" scoped="" ref="0xb68dc8b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68dc990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68dca70"/>
        <function-ref name="setEdge" scoped="" ref="0xb68dcb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0xb68cd930" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0xb68cd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cdb08"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68cdbe8"/>
        <function-ref name="captured" scoped="" ref="0xb68cdcc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cdda8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cde88"/>
        <function-ref name="setEdge" scoped="" ref="0xb68cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0xb68e05f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0xb68e05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68e07d0"/>
        <function-ref name="setEvent" scoped="" ref="0xb68e08b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68e0990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68e0a70"/>
        <function-ref name="fired" scoped="" ref="0xb68e0b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0xb68d1db8" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0xb68d1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68d0010"/>
        <function-ref name="setEvent" scoped="" ref="0xb68d00f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68d01d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68d02b0"/>
        <function-ref name="fired" scoped="" ref="0xb68d0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0xb68cb438" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0xb68cb438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cb610"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68cb6f0"/>
        <function-ref name="captured" scoped="" ref="0xb68cb7d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cb8b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cb990"/>
        <function-ref name="setEdge" scoped="" ref="0xb68cba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0xb68d5388" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0xb68d5388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d5560"/>
        <function-ref name="getControl" scoped="" ref="0xb68d5640"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d5720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d5800"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d58e0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d59c0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d5aa0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d5b80"/>
        <function-ref name="setControl" scoped="" ref="0xb68d5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0xb68e2e68" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0xb68e2e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68eb050"/>
        <function-ref name="getControl" scoped="" ref="0xb68eb130"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68eb210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68eb2f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68eb3d0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68eb4b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68eb590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68eb670"/>
        <function-ref name="setControl" scoped="" ref="0xb68eb750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0xb68ce788" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0xb68ce788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68ce960"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68cea40"/>
        <function-ref name="captured" scoped="" ref="0xb68ceb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cec00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cece0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68cedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0xb68d2db8" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0xb68d2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68d1010"/>
        <function-ref name="setEvent" scoped="" ref="0xb68d10f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68d11d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68d12b0"/>
        <function-ref name="fired" scoped="" ref="0xb68d1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0xb68d7010" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0xb68d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d7268"/>
        <function-ref name="getControl" scoped="" ref="0xb68d7348"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d7428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d7508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d75e8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d76c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d77a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d7888"/>
        <function-ref name="setControl" scoped="" ref="0xb68d7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0xb68dcdb8" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0xb68dcdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68db010"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68db0f0"/>
        <function-ref name="captured" scoped="" ref="0xb68db1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68db2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68db390"/>
        <function-ref name="setEdge" scoped="" ref="0xb68db470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0xb68cc278" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0xb68cc278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cc450"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68cc530"/>
        <function-ref name="captured" scoped="" ref="0xb68cc610"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cc6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cc7d0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68cc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0xb68d7c00" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0xb68d7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d7dd8"/>
        <function-ref name="getControl" scoped="" ref="0xb68d7eb8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d6010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d60f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d61d0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d62b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d6390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d6470"/>
        <function-ref name="setControl" scoped="" ref="0xb68d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0xb68e0db8" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0xb68e0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68df010"/>
        <function-ref name="setEvent" scoped="" ref="0xb68df0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68df1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68df2b0"/>
        <function-ref name="fired" scoped="" ref="0xb68df390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0xb68e61f8" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0xb68e61f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68e63d0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68e64b0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68e6590"/>
        <function-ref name="get" scoped="" ref="0xb68e6670"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68e6750"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68e6830"/>
        <function-ref name="getMode" scoped="" ref="0xb68e6910"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68e69f0"/>
        <function-ref name="overflow" scoped="" ref="0xb68e6ad0"/>
        <function-ref name="setMode" scoped="" ref="0xb68e6bb0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68e6c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0xb68d05f8" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0xb68d05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68d07d0"/>
        <function-ref name="setEvent" scoped="" ref="0xb68d08b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68d0990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68d0a70"/>
        <function-ref name="fired" scoped="" ref="0xb68d0b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0xb68eb9e8" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0xb68eb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68ebbc0"/>
        <function-ref name="getControl" scoped="" ref="0xb68ebca0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68ebd80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68ebe60"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68e5010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68e50f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68e51d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68e52b0"/>
        <function-ref name="setControl" scoped="" ref="0xb68e5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0xb68d5ef8" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0xb68d5ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d40e0"/>
        <function-ref name="getControl" scoped="" ref="0xb68d41c0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d42a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d4380"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d4460"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d4540"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d4620"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d4700"/>
        <function-ref name="setControl" scoped="" ref="0xb68d47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0xb68d9c18" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0xb68d9c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68d9df0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68d9ed0"/>
        <function-ref name="captured" scoped="" ref="0xb68dc010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68dc0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68dc1d0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0xb68cd090" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0xb68cd090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cd268"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68cd348"/>
        <function-ref name="captured" scoped="" ref="0xb68cd428"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cd508"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cd5e8"/>
        <function-ref name="setEdge" scoped="" ref="0xb68cd6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0xb68ded58" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0xb68ded58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68e0010"/>
        <function-ref name="setEvent" scoped="" ref="0xb68e00f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68e01d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68e02b0"/>
        <function-ref name="fired" scoped="" ref="0xb68e0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0xb68d15f8" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0xb68d15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68d17d0"/>
        <function-ref name="setEvent" scoped="" ref="0xb68d18b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68d1990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68d1a70"/>
        <function-ref name="fired" scoped="" ref="0xb68d1b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0xb68ccb18" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0xb68ccb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cccf0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68ccdd0"/>
        <function-ref name="captured" scoped="" ref="0xb68cceb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cb010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cb0f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0xb68d67e8" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0xb68d67e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d69c0"/>
        <function-ref name="getControl" scoped="" ref="0xb68d6aa0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d6b80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d6c60"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d6d40"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d6e20"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d6f00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d5010"/>
        <function-ref name="setControl" scoped="" ref="0xb68d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0xb68db6a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0xb68db6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68db878"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68db958"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68dba38"/>
        <function-ref name="get" scoped="" ref="0xb68dbb18"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68dbbf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68dbcd8"/>
        <function-ref name="getMode" scoped="" ref="0xb68dbdb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68dbe98"/>
        <function-ref name="overflow" scoped="" ref="0xb68d8010"/>
        <function-ref name="setMode" scoped="" ref="0xb68d80f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68d81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0xb68d0db8" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0xb68d0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cf010"/>
        <function-ref name="setEvent" scoped="" ref="0xb68cf0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68cf1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68cf2b0"/>
        <function-ref name="fired" scoped="" ref="0xb68cf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0xb68cfeb8" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0xb68cfeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68ce0c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68ce1a0"/>
        <function-ref name="captured" scoped="" ref="0xb68ce280"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68ce360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68ce440"/>
        <function-ref name="setEdge" scoped="" ref="0xb68ce520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0xb68cf5f8" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0xb68cf5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68cf8d0"/>
        <function-ref name="setEvent" scoped="" ref="0xb68cf9b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68cfa90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68cfb70"/>
        <function-ref name="fired" scoped="" ref="0xb68cfc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0xb68d25f8" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0xb68d25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68d27d0"/>
        <function-ref name="setEvent" scoped="" ref="0xb68d28b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68d2990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68d2a70"/>
        <function-ref name="fired" scoped="" ref="0xb68d2b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0xb68d4a78" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0xb68d4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68d4c50"/>
        <function-ref name="getControl" scoped="" ref="0xb68d4d30"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68d4e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68d4ef0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68d2010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68d20f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68d21d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68d22b0"/>
        <function-ref name="setControl" scoped="" ref="0xb68d2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0xb68ab728" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0xb68ab728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68ab900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0xb68ab3d0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb68ab3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68ab5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0xb68aba80" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0xb68aba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68abc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0xb68ab068" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb68ab068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68ab250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb68c83a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb68c83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68c8578"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68c8658"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68c8738"/>
        <function-ref name="get" scoped="" ref="0xb68c8818"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68c88f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68c89d8"/>
        <function-ref name="getMode" scoped="" ref="0xb68c8ab8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68c8b98"/>
        <function-ref name="overflow" scoped="" ref="0xb68c8c78"/>
        <function-ref name="setMode" scoped="" ref="0xb68c8d58"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68c8e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0xb68a71d0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0xb68a71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68a73a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0xb68a8e50" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb68a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68a7050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0xb68a7528" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0xb68a7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68a7700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0xb68a8ae8" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb68a8ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68a8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb68a9d58" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb68a9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68a8010"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68a80f0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68a81d0"/>
        <function-ref name="get" scoped="" ref="0xb68a82b0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68a8390"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68a8470"/>
        <function-ref name="getMode" scoped="" ref="0xb68a8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68a8630"/>
        <function-ref name="overflow" scoped="" ref="0xb68a8710"/>
        <function-ref name="setMode" scoped="" ref="0xb68a87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68a88d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb687b430" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb687b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb687b608"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb687b6e8"/>
        <function-ref name="captured" scoped="" ref="0xb687b7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb687b8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb687b988"/>
        <function-ref name="setEdge" scoped="" ref="0xb687ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb68a42c8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb68a42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68a44a0"/>
        <function-ref name="getControl" scoped="" ref="0xb68a4580"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68a4660"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68a4740"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68a4820"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68a4900"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68a49e0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68a4ac0"/>
        <function-ref name="setControl" scoped="" ref="0xb68a4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb687a890" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb687a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb687aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68a4d20" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb68a4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68a4ef8"/>
        <function-ref name="setEvent" scoped="" ref="0xb687b010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb687b0f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb687b1d0"/>
        <function-ref name="fired" scoped="" ref="0xb687b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb687bbe8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb687bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb687bdc0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb687bea0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb687a010"/>
        <function-ref name="get" scoped="" ref="0xb687a0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb687a1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb687a2b0"/>
        <function-ref name="getMode" scoped="" ref="0xb687a390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb687a470"/>
        <function-ref name="overflow" scoped="" ref="0xb687a550"/>
        <function-ref name="setMode" scoped="" ref="0xb687a630"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb687a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6877350" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6877350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6877528"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6877608"/>
        <function-ref name="captured" scoped="" ref="0xb68776e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68777c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68778a8"/>
        <function-ref name="setEdge" scoped="" ref="0xb6877988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6878140" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6878140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6878318"/>
        <function-ref name="getControl" scoped="" ref="0xb68783f8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68784d8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68785b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6878698"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6878778"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6878858"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6878938"/>
        <function-ref name="setControl" scoped="" ref="0xb6878a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb68767b0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb68767b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6876988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6878b98" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6878b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6878d70"/>
        <function-ref name="setEvent" scoped="" ref="0xb6878e50"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6877010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68770f0"/>
        <function-ref name="fired" scoped="" ref="0xb68771d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6877b08" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6877b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6877ce0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6877dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6877ea0"/>
        <function-ref name="get" scoped="" ref="0xb6876010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68760f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68761d0"/>
        <function-ref name="getMode" scoped="" ref="0xb68762b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6876390"/>
        <function-ref name="overflow" scoped="" ref="0xb6876470"/>
        <function-ref name="setMode" scoped="" ref="0xb6876550"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6876630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6873198" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6873198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6873370"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6873450"/>
        <function-ref name="captured" scoped="" ref="0xb6873530"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6873610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68736f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68737d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6874050" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6874050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6874228"/>
        <function-ref name="getControl" scoped="" ref="0xb6874308"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68743e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68744c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68745a8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6874688"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6874768"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6874848"/>
        <function-ref name="setControl" scoped="" ref="0xb6874928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb68725f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb68725f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6874aa8" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6874aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6874c80"/>
        <function-ref name="setEvent" scoped="" ref="0xb6874d60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6874e40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6874f20"/>
        <function-ref name="fired" scoped="" ref="0xb6873018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6873950" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6873950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6873b28"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6873c08"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6873ce8"/>
        <function-ref name="get" scoped="" ref="0xb6873dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6873ea8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6872010"/>
        <function-ref name="getMode" scoped="" ref="0xb68720f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68721d0"/>
        <function-ref name="overflow" scoped="" ref="0xb68722b0"/>
        <function-ref name="setMode" scoped="" ref="0xb6872390"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6872470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb686f010" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb686f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb686f1e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb686f2c8"/>
        <function-ref name="captured" scoped="" ref="0xb686f3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686f488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686f568"/>
        <function-ref name="setEdge" scoped="" ref="0xb686f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6871e78" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6871e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6870070"/>
        <function-ref name="getControl" scoped="" ref="0xb6870150"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6870230"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6870310"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68703f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68704d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68705b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6870690"/>
        <function-ref name="setControl" scoped="" ref="0xb6870770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb686d430" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb686d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb686d608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68708f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb68708f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6870ac8"/>
        <function-ref name="setEvent" scoped="" ref="0xb6870ba8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6870c88"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6870d68"/>
        <function-ref name="fired" scoped="" ref="0xb6870e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb686f7c8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb686f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb686f9a0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb686fa80"/>
        <function-ref name="enableEvents" scoped="" ref="0xb686fb60"/>
        <function-ref name="get" scoped="" ref="0xb686fc40"/>
        <function-ref name="disableEvents" scoped="" ref="0xb686fd20"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686fe00"/>
        <function-ref name="getMode" scoped="" ref="0xb686fee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686d010"/>
        <function-ref name="overflow" scoped="" ref="0xb686d0f0"/>
        <function-ref name="setMode" scoped="" ref="0xb686d1d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb686d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb686be88" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb686be88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb686a070"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb686a150"/>
        <function-ref name="captured" scoped="" ref="0xb686a230"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686a310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686a3f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb686a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb686ccb8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb686ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb686ce90"/>
        <function-ref name="getControl" scoped="" ref="0xb686b010"/>
        <function-ref name="enableEvents" scoped="" ref="0xb686b0f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb686b1d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb686b2b0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb686b390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb686b470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb686b550"/>
        <function-ref name="setControl" scoped="" ref="0xb686b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6869278" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6869278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6869450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb686b7b0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb686b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb686b988"/>
        <function-ref name="setEvent" scoped="" ref="0xb686ba68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb686bb48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb686bc28"/>
        <function-ref name="fired" scoped="" ref="0xb686bd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb686a650" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb686a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb686a828"/>
        <function-ref name="setClockSource" scoped="" ref="0xb686a908"/>
        <function-ref name="enableEvents" scoped="" ref="0xb686a9e8"/>
        <function-ref name="get" scoped="" ref="0xb686aac8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb686aba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686ac88"/>
        <function-ref name="getMode" scoped="" ref="0xb686ad68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686ae48"/>
        <function-ref name="overflow" scoped="" ref="0xb686af28"/>
        <function-ref name="setMode" scoped="" ref="0xb6869018"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68690f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6867cc8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6867cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6867ea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6866010"/>
        <function-ref name="captured" scoped="" ref="0xb68660f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68661d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68662b0"/>
        <function-ref name="setEdge" scoped="" ref="0xb6866390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6868b00" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6868b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6868cd8"/>
        <function-ref name="getControl" scoped="" ref="0xb6868db8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6868e98"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6867010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68670f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68671d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68672b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6867390"/>
        <function-ref name="setControl" scoped="" ref="0xb6867470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6865190" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6865190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6865368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68675f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb68675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68677c8"/>
        <function-ref name="setEvent" scoped="" ref="0xb68678a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6867988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6867a68"/>
        <function-ref name="fired" scoped="" ref="0xb6867b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6866510" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6866510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68666e8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68667c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68668a8"/>
        <function-ref name="get" scoped="" ref="0xb6866988"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6866a68"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6866b48"/>
        <function-ref name="getMode" scoped="" ref="0xb6866c28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6866d08"/>
        <function-ref name="overflow" scoped="" ref="0xb6866de8"/>
        <function-ref name="setMode" scoped="" ref="0xb6866ec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6865010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6863be8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6863be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6863dc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6863ea0"/>
        <function-ref name="captured" scoped="" ref="0xb6862010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68620f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68621d0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68622b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6864a20" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6864a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6864bf8"/>
        <function-ref name="getControl" scoped="" ref="0xb6864cd8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6864db8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6864e98"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6863010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68630f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68631d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68632b0"/>
        <function-ref name="setControl" scoped="" ref="0xb6863390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6861080" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6861080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6861258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6863510" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6863510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68636e8"/>
        <function-ref name="setEvent" scoped="" ref="0xb68637c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68638a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6863988"/>
        <function-ref name="fired" scoped="" ref="0xb6863a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6862430" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6862430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6862608"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68626e8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68627c8"/>
        <function-ref name="get" scoped="" ref="0xb68628a8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6862988"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6862a68"/>
        <function-ref name="getMode" scoped="" ref="0xb6862b48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6862c28"/>
        <function-ref name="overflow" scoped="" ref="0xb6862d08"/>
        <function-ref name="setMode" scoped="" ref="0xb6862de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6862ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb685eb08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb685eb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb685ece0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb685edc0"/>
        <function-ref name="captured" scoped="" ref="0xb685eea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb685d010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb685d0f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb685d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb685f8f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb685f8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb685fad0"/>
        <function-ref name="getControl" scoped="" ref="0xb685fbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb685fc90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb685fd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb685fe50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb685e010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb685e0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb685e1d0"/>
        <function-ref name="setControl" scoped="" ref="0xb685e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb685c010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb685c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb685c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb685e430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb685e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb685e608"/>
        <function-ref name="setEvent" scoped="" ref="0xb685e6e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb685e7c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb685e8a8"/>
        <function-ref name="fired" scoped="" ref="0xb685e988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb685d350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb685d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb685d528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb685d608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb685d6e8"/>
        <function-ref name="get" scoped="" ref="0xb685d7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb685d8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb685d988"/>
        <function-ref name="getMode" scoped="" ref="0xb685da68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb685db48"/>
        <function-ref name="overflow" scoped="" ref="0xb685dc28"/>
        <function-ref name="setMode" scoped="" ref="0xb685dd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb685dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb685ab08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb685ab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb685ace0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb685adc0"/>
        <function-ref name="captured" scoped="" ref="0xb685aea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6859010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68590f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68591d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb685b8f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb685b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb685bad0"/>
        <function-ref name="getControl" scoped="" ref="0xb685bbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb685bc90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb685bd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb685be50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb685a010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb685a0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb685a1d0"/>
        <function-ref name="setControl" scoped="" ref="0xb685a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6858010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6858010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68581e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb685a430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb685a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb685a608"/>
        <function-ref name="setEvent" scoped="" ref="0xb685a6e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb685a7c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb685a8a8"/>
        <function-ref name="fired" scoped="" ref="0xb685a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6859350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6859350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6859528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6859608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68596e8"/>
        <function-ref name="get" scoped="" ref="0xb68597c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68598a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6859988"/>
        <function-ref name="getMode" scoped="" ref="0xb6859a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6859b48"/>
        <function-ref name="overflow" scoped="" ref="0xb6859c28"/>
        <function-ref name="setMode" scoped="" ref="0xb6859d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6859de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6856b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6856b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6856ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6856dc0"/>
        <function-ref name="captured" scoped="" ref="0xb6856ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6855010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68550f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb68578f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb68578f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6857ad0"/>
        <function-ref name="getControl" scoped="" ref="0xb6857bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6857c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6857d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6857e50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6856010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68560f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68561d0"/>
        <function-ref name="setControl" scoped="" ref="0xb68562b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6854010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6854010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68541e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6856430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6856430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6856608"/>
        <function-ref name="setEvent" scoped="" ref="0xb68566e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68567c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68568a8"/>
        <function-ref name="fired" scoped="" ref="0xb6856988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6855350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6855350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6855528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6855608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68556e8"/>
        <function-ref name="get" scoped="" ref="0xb68557c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68558a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6855988"/>
        <function-ref name="getMode" scoped="" ref="0xb6855a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6855b48"/>
        <function-ref name="overflow" scoped="" ref="0xb6855c28"/>
        <function-ref name="setMode" scoped="" ref="0xb6855d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6855de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0xb684f300" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0xb684f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684f4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0xb6853558" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0xb6853558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6853730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0xb68539e0" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0xb68539e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6853bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0xb6853e68" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0xb6853e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684f050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb69be600" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0xb69be600"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb69be7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb6c4d948" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0xb6c4d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb6c4db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb69bf680" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0xb69bf680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb69bf858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0xb6919818" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0xb6919818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0xb68350f0"/>
        <function-ref name="initTimerB" scoped="" ref="0xb6919ad0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0xb6919bb0"/>
        <function-ref name="initTimerA" scoped="" ref="0xb6919c90"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0xb69199f0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0xb6919d70"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0xb6919e50"/>
        <function-ref name="initClocks" scoped="" ref="0xb6835010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb6918648" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0xb6918648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6918820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb6931840" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0xb6931840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb6931a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb6918240" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0xb6918240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6918418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb6931bd8" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0xb6931bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6931db0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb6931e90"/>
        <function-ref name="runNextTask" scoped="" ref="0xb6918010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb6c4f2b8" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0xb6c4f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6c4f490"/>
        <function-ref name="runTask" scoped="" ref="0xb6c4f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb6c4ea78" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0xb6c4ea78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6c4ec50"/>
        <function-ref name="taskLoop" scoped="" ref="0xb6c4ed30"/>
        <function-ref name="runNextTask" scoped="" ref="0xb6c4ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb69d3238" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0xb69d3238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69d3410"/>
        <function-ref name="runTask" scoped="" ref="0xb69d34f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb69d3e90" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0xb69d3e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb69d2080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb69d49f0" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0xb69d49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69d4bc8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb69d4ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb69d4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb692e100" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb692e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb692e728"/>
        <function-ref name="readDone" scoped="" ref="0xb692e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb692ed08" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb692ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63c6ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0xb63c6350"/>
        <function-ref name="read" scoped="" ref="0xb63c6830"/>
        <function-ref name="readDone" scoped="" ref="0xb63c5048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0xb6934d20" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0xb6934d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb6934ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb5826e68" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb5826e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb58244b8"/>
        <function-ref name="readDone" scoped="" ref="0xb5824710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb5824ad8" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb5824ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5823200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0xb6803de0" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0xb6803de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb67ff010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb67ff0f0"/>
        <function-ref name="request" scoped="" ref="0xb67ff1d0"/>
        <function-ref name="granted" scoped="" ref="0xb67ff2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb67ff390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb6808300" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb6808300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6808928"/>
        <function-ref name="readDone" scoped="" ref="0xb6808b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0xb68047f0" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0xb68047f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6804e38"/>
        <function-ref name="readDone" scoped="" ref="0xb68060d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0xb6800808" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0xb6800808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb68009e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6800ac0"/>
        <function-ref name="request" scoped="" ref="0xb6800ba0"/>
        <function-ref name="granted" scoped="" ref="0xb6800c80"/>
        <function-ref name="isOwner" scoped="" ref="0xb6800d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb67ffab8" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0xb67ffab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb67fe120"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0xb67f3e08" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb67f3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67fd010"/>
        <function-ref name="configureSingle" scoped="" ref="0xb67fd0f0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb67fd1d0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb67fd2b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb67fd390"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb67fd470"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb67fd550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0xb6803300" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0xb6803300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb68034d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb68035b8"/>
        <function-ref name="request" scoped="" ref="0xb6803698"/>
        <function-ref name="granted" scoped="" ref="0xb6803778"/>
        <function-ref name="isOwner" scoped="" ref="0xb6803858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0xb67e2828" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0xb67e2828"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb67e2a00"/>
        <function-ref name="runTask" scoped="" ref="0xb67e2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb581d690" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb581d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb581d868"/>
        <function-ref name="configure" scoped="" ref="0xb581d948"/>
        <function-ref name="dataReady" scoped="" ref="0xb581da28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb581edc8" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb581edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb581d010"/>
        <function-ref name="configureSingle" scoped="" ref="0xb581d0f0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb581d1d0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb581d2b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb581d390"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb581d470"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb581d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb581db68" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb581db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb581dd40"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb581de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb581b070" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb581b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb581b6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb581e730" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb581e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb581e908"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb581e9e8"/>
        <function-ref name="request" scoped="" ref="0xb581eac8"/>
        <function-ref name="granted" scoped="" ref="0xb581eba8"/>
        <function-ref name="isOwner" scoped="" ref="0xb581ec88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0xb67bd010" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0xb67bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67bd1e8"/>
        <function-ref name="configure" scoped="" ref="0xb67bd2c8"/>
        <function-ref name="dataReady" scoped="" ref="0xb67bd3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0xb67bc120" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0xb67bc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb67bc2f8"/>
        <function-ref name="stop" scoped="" ref="0xb67bc3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0xb67bd900" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb67bd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb67bdad8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb67bdbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0xb67be310" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb67be310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67be4e8"/>
        <function-ref name="configureSingle" scoped="" ref="0xb67be5c8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb67be6a8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb67be788"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb67be868"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb67be948"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb67bea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb67c67d0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb67c67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb67c69a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb67c6a88"/>
        <function-ref name="request" scoped="" ref="0xb67c6b68"/>
        <function-ref name="granted" scoped="" ref="0xb67c6c48"/>
        <function-ref name="isOwner" scoped="" ref="0xb67c6d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0xb67b61f8" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0xb67b61f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67b63d0"/>
        <function-ref name="configure" scoped="" ref="0xb67b64b0"/>
        <function-ref name="dataReady" scoped="" ref="0xb67b6590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0xb67aa538" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0xb67aa538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0xb67aa710"/>
        <function-ref name="getMCtl" scoped="" ref="0xb67aa7f0"/>
        <function-ref name="resetIFGs" scoped="" ref="0xb67aa8d0"/>
        <function-ref name="isBusy" scoped="" ref="0xb67aa9b0"/>
        <function-ref name="conversionDone" scoped="" ref="0xb67aaa90"/>
        <function-ref name="getCtl1" scoped="" ref="0xb67aab70"/>
        <function-ref name="setMCtl" scoped="" ref="0xb67aac50"/>
        <function-ref name="startConversion" scoped="" ref="0xb67aad30"/>
        <function-ref name="setCtl0" scoped="" ref="0xb67aae10"/>
        <function-ref name="getMem" scoped="" ref="0xb67aaef0"/>
        <function-ref name="setIEFlags" scoped="" ref="0xb67b4010"/>
        <function-ref name="getIEFlags" scoped="" ref="0xb67b40f0"/>
        <function-ref name="stopConversion" scoped="" ref="0xb67b41d0"/>
        <function-ref name="enableConversion" scoped="" ref="0xb67b4330"/>
        <function-ref name="setCtl1" scoped="" ref="0xb67b4410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0xb679e748" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0xb679e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679e920"/>
        <function-ref name="isInput" scoped="" ref="0xb679ea00"/>
        <function-ref name="setResistor" scoped="" ref="0xb679eae0"/>
        <function-ref name="toggle" scoped="" ref="0xb679ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb679eca0"/>
        <function-ref name="getResistor" scoped="" ref="0xb679ed80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679ee60"/>
        <function-ref name="get" scoped="" ref="0xb679d010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb679d0f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb679d1d0"/>
        <function-ref name="set" scoped="" ref="0xb679d2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb679d390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb679d470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb679d5d0"/>
        <function-ref name="clr" scoped="" ref="0xb679d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0xb67a8258" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0xb67a8258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb67a8430"/>
        <function-ref name="setEvent" scoped="" ref="0xb67a8510"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb67a85f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb67a86d0"/>
        <function-ref name="fired" scoped="" ref="0xb67a87b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0xb67b3368" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0xb67b3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb67b3540"/>
        <function-ref name="getControl" scoped="" ref="0xb67b3620"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67b3700"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb67b37e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb67b38c0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67b39a0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb67b3a80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb67b3b60"/>
        <function-ref name="setControl" scoped="" ref="0xb67b3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0xb67b5310" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0xb67b5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb67b54e8"/>
        <function-ref name="stop" scoped="" ref="0xb67b55c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0xb67a63c8" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0xb67a63c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a65a0"/>
        <function-ref name="isInput" scoped="" ref="0xb67a6680"/>
        <function-ref name="setResistor" scoped="" ref="0xb67a6760"/>
        <function-ref name="toggle" scoped="" ref="0xb67a6840"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a6920"/>
        <function-ref name="getResistor" scoped="" ref="0xb67a6a00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a6ae0"/>
        <function-ref name="get" scoped="" ref="0xb67a6bc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb67a6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0xb67a6d80"/>
        <function-ref name="set" scoped="" ref="0xb67a6e60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb679f010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb679f0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb679f250"/>
        <function-ref name="clr" scoped="" ref="0xb679f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0xb67b6ae8" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb67b6ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb67b6cc0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb67b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0xb679bc88" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0xb679bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679be60"/>
        <function-ref name="isInput" scoped="" ref="0xb679a010"/>
        <function-ref name="setResistor" scoped="" ref="0xb679a0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb679a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb679a2b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb679a390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679a470"/>
        <function-ref name="get" scoped="" ref="0xb679a550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb679a630"/>
        <function-ref name="getRaw" scoped="" ref="0xb679a710"/>
        <function-ref name="set" scoped="" ref="0xb679a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb679a8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb679a9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb679ab10"/>
        <function-ref name="clr" scoped="" ref="0xb679abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0xb67a00d8" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0xb67a00d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a0330"/>
        <function-ref name="isInput" scoped="" ref="0xb67a0410"/>
        <function-ref name="setResistor" scoped="" ref="0xb67a04f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67a05d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a06b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb67a0790"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a0870"/>
        <function-ref name="get" scoped="" ref="0xb67a0950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb67a0a30"/>
        <function-ref name="getRaw" scoped="" ref="0xb67a0b10"/>
        <function-ref name="set" scoped="" ref="0xb67a0bf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb67a0cd0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb67a0db0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb67a0f10"/>
        <function-ref name="clr" scoped="" ref="0xb67a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb67bcc88" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb67bcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb67bce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0xb679d908" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0xb679d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679dae0"/>
        <function-ref name="isInput" scoped="" ref="0xb679dbc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb679dca0"/>
        <function-ref name="toggle" scoped="" ref="0xb679dd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb679de60"/>
        <function-ref name="getResistor" scoped="" ref="0xb679c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679c0f0"/>
        <function-ref name="get" scoped="" ref="0xb679c1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb679c2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb679c390"/>
        <function-ref name="set" scoped="" ref="0xb679c470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb679c550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb679c630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb679c790"/>
        <function-ref name="clr" scoped="" ref="0xb679c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0xb67b4620" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0xb67b4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67b47f8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb67b48d8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67b49b8"/>
        <function-ref name="get" scoped="" ref="0xb67b4a98"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67b4b78"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb67b4c58"/>
        <function-ref name="getMode" scoped="" ref="0xb67b4d38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb67b4e18"/>
        <function-ref name="overflow" scoped="" ref="0xb67b4ef8"/>
        <function-ref name="setMode" scoped="" ref="0xb67b3010"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb67b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0xb67b2818" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0xb67b2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb67b29f0"/>
        <function-ref name="userId" scoped="" ref="0xb67b2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0xb67b3eb8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0xb67b3eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb67a90c0"/>
        <function-ref name="getControl" scoped="" ref="0xb67a91a0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67a9280"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb67a9360"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb67a9440"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67a9520"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb67a9600"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb67a96e0"/>
        <function-ref name="setControl" scoped="" ref="0xb67a97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0xb67b84e0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb67b84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67b86b8"/>
        <function-ref name="configureSingle" scoped="" ref="0xb67b8798"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb67b8878"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb67b8958"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb67b8a38"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb67b8b18"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb67b8bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0xb679f588" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0xb679f588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679f760"/>
        <function-ref name="isInput" scoped="" ref="0xb679f840"/>
        <function-ref name="setResistor" scoped="" ref="0xb679f920"/>
        <function-ref name="toggle" scoped="" ref="0xb679fa00"/>
        <function-ref name="isOutput" scoped="" ref="0xb679fae0"/>
        <function-ref name="getResistor" scoped="" ref="0xb679fbc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679fca0"/>
        <function-ref name="get" scoped="" ref="0xb679fd80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb679fe60"/>
        <function-ref name="getRaw" scoped="" ref="0xb679e010"/>
        <function-ref name="set" scoped="" ref="0xb679e0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb679e1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb679e2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb679e410"/>
        <function-ref name="clr" scoped="" ref="0xb679e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0xb67a9a08" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0xb67a9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb67a9be0"/>
        <function-ref name="setEvent" scoped="" ref="0xb67a9cc0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb67a9da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb67a9e80"/>
        <function-ref name="fired" scoped="" ref="0xb67a8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0xb67a7268" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0xb67a7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67a7440"/>
        <function-ref name="isInput" scoped="" ref="0xb67a7520"/>
        <function-ref name="setResistor" scoped="" ref="0xb67a7600"/>
        <function-ref name="toggle" scoped="" ref="0xb67a76e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67a77c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb67a78a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb67a7980"/>
        <function-ref name="get" scoped="" ref="0xb67a7a60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb67a7b40"/>
        <function-ref name="getRaw" scoped="" ref="0xb67a7c20"/>
        <function-ref name="set" scoped="" ref="0xb67a7d00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb67a7de0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb67a7ec0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb67a6090"/>
        <function-ref name="clr" scoped="" ref="0xb67a6170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0xb679cac8" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0xb679cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb679cca0"/>
        <function-ref name="isInput" scoped="" ref="0xb679cd80"/>
        <function-ref name="setResistor" scoped="" ref="0xb679ce60"/>
        <function-ref name="toggle" scoped="" ref="0xb679b010"/>
        <function-ref name="isOutput" scoped="" ref="0xb679b0f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb679b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb679b2b0"/>
        <function-ref name="get" scoped="" ref="0xb679b390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb679b470"/>
        <function-ref name="getRaw" scoped="" ref="0xb679b550"/>
        <function-ref name="set" scoped="" ref="0xb679b630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb679b710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb679b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb679b950"/>
        <function-ref name="clr" scoped="" ref="0xb679ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0xb672a0b8" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0xb672a0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0xb672a290"/>
        <function-ref name="getMCtl" scoped="" ref="0xb672a370"/>
        <function-ref name="resetIFGs" scoped="" ref="0xb672a450"/>
        <function-ref name="isBusy" scoped="" ref="0xb672a530"/>
        <function-ref name="conversionDone" scoped="" ref="0xb672a610"/>
        <function-ref name="getCtl1" scoped="" ref="0xb672a6f0"/>
        <function-ref name="setMCtl" scoped="" ref="0xb672a7d0"/>
        <function-ref name="startConversion" scoped="" ref="0xb672a8b0"/>
        <function-ref name="setCtl0" scoped="" ref="0xb672a990"/>
        <function-ref name="getMem" scoped="" ref="0xb672aa70"/>
        <function-ref name="setIEFlags" scoped="" ref="0xb672ab50"/>
        <function-ref name="getIEFlags" scoped="" ref="0xb672ac30"/>
        <function-ref name="stopConversion" scoped="" ref="0xb672ad10"/>
        <function-ref name="enableConversion" scoped="" ref="0xb672ae70"/>
        <function-ref name="setCtl1" scoped="" ref="0xb6729010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb670a8b0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb670a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb670aa98"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb670ab78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb66d3208" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb66d3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb66d33f0"/>
        <function-ref name="configure" scoped="" ref="0xb66d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb670a170" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb670a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb670a358"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb670a438"/>
        <function-ref name="request" scoped="" ref="0xb670a518"/>
        <function-ref name="granted" scoped="" ref="0xb670a5f8"/>
        <function-ref name="isOwner" scoped="" ref="0xb670a6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb670acb8" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb670acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb670ae90"/>
        <function-ref name="userId" scoped="" ref="0xb66d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5806010" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5806010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb58061e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0xb5806348" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5806348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5806520"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5806600"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb58066e0"/>
        <function-ref name="dequeue" scoped="" ref="0xb58067c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5805a90" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5805a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5805c78"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5805d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb58043a8" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb58043a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5804590"/>
        <function-ref name="configure" scoped="" ref="0xb5804670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb58047d0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb58047d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb58049a8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5804a88"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5804b68"/>
        <function-ref name="dequeue" scoped="" ref="0xb5804c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5805350" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5805350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5805538"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5805618"/>
        <function-ref name="request" scoped="" ref="0xb58056f8"/>
        <function-ref name="granted" scoped="" ref="0xb58057d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb58058b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5805e98" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5805e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb58040c0"/>
        <function-ref name="userId" scoped="" ref="0xb58041a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5804dc8" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb5804dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5800010"/>
        <function-ref name="runTask" scoped="" ref="0xb58000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0xb66cad88" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0xb66cad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c9010"/>
        <function-ref name="isInput" scoped="" ref="0xb66c90f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c91d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66c92b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c9390"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c9470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c9550"/>
        <function-ref name="get" scoped="" ref="0xb66c9630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c9710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c97f0"/>
        <function-ref name="set" scoped="" ref="0xb66c98d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c99b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c9bf0"/>
        <function-ref name="clr" scoped="" ref="0xb66c9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0xb66bd010" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0xb66bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66bd1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66bd2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66bd3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb66bd488"/>
        <function-ref name="isOutput" scoped="" ref="0xb66bd568"/>
        <function-ref name="getResistor" scoped="" ref="0xb66bd648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66bd728"/>
        <function-ref name="get" scoped="" ref="0xb66bd808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66bd8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66bd9c8"/>
        <function-ref name="set" scoped="" ref="0xb66bdaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66bdb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66bdc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66bddc8"/>
        <function-ref name="clr" scoped="" ref="0xb66bdea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0xb6694158" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0xb6694158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6694330"/>
        <function-ref name="isInput" scoped="" ref="0xb6694410"/>
        <function-ref name="setResistor" scoped="" ref="0xb66944f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66945d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66946b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6694790"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6694870"/>
        <function-ref name="get" scoped="" ref="0xb6694950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6694a30"/>
        <function-ref name="getRaw" scoped="" ref="0xb6694b10"/>
        <function-ref name="set" scoped="" ref="0xb6694bf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6694cd0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6694db0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6694f10"/>
        <function-ref name="clr" scoped="" ref="0xb6693010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0xb6681e58" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0xb6681e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6680050"/>
        <function-ref name="isInput" scoped="" ref="0xb6680130"/>
        <function-ref name="setResistor" scoped="" ref="0xb6680210"/>
        <function-ref name="toggle" scoped="" ref="0xb66802f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66803d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66804b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6680590"/>
        <function-ref name="get" scoped="" ref="0xb6680670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6680750"/>
        <function-ref name="getRaw" scoped="" ref="0xb6680830"/>
        <function-ref name="set" scoped="" ref="0xb6680910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66809f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6680ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6680c30"/>
        <function-ref name="clr" scoped="" ref="0xb6680d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0xb6693280" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0xb6693280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6693458"/>
        <function-ref name="isInput" scoped="" ref="0xb6693538"/>
        <function-ref name="setResistor" scoped="" ref="0xb6693618"/>
        <function-ref name="toggle" scoped="" ref="0xb66936f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb66937d8"/>
        <function-ref name="getResistor" scoped="" ref="0xb66938b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6693998"/>
        <function-ref name="get" scoped="" ref="0xb6693a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6693b58"/>
        <function-ref name="getRaw" scoped="" ref="0xb6693c38"/>
        <function-ref name="set" scoped="" ref="0xb6693d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6693df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6693ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6692090"/>
        <function-ref name="clr" scoped="" ref="0xb6692170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0xb66bb368" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0xb66bb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66bb540"/>
        <function-ref name="isInput" scoped="" ref="0xb66bb620"/>
        <function-ref name="setResistor" scoped="" ref="0xb66bb700"/>
        <function-ref name="toggle" scoped="" ref="0xb66bb7e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66bb8c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66bb9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66bba80"/>
        <function-ref name="get" scoped="" ref="0xb66bbb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66bbc40"/>
        <function-ref name="getRaw" scoped="" ref="0xb66bbd20"/>
        <function-ref name="set" scoped="" ref="0xb66bbe00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66bbee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66ba010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66ba170"/>
        <function-ref name="clr" scoped="" ref="0xb66ba250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0xb66b05a8" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0xb66b05a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b0780"/>
        <function-ref name="isInput" scoped="" ref="0xb66b0860"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b0940"/>
        <function-ref name="toggle" scoped="" ref="0xb66b0a20"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b0b00"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b0be0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b0cc0"/>
        <function-ref name="get" scoped="" ref="0xb66b0da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b0e80"/>
        <function-ref name="getRaw" scoped="" ref="0xb66af010"/>
        <function-ref name="set" scoped="" ref="0xb66af0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66af1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66af2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66af410"/>
        <function-ref name="clr" scoped="" ref="0xb66af4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0xb66a5688" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0xb66a5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a5860"/>
        <function-ref name="isInput" scoped="" ref="0xb66a5940"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a5a20"/>
        <function-ref name="toggle" scoped="" ref="0xb66a5b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a5be0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a5cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a5da0"/>
        <function-ref name="get" scoped="" ref="0xb66a5e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a4010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a40f0"/>
        <function-ref name="set" scoped="" ref="0xb66a41d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a42b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a4390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a44f0"/>
        <function-ref name="clr" scoped="" ref="0xb66a45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0xb669b4c8" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0xb669b4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb669b6a0"/>
        <function-ref name="isInput" scoped="" ref="0xb669b780"/>
        <function-ref name="setResistor" scoped="" ref="0xb669b860"/>
        <function-ref name="toggle" scoped="" ref="0xb669b940"/>
        <function-ref name="isOutput" scoped="" ref="0xb669ba20"/>
        <function-ref name="getResistor" scoped="" ref="0xb669bb00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb669bbe0"/>
        <function-ref name="get" scoped="" ref="0xb669bcc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb669bda0"/>
        <function-ref name="getRaw" scoped="" ref="0xb669be80"/>
        <function-ref name="set" scoped="" ref="0xb669a010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb669a0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb669a1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb669a330"/>
        <function-ref name="clr" scoped="" ref="0xb669a410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0xb6690760" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0xb6690760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6690938"/>
        <function-ref name="isInput" scoped="" ref="0xb6690a18"/>
        <function-ref name="setResistor" scoped="" ref="0xb6690af8"/>
        <function-ref name="toggle" scoped="" ref="0xb6690bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6690cb8"/>
        <function-ref name="getResistor" scoped="" ref="0xb6690d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6690e78"/>
        <function-ref name="get" scoped="" ref="0xb668f010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb668f0f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb668f1d0"/>
        <function-ref name="set" scoped="" ref="0xb668f2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb668f390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb668f470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb668f5d0"/>
        <function-ref name="clr" scoped="" ref="0xb668f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0xb66873d8" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0xb66873d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66875b0"/>
        <function-ref name="isInput" scoped="" ref="0xb6687690"/>
        <function-ref name="setResistor" scoped="" ref="0xb6687770"/>
        <function-ref name="toggle" scoped="" ref="0xb6687850"/>
        <function-ref name="isOutput" scoped="" ref="0xb6687930"/>
        <function-ref name="getResistor" scoped="" ref="0xb6687a10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6687af0"/>
        <function-ref name="get" scoped="" ref="0xb6687bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6687cb0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6687d90"/>
        <function-ref name="set" scoped="" ref="0xb6687e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6686010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66860f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6686250"/>
        <function-ref name="clr" scoped="" ref="0xb6686330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0xb667c3e0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0xb667c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb667c5b8"/>
        <function-ref name="isInput" scoped="" ref="0xb667c698"/>
        <function-ref name="setResistor" scoped="" ref="0xb667c778"/>
        <function-ref name="toggle" scoped="" ref="0xb667c858"/>
        <function-ref name="isOutput" scoped="" ref="0xb667c938"/>
        <function-ref name="getResistor" scoped="" ref="0xb667ca18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb667caf8"/>
        <function-ref name="get" scoped="" ref="0xb667cbd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb667ccb8"/>
        <function-ref name="getRaw" scoped="" ref="0xb667cd98"/>
        <function-ref name="set" scoped="" ref="0xb667ce78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb667b010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb667b0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb667b250"/>
        <function-ref name="clr" scoped="" ref="0xb667b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0xb66c6368" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0xb66c6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c6540"/>
        <function-ref name="isInput" scoped="" ref="0xb66c6620"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c6700"/>
        <function-ref name="toggle" scoped="" ref="0xb66c67e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c68c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c69a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c6a80"/>
        <function-ref name="get" scoped="" ref="0xb66c6b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c6c40"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c6d20"/>
        <function-ref name="set" scoped="" ref="0xb66c6e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c6ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c4010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c4170"/>
        <function-ref name="clr" scoped="" ref="0xb66c4250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0xb668f920" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0xb668f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb668faf8"/>
        <function-ref name="isInput" scoped="" ref="0xb668fbd8"/>
        <function-ref name="setResistor" scoped="" ref="0xb668fcb8"/>
        <function-ref name="toggle" scoped="" ref="0xb668fd98"/>
        <function-ref name="isOutput" scoped="" ref="0xb668fe78"/>
        <function-ref name="getResistor" scoped="" ref="0xb668e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb668e0f0"/>
        <function-ref name="get" scoped="" ref="0xb668e1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb668e2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb668e390"/>
        <function-ref name="set" scoped="" ref="0xb668e470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb668e550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb668e630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb668e790"/>
        <function-ref name="clr" scoped="" ref="0xb668e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0xb66c3688" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0xb66c3688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c3860"/>
        <function-ref name="isInput" scoped="" ref="0xb66c3940"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c3a20"/>
        <function-ref name="toggle" scoped="" ref="0xb66c3b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c3be0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c3cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c3da0"/>
        <function-ref name="get" scoped="" ref="0xb66c3e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c2010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c20f0"/>
        <function-ref name="set" scoped="" ref="0xb66c21d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c22b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c2390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c24f0"/>
        <function-ref name="clr" scoped="" ref="0xb66c25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0xb66b8848" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0xb66b8848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b8a20"/>
        <function-ref name="isInput" scoped="" ref="0xb66b8b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b8be0"/>
        <function-ref name="toggle" scoped="" ref="0xb66b8cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b8da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b8e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b7010"/>
        <function-ref name="get" scoped="" ref="0xb66b70f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b71d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b72b0"/>
        <function-ref name="set" scoped="" ref="0xb66b7390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b7470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b7550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b76b0"/>
        <function-ref name="clr" scoped="" ref="0xb66b7790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0xb66adae8" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0xb66adae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66adcc0"/>
        <function-ref name="isInput" scoped="" ref="0xb66adda0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66ade80"/>
        <function-ref name="toggle" scoped="" ref="0xb66ac010"/>
        <function-ref name="isOutput" scoped="" ref="0xb66ac0f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66ac1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ac2b0"/>
        <function-ref name="get" scoped="" ref="0xb66ac390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66ac470"/>
        <function-ref name="getRaw" scoped="" ref="0xb66ac550"/>
        <function-ref name="set" scoped="" ref="0xb66ac630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66ac710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66ac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66ac950"/>
        <function-ref name="clr" scoped="" ref="0xb66aca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0xb66a2bc8" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0xb66a2bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a2da0"/>
        <function-ref name="isInput" scoped="" ref="0xb66a2e80"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a1010"/>
        <function-ref name="toggle" scoped="" ref="0xb66a10f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a11d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a1390"/>
        <function-ref name="get" scoped="" ref="0xb66a1470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a1550"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a1630"/>
        <function-ref name="set" scoped="" ref="0xb66a1710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a18d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a1a30"/>
        <function-ref name="clr" scoped="" ref="0xb66a1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0xb6698a08" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0xb6698a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6698be0"/>
        <function-ref name="isInput" scoped="" ref="0xb6698cc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6698da0"/>
        <function-ref name="toggle" scoped="" ref="0xb6698e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6697010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66970f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66971d0"/>
        <function-ref name="get" scoped="" ref="0xb66972b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6697390"/>
        <function-ref name="getRaw" scoped="" ref="0xb6697470"/>
        <function-ref name="set" scoped="" ref="0xb6697550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6697630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6697710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6697870"/>
        <function-ref name="clr" scoped="" ref="0xb6697950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0xb66cca08" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0xb66cca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ccbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb66cccc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66ccda0"/>
        <function-ref name="toggle" scoped="" ref="0xb66cce80"/>
        <function-ref name="isOutput" scoped="" ref="0xb66cb010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66cb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66cb1d0"/>
        <function-ref name="get" scoped="" ref="0xb66cb2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66cb390"/>
        <function-ref name="getRaw" scoped="" ref="0xb66cb470"/>
        <function-ref name="set" scoped="" ref="0xb66cb550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66cb630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66cb710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66cb870"/>
        <function-ref name="clr" scoped="" ref="0xb66cb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0xb66c0bc8" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0xb66c0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c0e20"/>
        <function-ref name="isInput" scoped="" ref="0xb66c0f00"/>
        <function-ref name="setResistor" scoped="" ref="0xb66bf010"/>
        <function-ref name="toggle" scoped="" ref="0xb66bf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66bf1d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66bf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66bf390"/>
        <function-ref name="get" scoped="" ref="0xb66bf470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66bf550"/>
        <function-ref name="getRaw" scoped="" ref="0xb66bf630"/>
        <function-ref name="set" scoped="" ref="0xb66bf710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66bf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66bf8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66bfa30"/>
        <function-ref name="clr" scoped="" ref="0xb66bfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0xb66b5d88" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0xb66b5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b4010"/>
        <function-ref name="isInput" scoped="" ref="0xb66b40f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b41d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66b42b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b4390"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b4470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b4550"/>
        <function-ref name="get" scoped="" ref="0xb66b4630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b4710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b47f0"/>
        <function-ref name="set" scoped="" ref="0xb66b48d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b49b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b4a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b4bf0"/>
        <function-ref name="clr" scoped="" ref="0xb66b4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0xb6695010" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0xb6695010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66951e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66952c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66953a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6695488"/>
        <function-ref name="isOutput" scoped="" ref="0xb6695568"/>
        <function-ref name="getResistor" scoped="" ref="0xb6695648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6695728"/>
        <function-ref name="get" scoped="" ref="0xb6695808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66958e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66959c8"/>
        <function-ref name="set" scoped="" ref="0xb6695aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6695b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6695c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6695dc8"/>
        <function-ref name="clr" scoped="" ref="0xb6695ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0xb6684918" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0xb6684918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6684af0"/>
        <function-ref name="isInput" scoped="" ref="0xb6684bd0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6684cb0"/>
        <function-ref name="toggle" scoped="" ref="0xb6684d90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6684e70"/>
        <function-ref name="getResistor" scoped="" ref="0xb6683010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66830f0"/>
        <function-ref name="get" scoped="" ref="0xb66831d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66832b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6683390"/>
        <function-ref name="set" scoped="" ref="0xb6683470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6683550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6683630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6683790"/>
        <function-ref name="clr" scoped="" ref="0xb6683870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0xb667d280" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0xb667d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb667d458"/>
        <function-ref name="isInput" scoped="" ref="0xb667d538"/>
        <function-ref name="setResistor" scoped="" ref="0xb667d618"/>
        <function-ref name="toggle" scoped="" ref="0xb667d6f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb667d7d8"/>
        <function-ref name="getResistor" scoped="" ref="0xb667d8b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb667d998"/>
        <function-ref name="get" scoped="" ref="0xb667da78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb667db58"/>
        <function-ref name="getRaw" scoped="" ref="0xb667dc38"/>
        <function-ref name="set" scoped="" ref="0xb667dd18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb667ddf8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb667ded8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb667c090"/>
        <function-ref name="clr" scoped="" ref="0xb667c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0xb668a010" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0xb668a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb668a1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb668a2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb668a3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb668a488"/>
        <function-ref name="isOutput" scoped="" ref="0xb668a568"/>
        <function-ref name="getResistor" scoped="" ref="0xb668a648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb668a728"/>
        <function-ref name="get" scoped="" ref="0xb668a808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb668a8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb668a9c8"/>
        <function-ref name="set" scoped="" ref="0xb668aaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb668ab88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb668ac68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb668adc8"/>
        <function-ref name="clr" scoped="" ref="0xb668aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0xb66b2178" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0xb66b2178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b2450"/>
        <function-ref name="isInput" scoped="" ref="0xb66b2530"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b2610"/>
        <function-ref name="toggle" scoped="" ref="0xb66b26f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b27d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b2990"/>
        <function-ref name="get" scoped="" ref="0xb66b2a70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b2b50"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b2c30"/>
        <function-ref name="set" scoped="" ref="0xb66b2d10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b2df0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b2ed0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b1090"/>
        <function-ref name="clr" scoped="" ref="0xb66b1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0xb66a7368" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0xb66a7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a7540"/>
        <function-ref name="isInput" scoped="" ref="0xb66a7620"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a7700"/>
        <function-ref name="toggle" scoped="" ref="0xb66a77e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a78c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a79a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a7a80"/>
        <function-ref name="get" scoped="" ref="0xb66a7b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a7c40"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a7d20"/>
        <function-ref name="set" scoped="" ref="0xb66a7e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a7ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a6010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a6170"/>
        <function-ref name="clr" scoped="" ref="0xb66a6250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0xb669e178" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0xb669e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb669e350"/>
        <function-ref name="isInput" scoped="" ref="0xb669e430"/>
        <function-ref name="setResistor" scoped="" ref="0xb669e510"/>
        <function-ref name="toggle" scoped="" ref="0xb669e5f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb669e6d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb669e7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb669e890"/>
        <function-ref name="get" scoped="" ref="0xb669e970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb669ea50"/>
        <function-ref name="getRaw" scoped="" ref="0xb669eb30"/>
        <function-ref name="set" scoped="" ref="0xb669ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb669ecf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb669edd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb669d010"/>
        <function-ref name="clr" scoped="" ref="0xb669d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0xb6683ad8" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0xb6683ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6683cb0"/>
        <function-ref name="isInput" scoped="" ref="0xb6683d90"/>
        <function-ref name="setResistor" scoped="" ref="0xb6683e70"/>
        <function-ref name="toggle" scoped="" ref="0xb6682010"/>
        <function-ref name="isOutput" scoped="" ref="0xb66820f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66822b0"/>
        <function-ref name="get" scoped="" ref="0xb6682390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6682470"/>
        <function-ref name="getRaw" scoped="" ref="0xb6682550"/>
        <function-ref name="set" scoped="" ref="0xb6682630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6682710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6682950"/>
        <function-ref name="clr" scoped="" ref="0xb6682a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0xb668ead8" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0xb668ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb668ecb0"/>
        <function-ref name="isInput" scoped="" ref="0xb668ed90"/>
        <function-ref name="setResistor" scoped="" ref="0xb668ee70"/>
        <function-ref name="toggle" scoped="" ref="0xb668d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb668d0f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb668d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb668d2b0"/>
        <function-ref name="get" scoped="" ref="0xb668d390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb668d470"/>
        <function-ref name="getRaw" scoped="" ref="0xb668d550"/>
        <function-ref name="set" scoped="" ref="0xb668d630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb668d710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb668d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb668d950"/>
        <function-ref name="clr" scoped="" ref="0xb668da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0xb66c8010" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0xb66c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c81e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66c82c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c83a8"/>
        <function-ref name="toggle" scoped="" ref="0xb66c8488"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c8568"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c8648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c8728"/>
        <function-ref name="get" scoped="" ref="0xb66c8808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c88e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c89c8"/>
        <function-ref name="set" scoped="" ref="0xb66c8aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c8b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c8c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c8dc8"/>
        <function-ref name="clr" scoped="" ref="0xb66c8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0xb66bc178" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0xb66bc178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66bc350"/>
        <function-ref name="isInput" scoped="" ref="0xb66bc430"/>
        <function-ref name="setResistor" scoped="" ref="0xb66bc510"/>
        <function-ref name="toggle" scoped="" ref="0xb66bc5f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66bc6d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66bc7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66bc890"/>
        <function-ref name="get" scoped="" ref="0xb66bc970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66bca50"/>
        <function-ref name="getRaw" scoped="" ref="0xb66bcb30"/>
        <function-ref name="set" scoped="" ref="0xb66bcc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66bccf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66bcdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66bb010"/>
        <function-ref name="clr" scoped="" ref="0xb66bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0xb66a1d88" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0xb66a1d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a0010"/>
        <function-ref name="isInput" scoped="" ref="0xb66a00f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a01d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66a02b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a0390"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a0470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a0550"/>
        <function-ref name="get" scoped="" ref="0xb66a0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a0710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a07f0"/>
        <function-ref name="set" scoped="" ref="0xb66a08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a0bf0"/>
        <function-ref name="clr" scoped="" ref="0xb66a0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0xb66ba4c8" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0xb66ba4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ba6a0"/>
        <function-ref name="isInput" scoped="" ref="0xb66ba780"/>
        <function-ref name="setResistor" scoped="" ref="0xb66ba860"/>
        <function-ref name="toggle" scoped="" ref="0xb66ba940"/>
        <function-ref name="isOutput" scoped="" ref="0xb66baa20"/>
        <function-ref name="getResistor" scoped="" ref="0xb66bab00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66babe0"/>
        <function-ref name="get" scoped="" ref="0xb66bacc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66bada0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66bae80"/>
        <function-ref name="set" scoped="" ref="0xb66b9010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b90f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b91d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b9330"/>
        <function-ref name="clr" scoped="" ref="0xb66b9410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0xb66af768" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0xb66af768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66af940"/>
        <function-ref name="isInput" scoped="" ref="0xb66afa20"/>
        <function-ref name="setResistor" scoped="" ref="0xb66afb00"/>
        <function-ref name="toggle" scoped="" ref="0xb66afbe0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66afcc0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66afda0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66afe80"/>
        <function-ref name="get" scoped="" ref="0xb66ae010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66ae0f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66ae1d0"/>
        <function-ref name="set" scoped="" ref="0xb66ae2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66ae390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66ae470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66ae5d0"/>
        <function-ref name="clr" scoped="" ref="0xb66ae6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0xb66a4848" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0xb66a4848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a4a20"/>
        <function-ref name="isInput" scoped="" ref="0xb66a4b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a4be0"/>
        <function-ref name="toggle" scoped="" ref="0xb66a4cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a4da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a4e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a3010"/>
        <function-ref name="get" scoped="" ref="0xb66a30f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a31d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a32b0"/>
        <function-ref name="set" scoped="" ref="0xb66a3390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a3470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a3550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a36b0"/>
        <function-ref name="clr" scoped="" ref="0xb66a3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0xb669a688" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0xb669a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb669a860"/>
        <function-ref name="isInput" scoped="" ref="0xb669a940"/>
        <function-ref name="setResistor" scoped="" ref="0xb669aa20"/>
        <function-ref name="toggle" scoped="" ref="0xb669ab00"/>
        <function-ref name="isOutput" scoped="" ref="0xb669abe0"/>
        <function-ref name="getResistor" scoped="" ref="0xb669acc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb669ada0"/>
        <function-ref name="get" scoped="" ref="0xb669ae80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6699010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66990f0"/>
        <function-ref name="set" scoped="" ref="0xb66991d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66992b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6699390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66994f0"/>
        <function-ref name="clr" scoped="" ref="0xb66995d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0xb668ce60" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0xb668ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb668b050"/>
        <function-ref name="isInput" scoped="" ref="0xb668b130"/>
        <function-ref name="setResistor" scoped="" ref="0xb668b210"/>
        <function-ref name="toggle" scoped="" ref="0xb668b2f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb668b3d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb668b4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb668b590"/>
        <function-ref name="get" scoped="" ref="0xb668b670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb668b750"/>
        <function-ref name="getRaw" scoped="" ref="0xb668b830"/>
        <function-ref name="set" scoped="" ref="0xb668b910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb668b9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb668bad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb668bc30"/>
        <function-ref name="clr" scoped="" ref="0xb668bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0xb66d16a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0xb66d16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66d1878"/>
        <function-ref name="isInput" scoped="" ref="0xb66d1958"/>
        <function-ref name="setResistor" scoped="" ref="0xb66d1a38"/>
        <function-ref name="toggle" scoped="" ref="0xb66d1b18"/>
        <function-ref name="isOutput" scoped="" ref="0xb66d1bf8"/>
        <function-ref name="getResistor" scoped="" ref="0xb66d1cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66d1db8"/>
        <function-ref name="get" scoped="" ref="0xb66d1e98"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66cd010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66cd0f0"/>
        <function-ref name="set" scoped="" ref="0xb66cd1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66cd2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66cd390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66cd4f0"/>
        <function-ref name="clr" scoped="" ref="0xb66cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0xb66c2848" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0xb66c2848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c2a20"/>
        <function-ref name="isInput" scoped="" ref="0xb66c2b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c2be0"/>
        <function-ref name="toggle" scoped="" ref="0xb66c2cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c2da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c2e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c1010"/>
        <function-ref name="get" scoped="" ref="0xb66c10f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c11d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c12b0"/>
        <function-ref name="set" scoped="" ref="0xb66c1390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c1470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c1550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c16b0"/>
        <function-ref name="clr" scoped="" ref="0xb66c1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0xb66b7a08" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0xb66b7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b7be0"/>
        <function-ref name="isInput" scoped="" ref="0xb66b7cc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b7da0"/>
        <function-ref name="toggle" scoped="" ref="0xb66b7e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b6010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b61d0"/>
        <function-ref name="get" scoped="" ref="0xb66b62b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b6390"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b6470"/>
        <function-ref name="set" scoped="" ref="0xb66b6550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b6630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b6710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b6870"/>
        <function-ref name="clr" scoped="" ref="0xb66b6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0xb66acca8" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0xb66acca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66ace80"/>
        <function-ref name="isInput" scoped="" ref="0xb66ab010"/>
        <function-ref name="setResistor" scoped="" ref="0xb66ab0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66ab1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66ab2b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66ab390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ab470"/>
        <function-ref name="get" scoped="" ref="0xb66ab550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66ab630"/>
        <function-ref name="getRaw" scoped="" ref="0xb66ab710"/>
        <function-ref name="set" scoped="" ref="0xb66ab7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66ab8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66ab9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66abb10"/>
        <function-ref name="clr" scoped="" ref="0xb66abbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0xb6689170" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0xb6689170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6689348"/>
        <function-ref name="isInput" scoped="" ref="0xb6689428"/>
        <function-ref name="setResistor" scoped="" ref="0xb6689508"/>
        <function-ref name="toggle" scoped="" ref="0xb66895e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb66896c8"/>
        <function-ref name="getResistor" scoped="" ref="0xb66897a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6689888"/>
        <function-ref name="get" scoped="" ref="0xb6689968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6689a48"/>
        <function-ref name="getRaw" scoped="" ref="0xb6689b28"/>
        <function-ref name="set" scoped="" ref="0xb6689c08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6689ce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6689dc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6689f28"/>
        <function-ref name="clr" scoped="" ref="0xb6688018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0xb6686598" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0xb6686598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6686770"/>
        <function-ref name="isInput" scoped="" ref="0xb6686850"/>
        <function-ref name="setResistor" scoped="" ref="0xb6686930"/>
        <function-ref name="toggle" scoped="" ref="0xb6686a10"/>
        <function-ref name="isOutput" scoped="" ref="0xb6686af0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6686bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6686cb0"/>
        <function-ref name="get" scoped="" ref="0xb6686d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6686e70"/>
        <function-ref name="getRaw" scoped="" ref="0xb6685010"/>
        <function-ref name="set" scoped="" ref="0xb66850f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66851d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66852b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6685410"/>
        <function-ref name="clr" scoped="" ref="0xb66854f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0xb667f010" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0xb667f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb667f1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb667f2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb667f3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb667f488"/>
        <function-ref name="isOutput" scoped="" ref="0xb667f568"/>
        <function-ref name="getResistor" scoped="" ref="0xb667f648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb667f728"/>
        <function-ref name="get" scoped="" ref="0xb667f808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb667f8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb667f9c8"/>
        <function-ref name="set" scoped="" ref="0xb667faa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb667fb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb667fc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb667fdc8"/>
        <function-ref name="clr" scoped="" ref="0xb667fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0xb66a9010" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0xb66a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a91e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66a92c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a93a8"/>
        <function-ref name="toggle" scoped="" ref="0xb66a9488"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a9568"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a9648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a9728"/>
        <function-ref name="get" scoped="" ref="0xb66a9808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a98e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a99c8"/>
        <function-ref name="set" scoped="" ref="0xb66a9aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a9b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a9c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a9dc8"/>
        <function-ref name="clr" scoped="" ref="0xb66a9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0xb6688288" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0xb6688288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6688460"/>
        <function-ref name="isInput" scoped="" ref="0xb6688540"/>
        <function-ref name="setResistor" scoped="" ref="0xb6688620"/>
        <function-ref name="toggle" scoped="" ref="0xb6688700"/>
        <function-ref name="isOutput" scoped="" ref="0xb66887e0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66888c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66889a0"/>
        <function-ref name="get" scoped="" ref="0xb6688a80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6688b60"/>
        <function-ref name="getRaw" scoped="" ref="0xb6688c40"/>
        <function-ref name="set" scoped="" ref="0xb6688d20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6688e00"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6688ee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6687090"/>
        <function-ref name="clr" scoped="" ref="0xb6687170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0xb66cbbc8" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0xb66cbbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66cbda0"/>
        <function-ref name="isInput" scoped="" ref="0xb66cbe80"/>
        <function-ref name="setResistor" scoped="" ref="0xb66ca010"/>
        <function-ref name="toggle" scoped="" ref="0xb66ca0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66ca1d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66ca2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ca390"/>
        <function-ref name="get" scoped="" ref="0xb66ca470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66ca550"/>
        <function-ref name="getRaw" scoped="" ref="0xb66ca630"/>
        <function-ref name="set" scoped="" ref="0xb66ca710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66ca7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66ca8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66caa30"/>
        <function-ref name="clr" scoped="" ref="0xb66cab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0xb66bfd88" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0xb66bfd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66be010"/>
        <function-ref name="isInput" scoped="" ref="0xb66be0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66be1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66be2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66be390"/>
        <function-ref name="getResistor" scoped="" ref="0xb66be470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66be550"/>
        <function-ref name="get" scoped="" ref="0xb66be630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66be710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66be7f0"/>
        <function-ref name="set" scoped="" ref="0xb66be8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66be9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66bea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66bebf0"/>
        <function-ref name="clr" scoped="" ref="0xb66becd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0xb66b3010" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0xb66b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b31e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66b32c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b33a8"/>
        <function-ref name="toggle" scoped="" ref="0xb66b3488"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b3568"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b3648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b3728"/>
        <function-ref name="get" scoped="" ref="0xb66b3808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b38e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b39c8"/>
        <function-ref name="set" scoped="" ref="0xb66b3aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b3b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b3c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b3dc8"/>
        <function-ref name="clr" scoped="" ref="0xb66b3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0xb668dca0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0xb668dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb668de78"/>
        <function-ref name="isInput" scoped="" ref="0xb668c010"/>
        <function-ref name="setResistor" scoped="" ref="0xb668c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb668c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb668c2b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb668c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb668c470"/>
        <function-ref name="get" scoped="" ref="0xb668c550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb668c630"/>
        <function-ref name="getRaw" scoped="" ref="0xb668c710"/>
        <function-ref name="set" scoped="" ref="0xb668c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb668c8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb668c9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb668cb10"/>
        <function-ref name="clr" scoped="" ref="0xb668cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0xb6682c98" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0xb6682c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6682e70"/>
        <function-ref name="isInput" scoped="" ref="0xb6681010"/>
        <function-ref name="setResistor" scoped="" ref="0xb66810f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66811d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66812b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6681390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6681470"/>
        <function-ref name="get" scoped="" ref="0xb6681550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6681630"/>
        <function-ref name="getRaw" scoped="" ref="0xb6681710"/>
        <function-ref name="set" scoped="" ref="0xb66817f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66818d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66819b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6681b10"/>
        <function-ref name="clr" scoped="" ref="0xb6681bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0xb66b13e8" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0xb66b13e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b15c0"/>
        <function-ref name="isInput" scoped="" ref="0xb66b16a0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b1780"/>
        <function-ref name="toggle" scoped="" ref="0xb66b1860"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b1940"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b1a20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b1b00"/>
        <function-ref name="get" scoped="" ref="0xb66b1be0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b1cc0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b1da0"/>
        <function-ref name="set" scoped="" ref="0xb66b1e80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b0010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b00f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b0250"/>
        <function-ref name="clr" scoped="" ref="0xb66b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0xb66a64c8" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0xb66a64c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a66a0"/>
        <function-ref name="isInput" scoped="" ref="0xb66a6780"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a6860"/>
        <function-ref name="toggle" scoped="" ref="0xb66a6940"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a6a20"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a6b00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a6be0"/>
        <function-ref name="get" scoped="" ref="0xb66a6cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a6da0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a6e80"/>
        <function-ref name="set" scoped="" ref="0xb66a5010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a50f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a51d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a5330"/>
        <function-ref name="clr" scoped="" ref="0xb66a5410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0xb669d368" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0xb669d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb669d540"/>
        <function-ref name="isInput" scoped="" ref="0xb669d620"/>
        <function-ref name="setResistor" scoped="" ref="0xb669d700"/>
        <function-ref name="toggle" scoped="" ref="0xb669d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb669d8c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb669d9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb669da80"/>
        <function-ref name="get" scoped="" ref="0xb669db60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb669dc40"/>
        <function-ref name="getRaw" scoped="" ref="0xb669dd20"/>
        <function-ref name="set" scoped="" ref="0xb669de00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb669dee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb669b010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb669b170"/>
        <function-ref name="clr" scoped="" ref="0xb669b250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0xb66c7178" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0xb66c7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c7350"/>
        <function-ref name="isInput" scoped="" ref="0xb66c7430"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c7510"/>
        <function-ref name="toggle" scoped="" ref="0xb66c75f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c76d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c77b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c7890"/>
        <function-ref name="get" scoped="" ref="0xb66c7970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c7a50"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c7b30"/>
        <function-ref name="set" scoped="" ref="0xb66c7c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c7cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c7dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c6010"/>
        <function-ref name="clr" scoped="" ref="0xb66c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0xb669f010" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0xb669f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb669f1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb669f2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb669f3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb669f488"/>
        <function-ref name="isOutput" scoped="" ref="0xb669f568"/>
        <function-ref name="getResistor" scoped="" ref="0xb669f648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb669f728"/>
        <function-ref name="get" scoped="" ref="0xb669f808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb669f8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb669f9c8"/>
        <function-ref name="set" scoped="" ref="0xb669faa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb669fb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb669fc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb669fdc8"/>
        <function-ref name="clr" scoped="" ref="0xb669fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0xb66c44c8" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0xb66c44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c46a0"/>
        <function-ref name="isInput" scoped="" ref="0xb66c4780"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c4860"/>
        <function-ref name="toggle" scoped="" ref="0xb66c4940"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c4a20"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c4b00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c4be0"/>
        <function-ref name="get" scoped="" ref="0xb66c4cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c4da0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c4e80"/>
        <function-ref name="set" scoped="" ref="0xb66c3010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c30f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c31d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c3330"/>
        <function-ref name="clr" scoped="" ref="0xb66c3410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0xb66b9688" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0xb66b9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b9860"/>
        <function-ref name="isInput" scoped="" ref="0xb66b9940"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b9a20"/>
        <function-ref name="toggle" scoped="" ref="0xb66b9b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b9be0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b9cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b9da0"/>
        <function-ref name="get" scoped="" ref="0xb66b9e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b8010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b80f0"/>
        <function-ref name="set" scoped="" ref="0xb66b81d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b82b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b8390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b84f0"/>
        <function-ref name="clr" scoped="" ref="0xb66b85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0xb66ae928" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0xb66ae928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66aeb00"/>
        <function-ref name="isInput" scoped="" ref="0xb66aebe0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66aecc0"/>
        <function-ref name="toggle" scoped="" ref="0xb66aeda0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66aee80"/>
        <function-ref name="getResistor" scoped="" ref="0xb66ad010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66ad0f0"/>
        <function-ref name="get" scoped="" ref="0xb66ad1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66ad2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66ad390"/>
        <function-ref name="set" scoped="" ref="0xb66ad470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66ad550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66ad630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66ad790"/>
        <function-ref name="clr" scoped="" ref="0xb66ad870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0xb66a3a08" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0xb66a3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a3be0"/>
        <function-ref name="isInput" scoped="" ref="0xb66a3cc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a3da0"/>
        <function-ref name="toggle" scoped="" ref="0xb66a3e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a2010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a21d0"/>
        <function-ref name="get" scoped="" ref="0xb66a22b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a2390"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a2470"/>
        <function-ref name="set" scoped="" ref="0xb66a2550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a2630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a2710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a2870"/>
        <function-ref name="clr" scoped="" ref="0xb66a2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0xb6699848" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0xb6699848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6699a20"/>
        <function-ref name="isInput" scoped="" ref="0xb6699b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb6699be0"/>
        <function-ref name="toggle" scoped="" ref="0xb6699cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6699da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6699e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6698010"/>
        <function-ref name="get" scoped="" ref="0xb66980f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66981d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66982b0"/>
        <function-ref name="set" scoped="" ref="0xb6698390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6698470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6698550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66986b0"/>
        <function-ref name="clr" scoped="" ref="0xb6698790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0xb66cd848" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0xb66cd848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66cda20"/>
        <function-ref name="isInput" scoped="" ref="0xb66cdb00"/>
        <function-ref name="setResistor" scoped="" ref="0xb66cdbe0"/>
        <function-ref name="toggle" scoped="" ref="0xb66cdcc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66cdda0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66cde80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66cc010"/>
        <function-ref name="get" scoped="" ref="0xb66cc0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66cc1d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66cc2b0"/>
        <function-ref name="set" scoped="" ref="0xb66cc390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66cc470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66cc550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66cc6b0"/>
        <function-ref name="clr" scoped="" ref="0xb66cc790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0xb66c1a08" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0xb66c1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66c1be0"/>
        <function-ref name="isInput" scoped="" ref="0xb66c1cc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66c1da0"/>
        <function-ref name="toggle" scoped="" ref="0xb66c1e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb66c0010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66c00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66c01d0"/>
        <function-ref name="get" scoped="" ref="0xb66c02b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66c0390"/>
        <function-ref name="getRaw" scoped="" ref="0xb66c0470"/>
        <function-ref name="set" scoped="" ref="0xb66c0550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66c0630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66c0710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66c0870"/>
        <function-ref name="clr" scoped="" ref="0xb66c0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0xb66b6bc8" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0xb66b6bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66b6da0"/>
        <function-ref name="isInput" scoped="" ref="0xb66b6e80"/>
        <function-ref name="setResistor" scoped="" ref="0xb66b5010"/>
        <function-ref name="toggle" scoped="" ref="0xb66b50f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66b51d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66b52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66b5390"/>
        <function-ref name="get" scoped="" ref="0xb66b5470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66b5550"/>
        <function-ref name="getRaw" scoped="" ref="0xb66b5630"/>
        <function-ref name="set" scoped="" ref="0xb66b5710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66b57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66b58d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66b5a30"/>
        <function-ref name="clr" scoped="" ref="0xb66b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0xb66abe68" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0xb66abe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66aa050"/>
        <function-ref name="isInput" scoped="" ref="0xb66aa130"/>
        <function-ref name="setResistor" scoped="" ref="0xb66aa210"/>
        <function-ref name="toggle" scoped="" ref="0xb66aa2f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66aa3d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66aa4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66aa590"/>
        <function-ref name="get" scoped="" ref="0xb66aa670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66aa750"/>
        <function-ref name="getRaw" scoped="" ref="0xb66aa830"/>
        <function-ref name="set" scoped="" ref="0xb66aa910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66aa9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66aaad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66aac30"/>
        <function-ref name="clr" scoped="" ref="0xb66aad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0xb6691588" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0xb6691588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6691760"/>
        <function-ref name="isInput" scoped="" ref="0xb6691840"/>
        <function-ref name="setResistor" scoped="" ref="0xb6691920"/>
        <function-ref name="toggle" scoped="" ref="0xb6691a00"/>
        <function-ref name="isOutput" scoped="" ref="0xb6691ae0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6691bc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6691ca0"/>
        <function-ref name="get" scoped="" ref="0xb6691d80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6691e60"/>
        <function-ref name="getRaw" scoped="" ref="0xb6690010"/>
        <function-ref name="set" scoped="" ref="0xb66900f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66901d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66902b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6690410"/>
        <function-ref name="clr" scoped="" ref="0xb66904f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0xb6685758" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0xb6685758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6685930"/>
        <function-ref name="isInput" scoped="" ref="0xb6685a10"/>
        <function-ref name="setResistor" scoped="" ref="0xb6685af0"/>
        <function-ref name="toggle" scoped="" ref="0xb6685bd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6685cb0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6685d90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6685e70"/>
        <function-ref name="get" scoped="" ref="0xb6684010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66840f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66841d0"/>
        <function-ref name="set" scoped="" ref="0xb66842b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6684390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6684470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66845d0"/>
        <function-ref name="clr" scoped="" ref="0xb66846b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0xb66923e0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0xb66923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66925b8"/>
        <function-ref name="isInput" scoped="" ref="0xb6692698"/>
        <function-ref name="setResistor" scoped="" ref="0xb6692778"/>
        <function-ref name="toggle" scoped="" ref="0xb6692858"/>
        <function-ref name="isOutput" scoped="" ref="0xb6692938"/>
        <function-ref name="getResistor" scoped="" ref="0xb6692a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6692af8"/>
        <function-ref name="get" scoped="" ref="0xb6692bd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6692cb8"/>
        <function-ref name="getRaw" scoped="" ref="0xb6692d98"/>
        <function-ref name="set" scoped="" ref="0xb6692e78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6691010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66910f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6691250"/>
        <function-ref name="clr" scoped="" ref="0xb6691330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0xb66a8178" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0xb66a8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66a8350"/>
        <function-ref name="isInput" scoped="" ref="0xb66a8430"/>
        <function-ref name="setResistor" scoped="" ref="0xb66a8510"/>
        <function-ref name="toggle" scoped="" ref="0xb66a85f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66a86d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66a87b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66a8890"/>
        <function-ref name="get" scoped="" ref="0xb66a8970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66a8a50"/>
        <function-ref name="getRaw" scoped="" ref="0xb66a8b30"/>
        <function-ref name="set" scoped="" ref="0xb66a8c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66a8cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66a8dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66a7010"/>
        <function-ref name="clr" scoped="" ref="0xb66a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0xb667e168" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0xb667e168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb667e340"/>
        <function-ref name="isInput" scoped="" ref="0xb667e420"/>
        <function-ref name="setResistor" scoped="" ref="0xb667e500"/>
        <function-ref name="toggle" scoped="" ref="0xb667e5e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb667e6c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb667e7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb667e880"/>
        <function-ref name="get" scoped="" ref="0xb667e960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb667ea40"/>
        <function-ref name="getRaw" scoped="" ref="0xb667eb20"/>
        <function-ref name="set" scoped="" ref="0xb667ec00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb667ece0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb667edc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb667ef20"/>
        <function-ref name="clr" scoped="" ref="0xb667d018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0xb667b5a8" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0xb667b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb667b780"/>
        <function-ref name="isInput" scoped="" ref="0xb667b860"/>
        <function-ref name="setResistor" scoped="" ref="0xb667b940"/>
        <function-ref name="toggle" scoped="" ref="0xb667ba20"/>
        <function-ref name="isOutput" scoped="" ref="0xb667bb00"/>
        <function-ref name="getResistor" scoped="" ref="0xb667bbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb667bcc0"/>
        <function-ref name="get" scoped="" ref="0xb667bda0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb667be80"/>
        <function-ref name="getRaw" scoped="" ref="0xb667a010"/>
        <function-ref name="set" scoped="" ref="0xb667a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb667a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb667a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb667a410"/>
        <function-ref name="clr" scoped="" ref="0xb667a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0xb6697be8" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0xb6697be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6696010"/>
        <function-ref name="isInput" scoped="" ref="0xb66960f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66961d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66962b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6696390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6696470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6696550"/>
        <function-ref name="get" scoped="" ref="0xb6696630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6696710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66967f0"/>
        <function-ref name="set" scoped="" ref="0xb66968d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66969b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6696a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6696bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6696cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66783a8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66783a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6678580"/>
        <function-ref name="isInput" scoped="" ref="0xb6678660"/>
        <function-ref name="setResistor" scoped="" ref="0xb6678740"/>
        <function-ref name="toggle" scoped="" ref="0xb6678820"/>
        <function-ref name="isOutput" scoped="" ref="0xb6678900"/>
        <function-ref name="getResistor" scoped="" ref="0xb66789e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6678ac0"/>
        <function-ref name="get" scoped="" ref="0xb6678ba0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6678c80"/>
        <function-ref name="getRaw" scoped="" ref="0xb6678d60"/>
        <function-ref name="set" scoped="" ref="0xb6678e40"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6678f20"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6661018"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6661178"/>
        <function-ref name="clr" scoped="" ref="0xb6661258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6660aa0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6660aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6660c78"/>
        <function-ref name="isInput" scoped="" ref="0xb6660d58"/>
        <function-ref name="setResistor" scoped="" ref="0xb6660e38"/>
        <function-ref name="toggle" scoped="" ref="0xb6660f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb665f010"/>
        <function-ref name="getResistor" scoped="" ref="0xb665f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665f1d0"/>
        <function-ref name="get" scoped="" ref="0xb665f2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665f390"/>
        <function-ref name="getRaw" scoped="" ref="0xb665f470"/>
        <function-ref name="set" scoped="" ref="0xb665f550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665f630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665f710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665f870"/>
        <function-ref name="clr" scoped="" ref="0xb665f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb665d220" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb665d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665d3f8"/>
        <function-ref name="isInput" scoped="" ref="0xb665d4d8"/>
        <function-ref name="setResistor" scoped="" ref="0xb665d5b8"/>
        <function-ref name="toggle" scoped="" ref="0xb665d698"/>
        <function-ref name="isOutput" scoped="" ref="0xb665d778"/>
        <function-ref name="getResistor" scoped="" ref="0xb665d858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665d938"/>
        <function-ref name="get" scoped="" ref="0xb665da18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665daf8"/>
        <function-ref name="getRaw" scoped="" ref="0xb665dbd8"/>
        <function-ref name="set" scoped="" ref="0xb665dcb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665dd98"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665de78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665c010"/>
        <function-ref name="clr" scoped="" ref="0xb665c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb665b948" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb665b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665bb20"/>
        <function-ref name="isInput" scoped="" ref="0xb665bc00"/>
        <function-ref name="setResistor" scoped="" ref="0xb665bce0"/>
        <function-ref name="toggle" scoped="" ref="0xb665bdc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb665bea0"/>
        <function-ref name="getResistor" scoped="" ref="0xb665a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665a0f0"/>
        <function-ref name="get" scoped="" ref="0xb665a1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665a2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb665a390"/>
        <function-ref name="set" scoped="" ref="0xb665a470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665a550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665a630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665a790"/>
        <function-ref name="clr" scoped="" ref="0xb665a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6657148" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6657148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6657320"/>
        <function-ref name="isInput" scoped="" ref="0xb6657400"/>
        <function-ref name="setResistor" scoped="" ref="0xb66574e0"/>
        <function-ref name="toggle" scoped="" ref="0xb66575c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66576a0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6657780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6657860"/>
        <function-ref name="get" scoped="" ref="0xb6657940"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6657a20"/>
        <function-ref name="getRaw" scoped="" ref="0xb6657b00"/>
        <function-ref name="set" scoped="" ref="0xb6657be0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6657cc0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6657da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6657f00"/>
        <function-ref name="clr" scoped="" ref="0xb6656010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66558a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66558a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6655a78"/>
        <function-ref name="isInput" scoped="" ref="0xb6655b58"/>
        <function-ref name="setResistor" scoped="" ref="0xb6655c38"/>
        <function-ref name="toggle" scoped="" ref="0xb6655d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb6655df8"/>
        <function-ref name="getResistor" scoped="" ref="0xb6655ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6654010"/>
        <function-ref name="get" scoped="" ref="0xb66540f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66541d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66542b0"/>
        <function-ref name="set" scoped="" ref="0xb6654390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6654470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6654550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66546b0"/>
        <function-ref name="clr" scoped="" ref="0xb6654790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6652030" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6652030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6652208"/>
        <function-ref name="isInput" scoped="" ref="0xb66522e8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66523c8"/>
        <function-ref name="toggle" scoped="" ref="0xb66524a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6652588"/>
        <function-ref name="getResistor" scoped="" ref="0xb6652668"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6652748"/>
        <function-ref name="get" scoped="" ref="0xb6652828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6652908"/>
        <function-ref name="getRaw" scoped="" ref="0xb66529e8"/>
        <function-ref name="set" scoped="" ref="0xb6652ac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6652ba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6652c88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6652de8"/>
        <function-ref name="clr" scoped="" ref="0xb6652ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6650730" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6650730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6650908"/>
        <function-ref name="isInput" scoped="" ref="0xb66509e8"/>
        <function-ref name="setResistor" scoped="" ref="0xb6650ac8"/>
        <function-ref name="toggle" scoped="" ref="0xb6650ba8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6650c88"/>
        <function-ref name="getResistor" scoped="" ref="0xb6650d68"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6650e48"/>
        <function-ref name="get" scoped="" ref="0xb6650f28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664f018"/>
        <function-ref name="getRaw" scoped="" ref="0xb664f0f8"/>
        <function-ref name="set" scoped="" ref="0xb664f1d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664f2b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664f398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664f4f8"/>
        <function-ref name="clr" scoped="" ref="0xb664f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb664ee50" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb664ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664d050"/>
        <function-ref name="isInput" scoped="" ref="0xb664d130"/>
        <function-ref name="setResistor" scoped="" ref="0xb664d210"/>
        <function-ref name="toggle" scoped="" ref="0xb664d2f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb664d3d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb664d4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664d590"/>
        <function-ref name="get" scoped="" ref="0xb664d670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664d750"/>
        <function-ref name="getRaw" scoped="" ref="0xb664d830"/>
        <function-ref name="set" scoped="" ref="0xb664d910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664d9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664dad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664dc30"/>
        <function-ref name="clr" scoped="" ref="0xb664dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb664b5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb664b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664b7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb664b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb664b990"/>
        <function-ref name="toggle" scoped="" ref="0xb664ba70"/>
        <function-ref name="isOutput" scoped="" ref="0xb664bb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb664bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664bd10"/>
        <function-ref name="get" scoped="" ref="0xb664bdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664bed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb664a010"/>
        <function-ref name="set" scoped="" ref="0xb664a0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664a1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664a2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664a410"/>
        <function-ref name="clr" scoped="" ref="0xb664a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6649d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6649d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6648010"/>
        <function-ref name="isInput" scoped="" ref="0xb66480f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66481d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66482b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6648390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6648470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6648550"/>
        <function-ref name="get" scoped="" ref="0xb6648630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6648710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66487f0"/>
        <function-ref name="set" scoped="" ref="0xb66488d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66489b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6648a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6648bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6648cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66465f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66465f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66467d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66468b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6646990"/>
        <function-ref name="toggle" scoped="" ref="0xb6646a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6646b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6646c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6646d10"/>
        <function-ref name="get" scoped="" ref="0xb6646df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6646ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6645010"/>
        <function-ref name="set" scoped="" ref="0xb66450f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66451d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66452b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6645410"/>
        <function-ref name="clr" scoped="" ref="0xb66454f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6644de8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6644de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6643010"/>
        <function-ref name="isInput" scoped="" ref="0xb66430f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66431d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66432b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6643390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6643470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6643550"/>
        <function-ref name="get" scoped="" ref="0xb6643630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6643710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66437f0"/>
        <function-ref name="set" scoped="" ref="0xb66438d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66439b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6643a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6643bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6643cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66415f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66415f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66417d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66418b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6641990"/>
        <function-ref name="toggle" scoped="" ref="0xb6641a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6641b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6641c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6641d10"/>
        <function-ref name="get" scoped="" ref="0xb6641df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6641ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6640010"/>
        <function-ref name="set" scoped="" ref="0xb66400f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66401d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66402b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6640410"/>
        <function-ref name="clr" scoped="" ref="0xb66404f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb663fd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb663fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663e010"/>
        <function-ref name="isInput" scoped="" ref="0xb663e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb663e1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb663e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb663e390"/>
        <function-ref name="getResistor" scoped="" ref="0xb663e470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663e550"/>
        <function-ref name="get" scoped="" ref="0xb663e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663e710"/>
        <function-ref name="getRaw" scoped="" ref="0xb663e7f0"/>
        <function-ref name="set" scoped="" ref="0xb663e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663ebf0"/>
        <function-ref name="clr" scoped="" ref="0xb663ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb663c5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb663c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663c7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb663c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb663c990"/>
        <function-ref name="toggle" scoped="" ref="0xb663ca70"/>
        <function-ref name="isOutput" scoped="" ref="0xb663cb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb663cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663cd10"/>
        <function-ref name="get" scoped="" ref="0xb663cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663ced0"/>
        <function-ref name="getRaw" scoped="" ref="0xb663b010"/>
        <function-ref name="set" scoped="" ref="0xb663b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663b410"/>
        <function-ref name="clr" scoped="" ref="0xb663b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6639d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6639d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6638010"/>
        <function-ref name="isInput" scoped="" ref="0xb66380f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66381d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66382b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6638390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6638470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6638550"/>
        <function-ref name="get" scoped="" ref="0xb6638630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6638710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66387f0"/>
        <function-ref name="set" scoped="" ref="0xb66388d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66389b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6638a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6638bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6638cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66365f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66365f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66367d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66368b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6636990"/>
        <function-ref name="toggle" scoped="" ref="0xb6636a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6636b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6636c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6636d10"/>
        <function-ref name="get" scoped="" ref="0xb6636df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6636ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6635010"/>
        <function-ref name="set" scoped="" ref="0xb66350f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66351d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66352b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6635410"/>
        <function-ref name="clr" scoped="" ref="0xb66354f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6634d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6634d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6633010"/>
        <function-ref name="isInput" scoped="" ref="0xb66330f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66331d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66332b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6633390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6633470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6633550"/>
        <function-ref name="get" scoped="" ref="0xb6633630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6633710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66337f0"/>
        <function-ref name="set" scoped="" ref="0xb66338d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66339b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6633a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6633bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6633cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66315f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66315f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66317d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66318b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6631990"/>
        <function-ref name="toggle" scoped="" ref="0xb6631a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6631b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6631c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6631d10"/>
        <function-ref name="get" scoped="" ref="0xb6631df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6631ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6630010"/>
        <function-ref name="set" scoped="" ref="0xb66300f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66301d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66302b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6630410"/>
        <function-ref name="clr" scoped="" ref="0xb66304f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb662fd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb662fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662e010"/>
        <function-ref name="isInput" scoped="" ref="0xb662e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb662e1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb662e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb662e390"/>
        <function-ref name="getResistor" scoped="" ref="0xb662e470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662e550"/>
        <function-ref name="get" scoped="" ref="0xb662e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662e710"/>
        <function-ref name="getRaw" scoped="" ref="0xb662e7f0"/>
        <function-ref name="set" scoped="" ref="0xb662e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb662e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb662ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb662ebf0"/>
        <function-ref name="clr" scoped="" ref="0xb662ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb662c5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb662c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662c7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb662c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb662c990"/>
        <function-ref name="toggle" scoped="" ref="0xb662ca70"/>
        <function-ref name="isOutput" scoped="" ref="0xb662cb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb662cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662cd10"/>
        <function-ref name="get" scoped="" ref="0xb662cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662ced0"/>
        <function-ref name="getRaw" scoped="" ref="0xb662b010"/>
        <function-ref name="set" scoped="" ref="0xb662b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb662b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb662b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb662b410"/>
        <function-ref name="clr" scoped="" ref="0xb662b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb662ad68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb662ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6629010"/>
        <function-ref name="isInput" scoped="" ref="0xb66290f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66291d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66292b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6629390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6629470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6629550"/>
        <function-ref name="get" scoped="" ref="0xb6629630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6629710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66297f0"/>
        <function-ref name="set" scoped="" ref="0xb66298d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66299b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6629a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6629bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6629cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66275f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66275f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66277d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66278b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6627990"/>
        <function-ref name="toggle" scoped="" ref="0xb6627a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6627b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6627c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6627d10"/>
        <function-ref name="get" scoped="" ref="0xb6627df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6627ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6626010"/>
        <function-ref name="set" scoped="" ref="0xb66260f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66261d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66262b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6626410"/>
        <function-ref name="clr" scoped="" ref="0xb66264f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6625e68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6625e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6624050"/>
        <function-ref name="isInput" scoped="" ref="0xb6624130"/>
        <function-ref name="setResistor" scoped="" ref="0xb6624210"/>
        <function-ref name="toggle" scoped="" ref="0xb66242f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66243d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66244b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6624590"/>
        <function-ref name="get" scoped="" ref="0xb6624670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6624750"/>
        <function-ref name="getRaw" scoped="" ref="0xb6624830"/>
        <function-ref name="set" scoped="" ref="0xb6624910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66249f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6624ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6624c30"/>
        <function-ref name="clr" scoped="" ref="0xb6624d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66225f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66225f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66227d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66228b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6622990"/>
        <function-ref name="toggle" scoped="" ref="0xb6622a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6622b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6622c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6622d10"/>
        <function-ref name="get" scoped="" ref="0xb6622df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6622ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6621010"/>
        <function-ref name="set" scoped="" ref="0xb66210f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66211d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66212b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6621410"/>
        <function-ref name="clr" scoped="" ref="0xb66214f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6620d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6620d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb661f010"/>
        <function-ref name="isInput" scoped="" ref="0xb661f0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb661f1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb661f2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb661f390"/>
        <function-ref name="getResistor" scoped="" ref="0xb661f470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb661f550"/>
        <function-ref name="get" scoped="" ref="0xb661f630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb661f710"/>
        <function-ref name="getRaw" scoped="" ref="0xb661f7f0"/>
        <function-ref name="set" scoped="" ref="0xb661f8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb661f9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb661fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb661fbf0"/>
        <function-ref name="clr" scoped="" ref="0xb661fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb661d5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb661d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb661d7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb661d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb661d990"/>
        <function-ref name="toggle" scoped="" ref="0xb661da70"/>
        <function-ref name="isOutput" scoped="" ref="0xb661db50"/>
        <function-ref name="getResistor" scoped="" ref="0xb661dc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb661dd10"/>
        <function-ref name="get" scoped="" ref="0xb661ddf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb661ded0"/>
        <function-ref name="getRaw" scoped="" ref="0xb661c010"/>
        <function-ref name="set" scoped="" ref="0xb661c0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb661c1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb661c2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb661c410"/>
        <function-ref name="clr" scoped="" ref="0xb661c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb661ad68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb661ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6619010"/>
        <function-ref name="isInput" scoped="" ref="0xb66190f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66191d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66192b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6619390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6619470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6619550"/>
        <function-ref name="get" scoped="" ref="0xb6619630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6619710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66197f0"/>
        <function-ref name="set" scoped="" ref="0xb66198d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66199b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6619a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6619bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6619cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66175f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66175f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66177d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66178b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6617990"/>
        <function-ref name="toggle" scoped="" ref="0xb6617a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6617b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6617c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6617d10"/>
        <function-ref name="get" scoped="" ref="0xb6617df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6617ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6616010"/>
        <function-ref name="set" scoped="" ref="0xb66160f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66161d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66162b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6616410"/>
        <function-ref name="clr" scoped="" ref="0xb66164f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6615d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6615d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6614010"/>
        <function-ref name="isInput" scoped="" ref="0xb66140f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66141d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66142b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6614390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6614470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6614550"/>
        <function-ref name="get" scoped="" ref="0xb6614630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6614710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66147f0"/>
        <function-ref name="set" scoped="" ref="0xb66148d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66149b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6614a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6614bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6614cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66125f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66125f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66127d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66128b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6612990"/>
        <function-ref name="toggle" scoped="" ref="0xb6612a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6612b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6612c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6612d10"/>
        <function-ref name="get" scoped="" ref="0xb6612df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6612ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6611010"/>
        <function-ref name="set" scoped="" ref="0xb66110f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66111d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66112b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6611410"/>
        <function-ref name="clr" scoped="" ref="0xb66114f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6610d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6610d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb660f010"/>
        <function-ref name="isInput" scoped="" ref="0xb660f0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb660f1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb660f2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb660f390"/>
        <function-ref name="getResistor" scoped="" ref="0xb660f470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb660f550"/>
        <function-ref name="get" scoped="" ref="0xb660f630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb660f710"/>
        <function-ref name="getRaw" scoped="" ref="0xb660f7f0"/>
        <function-ref name="set" scoped="" ref="0xb660f8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb660f9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb660fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb660fbf0"/>
        <function-ref name="clr" scoped="" ref="0xb660fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb660d5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb660d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb660d7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb660d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb660d990"/>
        <function-ref name="toggle" scoped="" ref="0xb660da70"/>
        <function-ref name="isOutput" scoped="" ref="0xb660db50"/>
        <function-ref name="getResistor" scoped="" ref="0xb660dc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb660dd10"/>
        <function-ref name="get" scoped="" ref="0xb660ddf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb660ded0"/>
        <function-ref name="getRaw" scoped="" ref="0xb660c010"/>
        <function-ref name="set" scoped="" ref="0xb660c0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb660c1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb660c2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb660c410"/>
        <function-ref name="clr" scoped="" ref="0xb660c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb660bd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb660bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb660a010"/>
        <function-ref name="isInput" scoped="" ref="0xb660a0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb660a1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb660a2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb660a390"/>
        <function-ref name="getResistor" scoped="" ref="0xb660a470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb660a550"/>
        <function-ref name="get" scoped="" ref="0xb660a630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb660a710"/>
        <function-ref name="getRaw" scoped="" ref="0xb660a7f0"/>
        <function-ref name="set" scoped="" ref="0xb660a8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb660a9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb660aa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb660abf0"/>
        <function-ref name="clr" scoped="" ref="0xb660acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66085f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66085f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66087d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66088b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6608990"/>
        <function-ref name="toggle" scoped="" ref="0xb6608a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6608b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6608c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6608d10"/>
        <function-ref name="get" scoped="" ref="0xb6608df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6608ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6607010"/>
        <function-ref name="set" scoped="" ref="0xb66070f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66071d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66072b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6607410"/>
        <function-ref name="clr" scoped="" ref="0xb66074f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6606d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6606d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6605010"/>
        <function-ref name="isInput" scoped="" ref="0xb66050f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66051d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66052b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6605390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6605470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6605550"/>
        <function-ref name="get" scoped="" ref="0xb6605630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6605710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66057f0"/>
        <function-ref name="set" scoped="" ref="0xb66058d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66059b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6605a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6605bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6605cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb66035f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb66035f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66037d0"/>
        <function-ref name="isInput" scoped="" ref="0xb66038b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6603990"/>
        <function-ref name="toggle" scoped="" ref="0xb6603a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6603b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6603c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6603d10"/>
        <function-ref name="get" scoped="" ref="0xb6603df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6603ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6602010"/>
        <function-ref name="set" scoped="" ref="0xb66020f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66021d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66022b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6602410"/>
        <function-ref name="clr" scoped="" ref="0xb66024f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6601d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6601d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6600010"/>
        <function-ref name="isInput" scoped="" ref="0xb66000f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66001d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66002b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6600390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6600470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6600550"/>
        <function-ref name="get" scoped="" ref="0xb6600630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6600710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66007f0"/>
        <function-ref name="set" scoped="" ref="0xb66008d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66009b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6600a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6600bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6600cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65fe5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65fe5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65fe7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65fe8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65fe990"/>
        <function-ref name="toggle" scoped="" ref="0xb65fea70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65feb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65fec30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65fed10"/>
        <function-ref name="get" scoped="" ref="0xb65fedf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65feed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65fd010"/>
        <function-ref name="set" scoped="" ref="0xb65fd0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65fd1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65fd2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65fd410"/>
        <function-ref name="clr" scoped="" ref="0xb65fd4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65fbd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65fbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65fa010"/>
        <function-ref name="isInput" scoped="" ref="0xb65fa0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65fa1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65fa2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65fa390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65fa470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65fa550"/>
        <function-ref name="get" scoped="" ref="0xb65fa630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65fa710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65fa7f0"/>
        <function-ref name="set" scoped="" ref="0xb65fa8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65fa9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65faa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65fabf0"/>
        <function-ref name="clr" scoped="" ref="0xb65facd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f85f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f87d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65f88b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f8990"/>
        <function-ref name="toggle" scoped="" ref="0xb65f8a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f8b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f8c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f8d10"/>
        <function-ref name="get" scoped="" ref="0xb65f8df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f8ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f7010"/>
        <function-ref name="set" scoped="" ref="0xb65f70f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f71d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f72b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f7410"/>
        <function-ref name="clr" scoped="" ref="0xb65f74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f6d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f5010"/>
        <function-ref name="isInput" scoped="" ref="0xb65f50f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f51d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65f52b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f5390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f5470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f5550"/>
        <function-ref name="get" scoped="" ref="0xb65f5630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f5710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f57f0"/>
        <function-ref name="set" scoped="" ref="0xb65f58d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f59b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f5a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f5bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65f5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f35f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f37d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65f38b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f3990"/>
        <function-ref name="toggle" scoped="" ref="0xb65f3a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f3b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f3c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f3d10"/>
        <function-ref name="get" scoped="" ref="0xb65f3df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f3ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f2010"/>
        <function-ref name="set" scoped="" ref="0xb65f20f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f21d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f2410"/>
        <function-ref name="clr" scoped="" ref="0xb65f24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f1d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f0010"/>
        <function-ref name="isInput" scoped="" ref="0xb65f00f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f01d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65f02b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f0390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f0470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f0550"/>
        <function-ref name="get" scoped="" ref="0xb65f0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f0710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f07f0"/>
        <function-ref name="set" scoped="" ref="0xb65f08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f0bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65f0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ee5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ee5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65ee8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65ee990"/>
        <function-ref name="toggle" scoped="" ref="0xb65eea70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65eeb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65eec30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65eed10"/>
        <function-ref name="get" scoped="" ref="0xb65eedf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65eeed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65ed010"/>
        <function-ref name="set" scoped="" ref="0xb65ed0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65ed1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65ed2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ed410"/>
        <function-ref name="clr" scoped="" ref="0xb65ed4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ecd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ecd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65eb010"/>
        <function-ref name="isInput" scoped="" ref="0xb65eb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65eb1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65eb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65eb390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65eb470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65eb550"/>
        <function-ref name="get" scoped="" ref="0xb65eb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65eb710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65eb7f0"/>
        <function-ref name="set" scoped="" ref="0xb65eb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65eb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65eba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ebbf0"/>
        <function-ref name="clr" scoped="" ref="0xb65ebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65e95f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65e97d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65e98b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65e9990"/>
        <function-ref name="toggle" scoped="" ref="0xb65e9a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65e9b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65e9c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65e9d10"/>
        <function-ref name="get" scoped="" ref="0xb65e9df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65e9ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65e8010"/>
        <function-ref name="set" scoped="" ref="0xb65e80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65e81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65e82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65e8410"/>
        <function-ref name="clr" scoped="" ref="0xb65e84f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb65a5638" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0xb65a5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb65a5c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0xb65a69a0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0xb65a69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb65a6b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb65a6c58"/>
        <function-ref name="request" scoped="" ref="0xb65a6d38"/>
        <function-ref name="granted" scoped="" ref="0xb65a6e18"/>
        <function-ref name="isOwner" scoped="" ref="0xb65a6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0xb65abea0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0xb65abea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb65a60c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb65a61a0"/>
        <function-ref name="request" scoped="" ref="0xb65a6280"/>
        <function-ref name="granted" scoped="" ref="0xb65a6360"/>
        <function-ref name="isOwner" scoped="" ref="0xb65a6440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0xb65a12d0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0xb65a12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0xb65a14a8"/>
        <function-ref name="getMCtl" scoped="" ref="0xb65a1588"/>
        <function-ref name="resetIFGs" scoped="" ref="0xb65a1668"/>
        <function-ref name="isBusy" scoped="" ref="0xb65a1748"/>
        <function-ref name="conversionDone" scoped="" ref="0xb65a1828"/>
        <function-ref name="getCtl1" scoped="" ref="0xb65a1908"/>
        <function-ref name="setMCtl" scoped="" ref="0xb65a19e8"/>
        <function-ref name="startConversion" scoped="" ref="0xb65a1ac8"/>
        <function-ref name="setCtl0" scoped="" ref="0xb65a1ba8"/>
        <function-ref name="getMem" scoped="" ref="0xb65a1c88"/>
        <function-ref name="setIEFlags" scoped="" ref="0xb65a1d68"/>
        <function-ref name="getIEFlags" scoped="" ref="0xb65a1e48"/>
        <function-ref name="stopConversion" scoped="" ref="0xb65a1f28"/>
        <function-ref name="enableConversion" scoped="" ref="0xb65a0098"/>
        <function-ref name="setCtl1" scoped="" ref="0xb65a0178"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0xb659d888" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0xb659d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb659a388"/>
        <function-ref name="fired" scoped="" ref="0xb659c628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb659cd30"/>
        <function-ref name="isOneShot" scoped="" ref="0xb659cad8"/>
        <function-ref name="getdt" scoped="" ref="0xb659a838"/>
        <function-ref name="gett0" scoped="" ref="0xb659a5e0"/>
        <function-ref name="isRunning" scoped="" ref="0xb659c880"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb659deb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb659a068"/>
        <function-ref name="startOneShot" scoped="" ref="0xb659c150"/>
        <function-ref name="stop" scoped="" ref="0xb659c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0xb65a4c70" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb65a4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb65a4e48"/>
        <function-ref name="stopDone" scoped="" ref="0xb65a4f28"/>
        <function-ref name="start" scoped="" ref="0xb65a1018"/>
        <function-ref name="stop" scoped="" ref="0xb65a10f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0xb659ac40" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0xb659ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6598730"/>
        <function-ref name="fired" scoped="" ref="0xb65999d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb65980f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6599e80"/>
        <function-ref name="getdt" scoped="" ref="0xb6598be0"/>
        <function-ref name="gett0" scoped="" ref="0xb6598988"/>
        <function-ref name="isRunning" scoped="" ref="0xb6599c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6599278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6598410"/>
        <function-ref name="startOneShot" scoped="" ref="0xb65994f8"/>
        <function-ref name="stop" scoped="" ref="0xb6599778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0xb65a4598" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb65a4598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb65a4770"/>
        <function-ref name="stopDone" scoped="" ref="0xb65a4850"/>
        <function-ref name="start" scoped="" ref="0xb65a4930"/>
        <function-ref name="stop" scoped="" ref="0xb65a4a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0xb65a0468" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0xb65a0468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb659d010"/>
        <function-ref name="fired" scoped="" ref="0xb659e268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb659e970"/>
        <function-ref name="isOneShot" scoped="" ref="0xb659e718"/>
        <function-ref name="getdt" scoped="" ref="0xb659d4c0"/>
        <function-ref name="gett0" scoped="" ref="0xb659d268"/>
        <function-ref name="isRunning" scoped="" ref="0xb659e4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb65a0a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb659ec90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb65a0d10"/>
        <function-ref name="stop" scoped="" ref="0xb659e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6568378" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0xb6568378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb65689c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0xb65697b8" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb65697b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6569990"/>
        <function-ref name="stopDone" scoped="" ref="0xb6569a70"/>
        <function-ref name="start" scoped="" ref="0xb6569b50"/>
        <function-ref name="stop" scoped="" ref="0xb6569c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0xb656b8f0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0xb656b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb656bac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb656bba8"/>
        <function-ref name="request" scoped="" ref="0xb656bc88"/>
        <function-ref name="granted" scoped="" ref="0xb656bd68"/>
        <function-ref name="isOwner" scoped="" ref="0xb656be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0xb65a3df8" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0xb65a3df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb656b010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb656b0f0"/>
        <function-ref name="request" scoped="" ref="0xb656b1d0"/>
        <function-ref name="granted" scoped="" ref="0xb656b2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb656b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0xb6567940" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0xb6567940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6567b18"/>
        <function-ref name="runTask" scoped="" ref="0xb6567bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0xb65690e0" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb65690e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb65692b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6569398"/>
        <function-ref name="start" scoped="" ref="0xb6569478"/>
        <function-ref name="stop" scoped="" ref="0xb6569558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb654b0a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb654b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb645cb88"/>
        <function-ref name="fired" scoped="" ref="0xb654be20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb645c548"/>
        <function-ref name="isOneShot" scoped="" ref="0xb645c2f0"/>
        <function-ref name="getdt" scoped="" ref="0xb645b048"/>
        <function-ref name="gett0" scoped="" ref="0xb645cde0"/>
        <function-ref name="isRunning" scoped="" ref="0xb645c098"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb654b6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb645c868"/>
        <function-ref name="startOneShot" scoped="" ref="0xb654b948"/>
        <function-ref name="stop" scoped="" ref="0xb654bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6547f28" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0xb6547f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6543a18"/>
        <function-ref name="fired" scoped="" ref="0xb6544cb8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb65433d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6543180"/>
        <function-ref name="getdt" scoped="" ref="0xb6543ec8"/>
        <function-ref name="gett0" scoped="" ref="0xb6543c70"/>
        <function-ref name="isRunning" scoped="" ref="0xb6544f10"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6544560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb65436f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb65447e0"/>
        <function-ref name="stop" scoped="" ref="0xb6544a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb653e010" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0xb653e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb653db00"/>
        <function-ref name="fired" scoped="" ref="0xb653ed90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb653d4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb653d268"/>
        <function-ref name="getdt" scoped="" ref="0xb653c010"/>
        <function-ref name="gett0" scoped="" ref="0xb653dd58"/>
        <function-ref name="isRunning" scoped="" ref="0xb653d010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb653e638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb653d7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb653e8b8"/>
        <function-ref name="stop" scoped="" ref="0xb653eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb653a040" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0xb653a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb653a688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb65427b8" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb65427b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6542990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb65384e8" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb65384e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb64b19a0"/>
        <function-ref name="fired" scoped="" ref="0xb64b1170"/>
        <function-ref name="startAt" scoped="" ref="0xb64b1660"/>
        <function-ref name="isRunning" scoped="" ref="0xb64b13e8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb64b1c18"/>
        <function-ref name="start" scoped="" ref="0xb6538c38"/>
        <function-ref name="stop" scoped="" ref="0xb6538ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6538090" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6538090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6538268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb5633be0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb5633be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb56250f8"/>
        <function-ref name="fired" scoped="" ref="0xb5632898"/>
        <function-ref name="startAt" scoped="" ref="0xb5632d88"/>
        <function-ref name="isRunning" scoped="" ref="0xb5632b10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5625370"/>
        <function-ref name="start" scoped="" ref="0xb5632380"/>
        <function-ref name="stop" scoped="" ref="0xb5632620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5633788" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5633788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5633960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb561bac8" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb561bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb561bca0"/>
        <function-ref name="setEvent" scoped="" ref="0xb561bd80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb561be60"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb5619010"/>
        <function-ref name="fired" scoped="" ref="0xb56190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb561c480" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb561c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb561c658"/>
        <function-ref name="setClockSource" scoped="" ref="0xb561c738"/>
        <function-ref name="enableEvents" scoped="" ref="0xb561c818"/>
        <function-ref name="get" scoped="" ref="0xb561c8f8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb561c9d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb561cab8"/>
        <function-ref name="getMode" scoped="" ref="0xb561cb98"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb561cc78"/>
        <function-ref name="overflow" scoped="" ref="0xb561cd58"/>
        <function-ref name="setMode" scoped="" ref="0xb561ce38"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb561cf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb561b090" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb561b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb561b268"/>
        <function-ref name="getControl" scoped="" ref="0xb561b348"/>
        <function-ref name="enableEvents" scoped="" ref="0xb561b428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb561b508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb561b5e8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb561b6c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb561b7a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb561b888"/>
        <function-ref name="setControl" scoped="" ref="0xb561b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb6522698" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb6522698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6522870"/>
        <function-ref name="setEvent" scoped="" ref="0xb6522950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6522a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6522b10"/>
        <function-ref name="fired" scoped="" ref="0xb6522bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb65278e8" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb65278e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6527ac0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6527ba0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6527c80"/>
        <function-ref name="get" scoped="" ref="0xb6527d60"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6527e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6527f20"/>
        <function-ref name="getMode" scoped="" ref="0xb6524018"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb65240f8"/>
        <function-ref name="overflow" scoped="" ref="0xb65241d8"/>
        <function-ref name="setMode" scoped="" ref="0xb65242b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6524398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb6524890" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6524890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6524a68"/>
        <function-ref name="getControl" scoped="" ref="0xb6524b48"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6524c28"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6524d08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6524de8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6524ec8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6522010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb65220f0"/>
        <function-ref name="setControl" scoped="" ref="0xb65221d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0xb56154f0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb56154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb56156c8"/>
        <function-ref name="setEvent" scoped="" ref="0xb56157a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb5615888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb5615968"/>
        <function-ref name="fired" scoped="" ref="0xb5615a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb5617e48" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5617e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5616050"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5616130"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5616210"/>
        <function-ref name="get" scoped="" ref="0xb56162f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb56163d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb56164b0"/>
        <function-ref name="getMode" scoped="" ref="0xb5616590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5616670"/>
        <function-ref name="overflow" scoped="" ref="0xb5616750"/>
        <function-ref name="setMode" scoped="" ref="0xb5616830"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb5616910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb56184d8" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb56184d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb56179a0"/>
        <function-ref name="fired" scoped="" ref="0xb5617170"/>
        <function-ref name="startAt" scoped="" ref="0xb5617660"/>
        <function-ref name="isRunning" scoped="" ref="0xb56173e8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5617c18"/>
        <function-ref name="start" scoped="" ref="0xb5618c28"/>
        <function-ref name="stop" scoped="" ref="0xb5618ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5618060" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5618060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5618238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb5616a70" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5616a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb5616c48"/>
        <function-ref name="getControl" scoped="" ref="0xb5616d28"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5616e08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb5616ee8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb5615010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb56150f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb56151d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb56152b0"/>
        <function-ref name="setControl" scoped="" ref="0xb5615390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb64f4260" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb64f4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64f49b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64f4ea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64f4c28"/>
        <function-ref name="overflow" scoped="" ref="0xb64f6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0xb64f6d30" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb64f6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64f1498"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64f1988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64f1710"/>
        <function-ref name="overflow" scoped="" ref="0xb64f1c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb64ee870" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb64ee870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64eea48"/>
        <function-ref name="setClockSource" scoped="" ref="0xb64eeb28"/>
        <function-ref name="enableEvents" scoped="" ref="0xb64eec08"/>
        <function-ref name="get" scoped="" ref="0xb64eece8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb64eedc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64eeea8"/>
        <function-ref name="getMode" scoped="" ref="0xb64e6010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64e60f0"/>
        <function-ref name="overflow" scoped="" ref="0xb64e61d0"/>
        <function-ref name="setMode" scoped="" ref="0xb64e62b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb64e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb64ef768" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb64ef768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64efeb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64ee3c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64ee150"/>
        <function-ref name="overflow" scoped="" ref="0xb64ee640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb64d46f8" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0xb64d46f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64d4e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64d3350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64d30d8"/>
        <function-ref name="overflow" scoped="" ref="0xb64d35c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb64e5490" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb64e5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64e5be0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64d4110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64e5e58"/>
        <function-ref name="overflow" scoped="" ref="0xb64d4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb56246b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb56246b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5623b80"/>
        <function-ref name="fired" scoped="" ref="0xb5623350"/>
        <function-ref name="startAt" scoped="" ref="0xb5623840"/>
        <function-ref name="isRunning" scoped="" ref="0xb56235c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5623df8"/>
        <function-ref name="start" scoped="" ref="0xb5624e08"/>
        <function-ref name="stop" scoped="" ref="0xb56230d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb56213b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0xb56213b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb561f878"/>
        <function-ref name="fired" scoped="" ref="0xb561f048"/>
        <function-ref name="startAt" scoped="" ref="0xb561f538"/>
        <function-ref name="isRunning" scoped="" ref="0xb561f2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb561faf0"/>
        <function-ref name="start" scoped="" ref="0xb5621b08"/>
        <function-ref name="stop" scoped="" ref="0xb5621da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5622180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5622180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb56228d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5622dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5622b48"/>
        <function-ref name="overflow" scoped="" ref="0xb5621048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb6496d08" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0xb6496d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6496ee0"/>
        <function-ref name="runTask" scoped="" ref="0xb6494010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6497360" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb6497360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6496840"/>
        <function-ref name="fired" scoped="" ref="0xb6496010"/>
        <function-ref name="startAt" scoped="" ref="0xb6496500"/>
        <function-ref name="isRunning" scoped="" ref="0xb6496288"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6496ab8"/>
        <function-ref name="start" scoped="" ref="0xb6497ab0"/>
        <function-ref name="stop" scoped="" ref="0xb6497d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb64ae010" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb64ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6498b00"/>
        <function-ref name="fired" scoped="" ref="0xb64aed90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb64984c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6498268"/>
        <function-ref name="getdt" scoped="" ref="0xb6497010"/>
        <function-ref name="gett0" scoped="" ref="0xb6498d58"/>
        <function-ref name="isRunning" scoped="" ref="0xb6498010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64ae638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb64987e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb64ae8b8"/>
        <function-ref name="stop" scoped="" ref="0xb64aeb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb6467948" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0xb6467948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6467b20"/>
        <function-ref name="runTask" scoped="" ref="0xb6467c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb646a6f0" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0xb646a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6467248"/>
        <function-ref name="fired" scoped="" ref="0xb64684e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6468bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6468998"/>
        <function-ref name="getdt" scoped="" ref="0xb64676f8"/>
        <function-ref name="gett0" scoped="" ref="0xb64674a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6468740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb646ad18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6468f10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6468010"/>
        <function-ref name="stop" scoped="" ref="0xb6468290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6492390" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6492390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb646cf18"/>
        <function-ref name="fired" scoped="" ref="0xb646c180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb646c8b8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb646c650"/>
        <function-ref name="getdt" scoped="" ref="0xb646a400"/>
        <function-ref name="gett0" scoped="" ref="0xb646a198"/>
        <function-ref name="isRunning" scoped="" ref="0xb646c3e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64929c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb646cbe8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6492c58"/>
        <function-ref name="stop" scoped="" ref="0xb6492ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb645fd80" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0xb645fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64653e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6465730" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb6465730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6465e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb645e388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb645e110"/>
        <function-ref name="overflow" scoped="" ref="0xb645e600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb645be80" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb645be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6459988"/>
        <function-ref name="fired" scoped="" ref="0xb645ac10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6459348"/>
        <function-ref name="isOneShot" scoped="" ref="0xb64590f0"/>
        <function-ref name="getdt" scoped="" ref="0xb6459e38"/>
        <function-ref name="gett0" scoped="" ref="0xb6459be0"/>
        <function-ref name="isRunning" scoped="" ref="0xb645ae68"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb645a4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6459668"/>
        <function-ref name="startOneShot" scoped="" ref="0xb645a738"/>
        <function-ref name="stop" scoped="" ref="0xb645a9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6457c90" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6457c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6455790"/>
        <function-ref name="fired" scoped="" ref="0xb6456a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6455150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6456ed0"/>
        <function-ref name="getdt" scoped="" ref="0xb6455c40"/>
        <function-ref name="gett0" scoped="" ref="0xb64559e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6456c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64562c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6455470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6456548"/>
        <function-ref name="stop" scoped="" ref="0xb64567c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb58143c0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb58143c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5814a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb5814d28" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb5814d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5812390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb5820480" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb5820480"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5820ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb5823d78" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb5823d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb5822b20"/>
        <function-ref name="postBuffer" scoped="" ref="0xb58223c0"/>
        <function-ref name="read" scoped="" ref="0xb58228a0"/>
        <function-ref name="readDone" scoped="" ref="0xb58200b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0xb64351b8" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb64351b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb6435390"/>
        <function-ref name="configureSingle" scoped="" ref="0xb6435470"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb6435550"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb6435630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb6435710"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb64357f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb64358d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb6436518" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb6436518"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb6436b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb643c8b0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb643c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb6438678"/>
        <function-ref name="postBuffer" scoped="" ref="0xb643ced8"/>
        <function-ref name="read" scoped="" ref="0xb64383f8"/>
        <function-ref name="readDone" scoped="" ref="0xb6438bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6435d70" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6435d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6434010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb64340f0"/>
        <function-ref name="request" scoped="" ref="0xb64341d0"/>
        <function-ref name="granted" scoped="" ref="0xb64342b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6434390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0xb64144d0" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0xb64144d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb64146a8"/>
        <function-ref name="runTask" scoped="" ref="0xb6414788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0xb641c448" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0xb641c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb641c620"/>
        <function-ref name="runTask" scoped="" ref="0xb641c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0xb6419c88" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0xb6419c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6419e60"/>
        <function-ref name="runTask" scoped="" ref="0xb6418010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb642db48" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb642db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb642a068"/>
        <function-ref name="fired" scoped="" ref="0xb642b820"/>
        <function-ref name="startAt" scoped="" ref="0xb642bd10"/>
        <function-ref name="isRunning" scoped="" ref="0xb642ba98"/>
        <function-ref name="getAlarm" scoped="" ref="0xb642a2e0"/>
        <function-ref name="start" scoped="" ref="0xb642b308"/>
        <function-ref name="stop" scoped="" ref="0xb642b5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6431010" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6431010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb6c50160"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb6c50160"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64311e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb642d100" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb642d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb642d748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0xb642e280" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb642e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb642e458"/>
        <function-ref name="configureSingle" scoped="" ref="0xb642e538"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb642e618"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb642e6f8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb642e7d8"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb642e8b8"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb642e998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb6431780" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb6431780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb642f518"/>
        <function-ref name="postBuffer" scoped="" ref="0xb6431da8"/>
        <function-ref name="read" scoped="" ref="0xb642f298"/>
        <function-ref name="readDone" scoped="" ref="0xb642fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb63f1690" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb63f1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63f0b50"/>
        <function-ref name="fired" scoped="" ref="0xb63f0320"/>
        <function-ref name="startAt" scoped="" ref="0xb63f0810"/>
        <function-ref name="isRunning" scoped="" ref="0xb63f0598"/>
        <function-ref name="getAlarm" scoped="" ref="0xb63f0dc8"/>
        <function-ref name="start" scoped="" ref="0xb63f1de0"/>
        <function-ref name="stop" scoped="" ref="0xb63f00a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb63f1238" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb63f1238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb63f1410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55c5d50" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55c5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55c2258"/>
        <function-ref name="fired" scoped="" ref="0xb55c4a00"/>
        <function-ref name="startAt" scoped="" ref="0xb55c4ef0"/>
        <function-ref name="isRunning" scoped="" ref="0xb55c4c78"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55c24d0"/>
        <function-ref name="start" scoped="" ref="0xb55c44e8"/>
        <function-ref name="stop" scoped="" ref="0xb55c4788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb55c58f8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb55c58f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb55c5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb55b8d68" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb55b8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb55b7010"/>
        <function-ref name="setEvent" scoped="" ref="0xb55b70f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb55b71d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb55b72b0"/>
        <function-ref name="fired" scoped="" ref="0xb55b7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb55b9690" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb55b9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb55b9868"/>
        <function-ref name="setClockSource" scoped="" ref="0xb55b9948"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55b9a28"/>
        <function-ref name="get" scoped="" ref="0xb55b9b08"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55b9be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb55b9cc8"/>
        <function-ref name="getMode" scoped="" ref="0xb55b9da8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb55b9e88"/>
        <function-ref name="overflow" scoped="" ref="0xb55b8010"/>
        <function-ref name="setMode" scoped="" ref="0xb55b80f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb55b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb55b8330" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55b8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb55b8508"/>
        <function-ref name="getControl" scoped="" ref="0xb55b85e8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55b86c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb55b87a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb55b8888"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55b8968"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb55b8a48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb55b8b28"/>
        <function-ref name="setControl" scoped="" ref="0xb55b8c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0xb55b2790" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb55b2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb55b2968"/>
        <function-ref name="setEvent" scoped="" ref="0xb55b2a48"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb55b2b28"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb55b2c08"/>
        <function-ref name="fired" scoped="" ref="0xb55b2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb55b3108" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb55b3108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb55b32e0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb55b33c0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55b34a0"/>
        <function-ref name="get" scoped="" ref="0xb55b3580"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55b3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb55b3740"/>
        <function-ref name="getMode" scoped="" ref="0xb55b3820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb55b3900"/>
        <function-ref name="overflow" scoped="" ref="0xb55b39e0"/>
        <function-ref name="setMode" scoped="" ref="0xb55b3ac0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb55b3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55b6770" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55b6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55b4c38"/>
        <function-ref name="fired" scoped="" ref="0xb55b4408"/>
        <function-ref name="startAt" scoped="" ref="0xb55b48f8"/>
        <function-ref name="isRunning" scoped="" ref="0xb55b4680"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55b4eb0"/>
        <function-ref name="start" scoped="" ref="0xb55b6ec0"/>
        <function-ref name="stop" scoped="" ref="0xb55b4190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb55b62f8" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb55b62f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb55b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb55b3d00" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55b3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb55b3ed8"/>
        <function-ref name="getControl" scoped="" ref="0xb55b2010"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55b20f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb55b21d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb55b22b0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55b2390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb55b2470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb55b2550"/>
        <function-ref name="setControl" scoped="" ref="0xb55b2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55c17d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55c17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55c0c80"/>
        <function-ref name="fired" scoped="" ref="0xb55c0450"/>
        <function-ref name="startAt" scoped="" ref="0xb55c0940"/>
        <function-ref name="isRunning" scoped="" ref="0xb55c06c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55c0ef8"/>
        <function-ref name="start" scoped="" ref="0xb55c1f20"/>
        <function-ref name="stop" scoped="" ref="0xb55c01d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb55be4c0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0xb55be4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55bc980"/>
        <function-ref name="fired" scoped="" ref="0xb55bc150"/>
        <function-ref name="startAt" scoped="" ref="0xb55bc640"/>
        <function-ref name="isRunning" scoped="" ref="0xb55bc3c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55bcbf8"/>
        <function-ref name="start" scoped="" ref="0xb55bec10"/>
        <function-ref name="stop" scoped="" ref="0xb55beeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb55bf278" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb55bf278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb55bf9c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb55bfeb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb55bfc40"/>
        <function-ref name="overflow" scoped="" ref="0xb55be150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0xb63d47d8" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0xb63d47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63d25b0"/>
        <function-ref name="postBuffer" scoped="" ref="0xb63d4e10"/>
        <function-ref name="read" scoped="" ref="0xb63d2320"/>
        <function-ref name="readDone" scoped="" ref="0xb63d2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb63ee010" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb63ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63eedc8"/>
        <function-ref name="postBuffer" scoped="" ref="0xb63ee648"/>
        <function-ref name="read" scoped="" ref="0xb63eeb38"/>
        <function-ref name="readDone" scoped="" ref="0xb63d4378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb63d2ec0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb63d2ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63d10c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63d11a0"/>
        <function-ref name="request" scoped="" ref="0xb63d1280"/>
        <function-ref name="granted" scoped="" ref="0xb63d1360"/>
        <function-ref name="isOwner" scoped="" ref="0xb63d1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb55cc760" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb55cc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb55cc938"/>
        <function-ref name="configure" scoped="" ref="0xb55cca18"/>
        <function-ref name="dataReady" scoped="" ref="0xb55ccaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb55ceef8" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55ceef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb55cc0e0"/>
        <function-ref name="configureSingle" scoped="" ref="0xb55cc1c0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb55cc2a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb55cc380"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb55cc460"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb55cc540"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb55cc620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb55ccc38" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb55ccc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb55cce10"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb55ccef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb55cb140" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb55cb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb55cb788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb55ce860" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb55ce860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55cea38"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55ceb18"/>
        <function-ref name="request" scoped="" ref="0xb55cebf8"/>
        <function-ref name="granted" scoped="" ref="0xb55cecd8"/>
        <function-ref name="isOwner" scoped="" ref="0xb55cedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb558d090" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb558d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb558d6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb558d9f8" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb558d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb558c068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0xb63c7d30" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb63c7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb63c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0xb63c7788" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0xb63c7788"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb63c7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb63bfdf0" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb63bfdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63be448"/>
        <function-ref name="readDone" scoped="" ref="0xb63be6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb63bea28" loc="46:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb63bea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63b37c8"/>
        <function-ref name="postBuffer" scoped="" ref="0xb63b3068"/>
        <function-ref name="read" scoped="" ref="0xb63b3548"/>
        <function-ref name="readDone" scoped="" ref="0xb63b3d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb5589b20" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb5589b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb55871e0"/>
        <function-ref name="readDone" scoped="" ref="0xb5587438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb5587800" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb5587800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5587e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb557f030" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb557f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb557f208"/>
        <function-ref name="configure" scoped="" ref="0xb557f2e8"/>
        <function-ref name="dataReady" scoped="" ref="0xb557f3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb55807b0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55807b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5580988"/>
        <function-ref name="configureSingle" scoped="" ref="0xb5580a68"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb5580b48"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb5580c28"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb5580d08"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb5580de8"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb5580ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb557f508" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb557f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb557f6e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb557f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb557f9f0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb557f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb557e048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5580118" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5580118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55802f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55803d0"/>
        <function-ref name="request" scoped="" ref="0xb55804b0"/>
        <function-ref name="granted" scoped="" ref="0xb5580590"/>
        <function-ref name="isOwner" scoped="" ref="0xb5580670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb5578428" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb5578428"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5578a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb5578d90" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb5578d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5576400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb55830e0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb55830e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5583728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb55859d8" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb55859d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb5584770"/>
        <function-ref name="postBuffer" scoped="" ref="0xb5584010"/>
        <function-ref name="read" scoped="" ref="0xb55844f0"/>
        <function-ref name="readDone" scoped="" ref="0xb5584cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb5571d88" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5571d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5570010"/>
        <function-ref name="configure" scoped="" ref="0xb55700f0"/>
        <function-ref name="dataReady" scoped="" ref="0xb55701d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb5571530" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5571530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5571708"/>
        <function-ref name="configureSingle" scoped="" ref="0xb55717e8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb55718c8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb55719a8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb5571a88"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb5571b68"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb5571c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb5570310" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5570310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb55704e8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb55705c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb55707f8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb55707f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5570e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5573e70" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5573e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5571070"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5571150"/>
        <function-ref name="request" scoped="" ref="0xb5571230"/>
        <function-ref name="granted" scoped="" ref="0xb5571310"/>
        <function-ref name="isOwner" scoped="" ref="0xb55713f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb5569668" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb5569668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5569cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb5567010" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb5567010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5567658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0xb63b4990" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <component-ref qname="Msp430InternalTemperatureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb63b4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb63b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb61d4580" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb61d4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb61d4758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb61d5968" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb61d5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb61d4010"/>
        <function-ref name="readDone" scoped="" ref="0xb61d4268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb61d5580" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb61d5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb61d5758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb63ab978" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb63ab978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb61d5010"/>
        <function-ref name="readDone" scoped="" ref="0xb61d5268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0xb555f970" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0xb555f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb555fb48"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb555fc28"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb555fd08"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb555fde8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb555fec8"/>
        <function-ref name="reset" scoped="" ref="0xb555d010"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb555d0f0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb555d1d0"/>
        <function-ref name="resetDone" scoped="" ref="0xb555d2b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb555d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb5561030" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb5561030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb5561208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb5561418" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb5561418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5561a40"/>
        <function-ref name="readDone" scoped="" ref="0xb5561c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb5562080" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb5562080"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb5562258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0xb5560010" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0xb5560010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55601e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55602c8"/>
        <function-ref name="request" scoped="" ref="0xb55603a8"/>
        <function-ref name="granted" scoped="" ref="0xb5560488"/>
        <function-ref name="isOwner" scoped="" ref="0xb5560568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0xb5560dc0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0xb5560dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb555f010"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb555f0f0"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb555f1d0"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb555f2b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb555f390"/>
        <function-ref name="reset" scoped="" ref="0xb555f470"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb555f550"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb555f630"/>
        <function-ref name="resetDone" scoped="" ref="0xb555f710"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb555f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0xb55606e8" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0xb55606e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55608c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55609a0"/>
        <function-ref name="request" scoped="" ref="0xb5560a80"/>
        <function-ref name="granted" scoped="" ref="0xb5560b60"/>
        <function-ref name="isOwner" scoped="" ref="0xb5560c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb5562468" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb5562468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5562a90"/>
        <function-ref name="readDone" scoped="" ref="0xb5562ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0xb637c1b8" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0xb637c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb637c390"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb637c470"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb637c550"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb637c630"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb637c710"/>
        <function-ref name="reset" scoped="" ref="0xb637c7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb637c8d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb637c9b0"/>
        <function-ref name="resetDone" scoped="" ref="0xb637ca90"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb637cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb637f740" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb637f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb637f918"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb637f9f8"/>
        <function-ref name="request" scoped="" ref="0xb637fad8"/>
        <function-ref name="granted" scoped="" ref="0xb637fbb8"/>
        <function-ref name="isOwner" scoped="" ref="0xb637fc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0xb632f5f0" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0xb632f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb632f7c8"/>
        <function-ref name="disable" scoped="" ref="0xb632f8a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb632f988"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb632fa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0xb632bee8" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0xb632bee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb632a0e0"/>
        <function-ref name="runTask" scoped="" ref="0xb632a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0xb632bab0" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0xb632bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb632bc88"/>
        <function-ref name="runTask" scoped="" ref="0xb632bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0xb6330be8" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0xb6330be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6330dc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6330ea0"/>
        <function-ref name="toggle" scoped="" ref="0xb632f010"/>
        <function-ref name="isOutput" scoped="" ref="0xb632f0f0"/>
        <function-ref name="get" scoped="" ref="0xb632f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb632f2b0"/>
        <function-ref name="set" scoped="" ref="0xb632f390"/>
        <function-ref name="clr" scoped="" ref="0xb632f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0xb63316f8" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0xb63316f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb63318e0"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb63319c0"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb6331aa0"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb6331b80"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb6331c60"/>
        <function-ref name="reset" scoped="" ref="0xb6331d40"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb6331e20"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb6331f00"/>
        <function-ref name="resetDone" scoped="" ref="0xb6330010"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb63300f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0xb6330270" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0xb6330270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6330448"/>
        <function-ref name="isInput" scoped="" ref="0xb6330528"/>
        <function-ref name="toggle" scoped="" ref="0xb6330608"/>
        <function-ref name="isOutput" scoped="" ref="0xb63306e8"/>
        <function-ref name="get" scoped="" ref="0xb63307c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63308a8"/>
        <function-ref name="set" scoped="" ref="0xb6330988"/>
        <function-ref name="clr" scoped="" ref="0xb6330a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb632ce70" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb632ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb632b070"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb632b150"/>
        <function-ref name="led1On" scoped="" ref="0xb632b230"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb632b310"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb632b3f0"/>
        <function-ref name="get" scoped="" ref="0xb632b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb632b5b0"/>
        <function-ref name="led2On" scoped="" ref="0xb632b930"/>
        <function-ref name="set" scoped="" ref="0xb632b770"/>
        <function-ref name="led2Off" scoped="" ref="0xb632b690"/>
        <function-ref name="led0On" scoped="" ref="0xb632b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb632fc58" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb632fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb632c790"/>
        <function-ref name="fired" scoped="" ref="0xb632ea20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb632c150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb632eed0"/>
        <function-ref name="getdt" scoped="" ref="0xb632cc40"/>
        <function-ref name="gett0" scoped="" ref="0xb632c9e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb632ec78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb632e2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb632c470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb632e548"/>
        <function-ref name="stop" scoped="" ref="0xb632e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0xb6325d78" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0xb6325d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6324010"/>
        <function-ref name="disable" scoped="" ref="0xb63240f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb63241d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb63242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0xb63252f0" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0xb63252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63254c8"/>
        <function-ref name="isInput" scoped="" ref="0xb63255a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6325688"/>
        <function-ref name="isOutput" scoped="" ref="0xb6325768"/>
        <function-ref name="get" scoped="" ref="0xb6325848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6325928"/>
        <function-ref name="set" scoped="" ref="0xb6325a08"/>
        <function-ref name="clr" scoped="" ref="0xb6325ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0xb63268c0" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0xb63268c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6326a98"/>
        <function-ref name="isInput" scoped="" ref="0xb6326b78"/>
        <function-ref name="toggle" scoped="" ref="0xb6326c58"/>
        <function-ref name="isOutput" scoped="" ref="0xb6326d38"/>
        <function-ref name="get" scoped="" ref="0xb6326e18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6326ef8"/>
        <function-ref name="set" scoped="" ref="0xb6325010"/>
        <function-ref name="clr" scoped="" ref="0xb63250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6326158" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6326158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6326330"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6326410"/>
        <function-ref name="request" scoped="" ref="0xb63264f0"/>
        <function-ref name="granted" scoped="" ref="0xb63265d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb63266b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb63226d0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb63226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63228a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6322988"/>
        <function-ref name="setResistor" scoped="" ref="0xb6322a68"/>
        <function-ref name="toggle" scoped="" ref="0xb6322b48"/>
        <function-ref name="isOutput" scoped="" ref="0xb6322c28"/>
        <function-ref name="getResistor" scoped="" ref="0xb6322d08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6322de8"/>
        <function-ref name="get" scoped="" ref="0xb6322ec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6318010"/>
        <function-ref name="getRaw" scoped="" ref="0xb63180f0"/>
        <function-ref name="set" scoped="" ref="0xb63181d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb63182b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6318390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb63184f0"/>
        <function-ref name="clr" scoped="" ref="0xb63185d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6323cd8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6323cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6323eb0"/>
        <function-ref name="isInput" scoped="" ref="0xb6322010"/>
        <function-ref name="toggle" scoped="" ref="0xb63220f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63221d0"/>
        <function-ref name="get" scoped="" ref="0xb63222b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6322390"/>
        <function-ref name="set" scoped="" ref="0xb6322470"/>
        <function-ref name="clr" scoped="" ref="0xb6322550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6317e90" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6317e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6316080"/>
        <function-ref name="isInput" scoped="" ref="0xb6316160"/>
        <function-ref name="setResistor" scoped="" ref="0xb6316240"/>
        <function-ref name="toggle" scoped="" ref="0xb6316320"/>
        <function-ref name="isOutput" scoped="" ref="0xb6316400"/>
        <function-ref name="getResistor" scoped="" ref="0xb63164e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63165c0"/>
        <function-ref name="get" scoped="" ref="0xb63166a0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6316780"/>
        <function-ref name="getRaw" scoped="" ref="0xb6316860"/>
        <function-ref name="set" scoped="" ref="0xb6316940"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6316a20"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6316b00"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6316c60"/>
        <function-ref name="clr" scoped="" ref="0xb6316d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6317518" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6317518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63176f0"/>
        <function-ref name="isInput" scoped="" ref="0xb63177d0"/>
        <function-ref name="toggle" scoped="" ref="0xb63178b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6317990"/>
        <function-ref name="get" scoped="" ref="0xb6317a70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6317b50"/>
        <function-ref name="set" scoped="" ref="0xb6317c30"/>
        <function-ref name="clr" scoped="" ref="0xb6317d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb63136d0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb63136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63138a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6313988"/>
        <function-ref name="setResistor" scoped="" ref="0xb6313a68"/>
        <function-ref name="toggle" scoped="" ref="0xb6313b48"/>
        <function-ref name="isOutput" scoped="" ref="0xb6313c28"/>
        <function-ref name="getResistor" scoped="" ref="0xb6313d08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6313de8"/>
        <function-ref name="get" scoped="" ref="0xb6313ec8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6312010"/>
        <function-ref name="getRaw" scoped="" ref="0xb63120f0"/>
        <function-ref name="set" scoped="" ref="0xb63121d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb63122b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6312390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb63124f0"/>
        <function-ref name="clr" scoped="" ref="0xb63125d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6315cc0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6315cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6315e98"/>
        <function-ref name="isInput" scoped="" ref="0xb6313010"/>
        <function-ref name="toggle" scoped="" ref="0xb63130f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63131d0"/>
        <function-ref name="get" scoped="" ref="0xb63132b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6313390"/>
        <function-ref name="set" scoped="" ref="0xb6313470"/>
        <function-ref name="clr" scoped="" ref="0xb6313550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb630e010" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb630e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb630e1e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb630e2c8"/>
        <function-ref name="start" scoped="" ref="0xb630e3a8"/>
        <function-ref name="stop" scoped="" ref="0xb630e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0xb630ac50" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0xb630ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb630ae28"/>
        <function-ref name="runTask" scoped="" ref="0xb630af08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb630bde0" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0xb630bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb630a010"/>
        <function-ref name="isInput" scoped="" ref="0xb630a0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb630a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb630a2b0"/>
        <function-ref name="get" scoped="" ref="0xb630a390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb630a470"/>
        <function-ref name="set" scoped="" ref="0xb630a550"/>
        <function-ref name="clr" scoped="" ref="0xb630a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0xb630c9c8" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0xb630c9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb630cba0"/>
        <function-ref name="isInput" scoped="" ref="0xb630cc80"/>
        <function-ref name="toggle" scoped="" ref="0xb630cd60"/>
        <function-ref name="isOutput" scoped="" ref="0xb630ce40"/>
        <function-ref name="get" scoped="" ref="0xb630cf20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb630b018"/>
        <function-ref name="set" scoped="" ref="0xb630b0f8"/>
        <function-ref name="clr" scoped="" ref="0xb630b1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0xb630b3e8" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0xb630b3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb630b5c0"/>
        <function-ref name="isInput" scoped="" ref="0xb630b6a0"/>
        <function-ref name="toggle" scoped="" ref="0xb630b780"/>
        <function-ref name="isOutput" scoped="" ref="0xb630b860"/>
        <function-ref name="get" scoped="" ref="0xb630b940"/>
        <function-ref name="makeOutput" scoped="" ref="0xb630ba20"/>
        <function-ref name="set" scoped="" ref="0xb630bb00"/>
        <function-ref name="clr" scoped="" ref="0xb630bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb630e6f0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb630e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb630c248"/>
        <function-ref name="fired" scoped="" ref="0xb630d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb630dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb630d998"/>
        <function-ref name="getdt" scoped="" ref="0xb630c6f8"/>
        <function-ref name="gett0" scoped="" ref="0xb630c4a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb630d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb630ed18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb630df10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb630d010"/>
        <function-ref name="stop" scoped="" ref="0xb630d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb630fc70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb630fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6302790"/>
        <function-ref name="fired" scoped="" ref="0xb6303a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6302150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6303ed0"/>
        <function-ref name="getdt" scoped="" ref="0xb6302c40"/>
        <function-ref name="gett0" scoped="" ref="0xb63029e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6303c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb63032c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6302470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6303548"/>
        <function-ref name="stop" scoped="" ref="0xb63037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0xb62f9010" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0xb62f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f91e8"/>
        <function-ref name="fired" scoped="" ref="0xb62f92c8"/>
        <function-ref name="disable" scoped="" ref="0xb62f93a8"/>
        <function-ref name="edge" scoped="" ref="0xb62f9488"/>
        <function-ref name="enable" scoped="" ref="0xb62f9568"/>
        <function-ref name="getValue" scoped="" ref="0xb62f9648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0xb62f48e0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0xb62f48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f4ab8"/>
        <function-ref name="fired" scoped="" ref="0xb62f4b98"/>
        <function-ref name="disable" scoped="" ref="0xb62f4c78"/>
        <function-ref name="edge" scoped="" ref="0xb62f4d58"/>
        <function-ref name="enable" scoped="" ref="0xb62f4e38"/>
        <function-ref name="getValue" scoped="" ref="0xb62f4f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0xb62f8a38" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0xb62f8a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f8c10"/>
        <function-ref name="fired" scoped="" ref="0xb62f8cf0"/>
        <function-ref name="disable" scoped="" ref="0xb62f8dd0"/>
        <function-ref name="edge" scoped="" ref="0xb62f8eb0"/>
        <function-ref name="enable" scoped="" ref="0xb62f7010"/>
        <function-ref name="getValue" scoped="" ref="0xb62f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0xb62f7c18" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0xb62f7c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f7df0"/>
        <function-ref name="fired" scoped="" ref="0xb62f7ed0"/>
        <function-ref name="disable" scoped="" ref="0xb62f6010"/>
        <function-ref name="edge" scoped="" ref="0xb62f60f0"/>
        <function-ref name="enable" scoped="" ref="0xb62f61d0"/>
        <function-ref name="getValue" scoped="" ref="0xb62f62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0xb62fedd8" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0xb62fedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62fd010"/>
        <function-ref name="fired" scoped="" ref="0xb62fd0f0"/>
        <function-ref name="disable" scoped="" ref="0xb62fd1d0"/>
        <function-ref name="edge" scoped="" ref="0xb62fd2b0"/>
        <function-ref name="enable" scoped="" ref="0xb62fd390"/>
        <function-ref name="getValue" scoped="" ref="0xb62fd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0xb62f56e8" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0xb62f56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f5940"/>
        <function-ref name="fired" scoped="" ref="0xb62f5a20"/>
        <function-ref name="disable" scoped="" ref="0xb62f5b00"/>
        <function-ref name="edge" scoped="" ref="0xb62f5be0"/>
        <function-ref name="enable" scoped="" ref="0xb62f5cc0"/>
        <function-ref name="getValue" scoped="" ref="0xb62f5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0xb62f98c0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0xb62f98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f9a98"/>
        <function-ref name="fired" scoped="" ref="0xb62f9b78"/>
        <function-ref name="disable" scoped="" ref="0xb62f9c58"/>
        <function-ref name="edge" scoped="" ref="0xb62f9d38"/>
        <function-ref name="enable" scoped="" ref="0xb62f9e18"/>
        <function-ref name="getValue" scoped="" ref="0xb62f9ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0xb62f31a8" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0xb62f31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f3380"/>
        <function-ref name="fired" scoped="" ref="0xb62f3460"/>
        <function-ref name="disable" scoped="" ref="0xb62f3540"/>
        <function-ref name="edge" scoped="" ref="0xb62f3620"/>
        <function-ref name="enable" scoped="" ref="0xb62f3700"/>
        <function-ref name="getValue" scoped="" ref="0xb62f37e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0xb62fac10" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0xb62fac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62fade8"/>
        <function-ref name="fired" scoped="" ref="0xb62faec8"/>
        <function-ref name="disable" scoped="" ref="0xb62fe010"/>
        <function-ref name="edge" scoped="" ref="0xb62fe0f0"/>
        <function-ref name="enable" scoped="" ref="0xb62fe1d0"/>
        <function-ref name="getValue" scoped="" ref="0xb62fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0xb62f6528" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0xb62f6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f6700"/>
        <function-ref name="fired" scoped="" ref="0xb62f67e0"/>
        <function-ref name="disable" scoped="" ref="0xb62f68c0"/>
        <function-ref name="edge" scoped="" ref="0xb62f69a0"/>
        <function-ref name="enable" scoped="" ref="0xb62f6a80"/>
        <function-ref name="getValue" scoped="" ref="0xb62f6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0xb62fd6e8" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0xb62fd6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62fd8c0"/>
        <function-ref name="fired" scoped="" ref="0xb62fd9a0"/>
        <function-ref name="disable" scoped="" ref="0xb62fda80"/>
        <function-ref name="edge" scoped="" ref="0xb62fdb60"/>
        <function-ref name="enable" scoped="" ref="0xb62fdc40"/>
        <function-ref name="getValue" scoped="" ref="0xb62fdd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0xb62f4030" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0xb62f4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f4208"/>
        <function-ref name="fired" scoped="" ref="0xb62f42e8"/>
        <function-ref name="disable" scoped="" ref="0xb62f43c8"/>
        <function-ref name="edge" scoped="" ref="0xb62f44a8"/>
        <function-ref name="enable" scoped="" ref="0xb62f4588"/>
        <function-ref name="getValue" scoped="" ref="0xb62f4668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0xb62f8188" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0xb62f8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f8360"/>
        <function-ref name="fired" scoped="" ref="0xb62f8440"/>
        <function-ref name="disable" scoped="" ref="0xb62f8520"/>
        <function-ref name="edge" scoped="" ref="0xb62f8600"/>
        <function-ref name="enable" scoped="" ref="0xb62f86e0"/>
        <function-ref name="getValue" scoped="" ref="0xb62f87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0xb62f7368" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0xb62f7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f7540"/>
        <function-ref name="fired" scoped="" ref="0xb62f7620"/>
        <function-ref name="disable" scoped="" ref="0xb62f7700"/>
        <function-ref name="edge" scoped="" ref="0xb62f77e0"/>
        <function-ref name="enable" scoped="" ref="0xb62f78c0"/>
        <function-ref name="getValue" scoped="" ref="0xb62f79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0xb62fe528" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0xb62fe528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62fe700"/>
        <function-ref name="fired" scoped="" ref="0xb62fe7e0"/>
        <function-ref name="disable" scoped="" ref="0xb62fe8c0"/>
        <function-ref name="edge" scoped="" ref="0xb62fe9a0"/>
        <function-ref name="enable" scoped="" ref="0xb62fea80"/>
        <function-ref name="getValue" scoped="" ref="0xb62feb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0xb62f6dd8" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0xb62f6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f5010"/>
        <function-ref name="fired" scoped="" ref="0xb62f50f0"/>
        <function-ref name="disable" scoped="" ref="0xb62f51d0"/>
        <function-ref name="edge" scoped="" ref="0xb62f52b0"/>
        <function-ref name="enable" scoped="" ref="0xb62f5390"/>
        <function-ref name="getValue" scoped="" ref="0xb62f5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0xb62ee608" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0xb62ee608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ee7e0"/>
        <function-ref name="fired" scoped="" ref="0xb62ee8c0"/>
        <function-ref name="disable" scoped="" ref="0xb62ee9a0"/>
        <function-ref name="edge" scoped="" ref="0xb62eea80"/>
        <function-ref name="enable" scoped="" ref="0xb62eeb60"/>
        <function-ref name="getValue" scoped="" ref="0xb62eec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0xb62e7010" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0xb62e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62e71e8"/>
        <function-ref name="fired" scoped="" ref="0xb62e72c8"/>
        <function-ref name="disable" scoped="" ref="0xb62e73a8"/>
        <function-ref name="edge" scoped="" ref="0xb62e7488"/>
        <function-ref name="enable" scoped="" ref="0xb62e7568"/>
        <function-ref name="getValue" scoped="" ref="0xb62e7648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0xb62eb070" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0xb62eb070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62eb248"/>
        <function-ref name="fired" scoped="" ref="0xb62eb328"/>
        <function-ref name="disable" scoped="" ref="0xb62eb408"/>
        <function-ref name="edge" scoped="" ref="0xb62eb4e8"/>
        <function-ref name="enable" scoped="" ref="0xb62eb5c8"/>
        <function-ref name="getValue" scoped="" ref="0xb62eb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0xb62ea288" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0xb62ea288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ea460"/>
        <function-ref name="fired" scoped="" ref="0xb62ea540"/>
        <function-ref name="disable" scoped="" ref="0xb62ea620"/>
        <function-ref name="edge" scoped="" ref="0xb62ea700"/>
        <function-ref name="enable" scoped="" ref="0xb62ea7e0"/>
        <function-ref name="getValue" scoped="" ref="0xb62ea8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0xb62ef448" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0xb62ef448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ef620"/>
        <function-ref name="fired" scoped="" ref="0xb62ef700"/>
        <function-ref name="disable" scoped="" ref="0xb62ef7e0"/>
        <function-ref name="edge" scoped="" ref="0xb62ef8c0"/>
        <function-ref name="enable" scoped="" ref="0xb62ef9a0"/>
        <function-ref name="getValue" scoped="" ref="0xb62efa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0xb62e9cf8" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0xb62e9cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62e8010"/>
        <function-ref name="fired" scoped="" ref="0xb62e80f0"/>
        <function-ref name="disable" scoped="" ref="0xb62e81d0"/>
        <function-ref name="edge" scoped="" ref="0xb62e82b0"/>
        <function-ref name="enable" scoped="" ref="0xb62e8390"/>
        <function-ref name="getValue" scoped="" ref="0xb62e8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0xb62eeeb8" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0xb62eeeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ed0c0"/>
        <function-ref name="fired" scoped="" ref="0xb62ed1a0"/>
        <function-ref name="disable" scoped="" ref="0xb62ed280"/>
        <function-ref name="edge" scoped="" ref="0xb62ed360"/>
        <function-ref name="enable" scoped="" ref="0xb62ed440"/>
        <function-ref name="getValue" scoped="" ref="0xb62ed520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0xb62e78c0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0xb62e78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62e7a98"/>
        <function-ref name="fired" scoped="" ref="0xb62e7b78"/>
        <function-ref name="disable" scoped="" ref="0xb62e7c58"/>
        <function-ref name="edge" scoped="" ref="0xb62e7d38"/>
        <function-ref name="enable" scoped="" ref="0xb62e7e18"/>
        <function-ref name="getValue" scoped="" ref="0xb62e7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0xb62f0288" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0xb62f0288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f0460"/>
        <function-ref name="fired" scoped="" ref="0xb62f0540"/>
        <function-ref name="disable" scoped="" ref="0xb62f0620"/>
        <function-ref name="edge" scoped="" ref="0xb62f0700"/>
        <function-ref name="enable" scoped="" ref="0xb62f07e0"/>
        <function-ref name="getValue" scoped="" ref="0xb62f08c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0xb62eab38" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0xb62eab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ead10"/>
        <function-ref name="fired" scoped="" ref="0xb62eadf0"/>
        <function-ref name="disable" scoped="" ref="0xb62eaed0"/>
        <function-ref name="edge" scoped="" ref="0xb62e9010"/>
        <function-ref name="enable" scoped="" ref="0xb62e90f0"/>
        <function-ref name="getValue" scoped="" ref="0xb62e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0xb62efcf8" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0xb62efcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62efed0"/>
        <function-ref name="fired" scoped="" ref="0xb62ee010"/>
        <function-ref name="disable" scoped="" ref="0xb62ee0f0"/>
        <function-ref name="edge" scoped="" ref="0xb62ee1d0"/>
        <function-ref name="enable" scoped="" ref="0xb62ee2b0"/>
        <function-ref name="getValue" scoped="" ref="0xb62ee390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0xb62e86e8" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0xb62e86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62e88c0"/>
        <function-ref name="fired" scoped="" ref="0xb62e89a0"/>
        <function-ref name="disable" scoped="" ref="0xb62e8a80"/>
        <function-ref name="edge" scoped="" ref="0xb62e8b60"/>
        <function-ref name="enable" scoped="" ref="0xb62e8c40"/>
        <function-ref name="getValue" scoped="" ref="0xb62e8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0xb62ed798" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0xb62ed798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ed970"/>
        <function-ref name="fired" scoped="" ref="0xb62eda50"/>
        <function-ref name="disable" scoped="" ref="0xb62edb30"/>
        <function-ref name="edge" scoped="" ref="0xb62edc10"/>
        <function-ref name="enable" scoped="" ref="0xb62edcf0"/>
        <function-ref name="getValue" scoped="" ref="0xb62eddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0xb62eb920" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0xb62eb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ebaf8"/>
        <function-ref name="fired" scoped="" ref="0xb62ebbd8"/>
        <function-ref name="disable" scoped="" ref="0xb62ebcb8"/>
        <function-ref name="edge" scoped="" ref="0xb62ebd98"/>
        <function-ref name="enable" scoped="" ref="0xb62ebe78"/>
        <function-ref name="getValue" scoped="" ref="0xb62ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0xb62f0b38" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0xb62f0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62f0d10"/>
        <function-ref name="fired" scoped="" ref="0xb62f0df0"/>
        <function-ref name="disable" scoped="" ref="0xb62f0ed0"/>
        <function-ref name="edge" scoped="" ref="0xb62ef010"/>
        <function-ref name="enable" scoped="" ref="0xb62ef0f0"/>
        <function-ref name="getValue" scoped="" ref="0xb62ef1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0xb62e9448" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0xb62e9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62e9620"/>
        <function-ref name="fired" scoped="" ref="0xb62e9700"/>
        <function-ref name="disable" scoped="" ref="0xb62e97e0"/>
        <function-ref name="edge" scoped="" ref="0xb62e98c0"/>
        <function-ref name="enable" scoped="" ref="0xb62e99a0"/>
        <function-ref name="getValue" scoped="" ref="0xb62e9a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0xb6272190" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0xb6272190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6272368"/>
        <function-ref name="fired" scoped="" ref="0xb6272448"/>
        <function-ref name="disable" scoped="" ref="0xb6272528"/>
        <function-ref name="edge" scoped="" ref="0xb6272608"/>
        <function-ref name="enable" scoped="" ref="0xb62726e8"/>
        <function-ref name="getValue" scoped="" ref="0xb62727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb626aad0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0xb626aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb626aca8"/>
        <function-ref name="disable" scoped="" ref="0xb626ad88"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb626ae68"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6272010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6268d38" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb6268d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6268f20"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6227018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6227ca0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6227ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6227e88"/>
        <function-ref name="configure" scoped="" ref="0xb6226010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb6227158" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6227158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6227330"/>
        <function-ref name="requested" scoped="" ref="0xb6227410"/>
        <function-ref name="granted" scoped="" ref="0xb62274f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb62275d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb62276b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb62685f8" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb62685f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb62687e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb62688c0"/>
        <function-ref name="request" scoped="" ref="0xb62689a0"/>
        <function-ref name="granted" scoped="" ref="0xb6268a80"/>
        <function-ref name="isOwner" scoped="" ref="0xb6268b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb62277f0" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb62277f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb62279c8"/>
        <function-ref name="userId" scoped="" ref="0xb6227aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb550f430" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb550f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb550f608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb550f768" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb550f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb550f940"/>
        <function-ref name="isEmpty" scoped="" ref="0xb550fa20"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb550fb00"/>
        <function-ref name="dequeue" scoped="" ref="0xb550fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb550c030" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb550c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb550c218"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb550c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb550b010" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb550b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb550b1f8"/>
        <function-ref name="configure" scoped="" ref="0xb550b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb550b438" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb550b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb550b610"/>
        <function-ref name="isEmpty" scoped="" ref="0xb550b6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb550b7d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb550b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb550c438" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb550c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb550c610"/>
        <function-ref name="requested" scoped="" ref="0xb550c6f0"/>
        <function-ref name="granted" scoped="" ref="0xb550c7d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb550c8b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb550c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb550b9f0" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb550b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb550bbc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb550bca8"/>
        <function-ref name="led1On" scoped="" ref="0xb550bd88"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb550be68"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb550a010"/>
        <function-ref name="get" scoped="" ref="0xb550a0f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb550a1d0"/>
        <function-ref name="led0On" scoped="" ref="0xb550a550"/>
        <function-ref name="set" scoped="" ref="0xb550a390"/>
        <function-ref name="led2On" scoped="" ref="0xb550a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb550a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb550d8d0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb550d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb550dab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb550db98"/>
        <function-ref name="request" scoped="" ref="0xb550dc78"/>
        <function-ref name="granted" scoped="" ref="0xb550dd58"/>
        <function-ref name="isOwner" scoped="" ref="0xb550de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb550cad0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb550cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb550cca8"/>
        <function-ref name="userId" scoped="" ref="0xb550cd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb550a6d0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb550a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb550a8a8"/>
        <function-ref name="runTask" scoped="" ref="0xb550a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb6224ca0" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb6224ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6224e78"/>
        <function-ref name="stopDone" scoped="" ref="0xb6223010"/>
        <function-ref name="start" scoped="" ref="0xb62230f0"/>
        <function-ref name="stop" scoped="" ref="0xb62231d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb6223310" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb6223310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb62234e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb6223628" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6223628"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6223800"/>
        <function-ref name="requested" scoped="" ref="0xb62238e0"/>
        <function-ref name="granted" scoped="" ref="0xb62239c0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6223aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6223b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb6223cc0" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6223cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6223e98"/>
        <function-ref name="userId" scoped="" ref="0xb6207010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb54ef2e0" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb54ef2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb54ef4b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb54ef598"/>
        <function-ref name="start" scoped="" ref="0xb54ef678"/>
        <function-ref name="stop" scoped="" ref="0xb54ef758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb54ef898" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb54ef898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb54efa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0xb54ee748" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0xb54ee748"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb54ee920"/>
        <function-ref name="runTask" scoped="" ref="0xb54eea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb54efbb0" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb54efbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb54efd88"/>
        <function-ref name="requested" scoped="" ref="0xb54efe68"/>
        <function-ref name="granted" scoped="" ref="0xb54ee010"/>
        <function-ref name="isOwner" scoped="" ref="0xb54ee0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb54ee1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0xb54eeb80" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0xb54eeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb54eed58"/>
        <function-ref name="runTask" scoped="" ref="0xb54eee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0xb54f1ed0" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb54f1ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb54ef0c0"/>
        <function-ref name="stop" scoped="" ref="0xb54ef1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb54ee310" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb54ee310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb54ee4e8"/>
        <function-ref name="userId" scoped="" ref="0xb54ee5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6202dc0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6202dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb61ff8e0"/>
        <function-ref name="fired" scoped="" ref="0xb6201b60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb61ff2a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb61ff048"/>
        <function-ref name="getdt" scoped="" ref="0xb61ffd90"/>
        <function-ref name="gett0" scoped="" ref="0xb61ffb38"/>
        <function-ref name="isRunning" scoped="" ref="0xb6201db8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6201408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb61ff5c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6201688"/>
        <function-ref name="stop" scoped="" ref="0xb6201908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb61feb80" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb61feb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb61fed58"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb61fee38"/>
        <function-ref name="led1On" scoped="" ref="0xb61fef18"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb61fb010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb61fb0f0"/>
        <function-ref name="get" scoped="" ref="0xb61fb1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb61fb2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb61fb630"/>
        <function-ref name="set" scoped="" ref="0xb61fb390"/>
        <function-ref name="led0On" scoped="" ref="0xb61fb470"/>
        <function-ref name="led2On" scoped="" ref="0xb61fb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb61f8ef8" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0xb61f8ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f70e0"/>
        <function-ref name="isInput" scoped="" ref="0xb61f71c0"/>
        <function-ref name="toggle" scoped="" ref="0xb61f72a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f7380"/>
        <function-ref name="get" scoped="" ref="0xb61f7460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f7540"/>
        <function-ref name="set" scoped="" ref="0xb61f7620"/>
        <function-ref name="clr" scoped="" ref="0xb61f7700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb61fbeb0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb61fbeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb61f80c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb61f78f0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0xb61f78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f7ac8"/>
        <function-ref name="isInput" scoped="" ref="0xb61f7ba8"/>
        <function-ref name="toggle" scoped="" ref="0xb61f7c88"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f7d68"/>
        <function-ref name="get" scoped="" ref="0xb61f7e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f7f28"/>
        <function-ref name="set" scoped="" ref="0xb61f6018"/>
        <function-ref name="clr" scoped="" ref="0xb61f60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb61f8230" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb61f8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb61f8408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb61f84e8"/>
        <function-ref name="led1On" scoped="" ref="0xb61f85c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb61f86a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb61f8788"/>
        <function-ref name="get" scoped="" ref="0xb61f8868"/>
        <function-ref name="led1Off" scoped="" ref="0xb61f8948"/>
        <function-ref name="led2Off" scoped="" ref="0xb61f8cc8"/>
        <function-ref name="set" scoped="" ref="0xb61f8a28"/>
        <function-ref name="led0On" scoped="" ref="0xb61f8b08"/>
        <function-ref name="led2On" scoped="" ref="0xb61f8be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb61f62e8" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0xb61f62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f64c0"/>
        <function-ref name="isInput" scoped="" ref="0xb61f65a0"/>
        <function-ref name="toggle" scoped="" ref="0xb61f6680"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f6760"/>
        <function-ref name="get" scoped="" ref="0xb61f6840"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f6920"/>
        <function-ref name="set" scoped="" ref="0xb61f6a00"/>
        <function-ref name="clr" scoped="" ref="0xb61f6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb61fad58" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0xb61fad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e6010"/>
        <function-ref name="isInput" scoped="" ref="0xb61e60f0"/>
        <function-ref name="toggle" scoped="" ref="0xb61e61d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb61e62b0"/>
        <function-ref name="get" scoped="" ref="0xb61e6390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61e6470"/>
        <function-ref name="set" scoped="" ref="0xb61e6550"/>
        <function-ref name="clr" scoped="" ref="0xb61e6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb61e6840" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0xb61e6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e6a18"/>
        <function-ref name="isInput" scoped="" ref="0xb61e6af8"/>
        <function-ref name="toggle" scoped="" ref="0xb61e6bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb61e6cb8"/>
        <function-ref name="get" scoped="" ref="0xb61e6d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61e6e78"/>
        <function-ref name="set" scoped="" ref="0xb61e5010"/>
        <function-ref name="clr" scoped="" ref="0xb61e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb61e5c88" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb61e5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb61e5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb61e5300" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0xb61e5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e54d8"/>
        <function-ref name="isInput" scoped="" ref="0xb61e55b8"/>
        <function-ref name="toggle" scoped="" ref="0xb61e5698"/>
        <function-ref name="isOutput" scoped="" ref="0xb61e5778"/>
        <function-ref name="get" scoped="" ref="0xb61e5858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61e5938"/>
        <function-ref name="set" scoped="" ref="0xb61e5a18"/>
        <function-ref name="clr" scoped="" ref="0xb61e5af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb61e3350" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb61e3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e3528"/>
        <function-ref name="isInput" scoped="" ref="0xb61e3608"/>
        <function-ref name="setResistor" scoped="" ref="0xb61e36e8"/>
        <function-ref name="toggle" scoped="" ref="0xb61e37c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb61e38a8"/>
        <function-ref name="getResistor" scoped="" ref="0xb61e3988"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61e3a68"/>
        <function-ref name="get" scoped="" ref="0xb61e3b48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb61e3c28"/>
        <function-ref name="getRaw" scoped="" ref="0xb61e3d08"/>
        <function-ref name="set" scoped="" ref="0xb61e3de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb61e3ec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb61e2010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb61e2170"/>
        <function-ref name="clr" scoped="" ref="0xb61e2250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb61e49b8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb61e49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e4b90"/>
        <function-ref name="isInput" scoped="" ref="0xb61e4c70"/>
        <function-ref name="toggle" scoped="" ref="0xb61e4d50"/>
        <function-ref name="isOutput" scoped="" ref="0xb61e4e30"/>
        <function-ref name="get" scoped="" ref="0xb61e4f10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61e3010"/>
        <function-ref name="set" scoped="" ref="0xb61e30f0"/>
        <function-ref name="clr" scoped="" ref="0xb61e31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb61e1b20" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb61e1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e1cf8"/>
        <function-ref name="isInput" scoped="" ref="0xb61e1dd8"/>
        <function-ref name="setResistor" scoped="" ref="0xb61e1eb8"/>
        <function-ref name="toggle" scoped="" ref="0xb61df010"/>
        <function-ref name="isOutput" scoped="" ref="0xb61df0f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb61df1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61df2b0"/>
        <function-ref name="get" scoped="" ref="0xb61df390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb61df470"/>
        <function-ref name="getRaw" scoped="" ref="0xb61df550"/>
        <function-ref name="set" scoped="" ref="0xb61df630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb61df710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb61df7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb61df950"/>
        <function-ref name="clr" scoped="" ref="0xb61dfa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb61e11a8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb61e11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61e1380"/>
        <function-ref name="isInput" scoped="" ref="0xb61e1460"/>
        <function-ref name="toggle" scoped="" ref="0xb61e1540"/>
        <function-ref name="isOutput" scoped="" ref="0xb61e1620"/>
        <function-ref name="get" scoped="" ref="0xb61e1700"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61e17e0"/>
        <function-ref name="set" scoped="" ref="0xb61e18c0"/>
        <function-ref name="clr" scoped="" ref="0xb61e19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb61dd350" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb61dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61dd528"/>
        <function-ref name="isInput" scoped="" ref="0xb61dd608"/>
        <function-ref name="setResistor" scoped="" ref="0xb61dd6e8"/>
        <function-ref name="toggle" scoped="" ref="0xb61dd7c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb61dd8a8"/>
        <function-ref name="getResistor" scoped="" ref="0xb61dd988"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61dda68"/>
        <function-ref name="get" scoped="" ref="0xb61ddb48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb61ddc28"/>
        <function-ref name="getRaw" scoped="" ref="0xb61ddd08"/>
        <function-ref name="set" scoped="" ref="0xb61ddde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb61ddec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb61dc010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb61dc170"/>
        <function-ref name="clr" scoped="" ref="0xb61dc250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb61de990" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb61de990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61deb68"/>
        <function-ref name="isInput" scoped="" ref="0xb61dec48"/>
        <function-ref name="toggle" scoped="" ref="0xb61ded28"/>
        <function-ref name="isOutput" scoped="" ref="0xb61dee08"/>
        <function-ref name="get" scoped="" ref="0xb61deee8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61dd010"/>
        <function-ref name="set" scoped="" ref="0xb61dd0f0"/>
        <function-ref name="clr" scoped="" ref="0xb61dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb61d0010" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb61d0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb61d01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb61d13f8" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb61d13f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb61d1a20"/>
        <function-ref name="readDone" scoped="" ref="0xb61d1c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb61d1010" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb61d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb61d11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb61d2450" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb61d2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb61d2a78"/>
        <function-ref name="readDone" scoped="" ref="0xb61d2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0xb54cf430" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0xb54cf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb54cf608"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb54cf6e8"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb54cf7c8"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb54cf8a8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb54cf988"/>
        <function-ref name="reset" scoped="" ref="0xb54cfa68"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb54cfb48"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb54cfc28"/>
        <function-ref name="resetDone" scoped="" ref="0xb54cfd08"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb54cfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb54d2ac8" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb54d2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb54d2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb54d2eb0" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb54d2eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb54d14e8"/>
        <function-ref name="readDone" scoped="" ref="0xb54d1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb54d4af8" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb54d4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb54d4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0xb54d1a58" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0xb54d1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb54d1c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb54d1d10"/>
        <function-ref name="request" scoped="" ref="0xb54d1df0"/>
        <function-ref name="granted" scoped="" ref="0xb54d1ed0"/>
        <function-ref name="isOwner" scoped="" ref="0xb54d0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0xb54d0868" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0xb54d0868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb54d0a40"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb54d0b20"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb54d0c00"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb54d0ce0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb54d0dc0"/>
        <function-ref name="reset" scoped="" ref="0xb54d0ea0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb54cf010"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb54cf0f0"/>
        <function-ref name="resetDone" scoped="" ref="0xb54cf1d0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb54cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0xb54d0190" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0xb54d0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb54d0368"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb54d0448"/>
        <function-ref name="request" scoped="" ref="0xb54d0528"/>
        <function-ref name="granted" scoped="" ref="0xb54d0608"/>
        <function-ref name="isOwner" scoped="" ref="0xb54d06e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb54d4ee0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb54d4ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb54d2558"/>
        <function-ref name="readDone" scoped="" ref="0xb54d27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb61d0d40" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb61d0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb61d0f18"/>
        <function-ref name="stopDone" scoped="" ref="0xb61cd010"/>
        <function-ref name="start" scoped="" ref="0xb61cd0f0"/>
        <function-ref name="stop" scoped="" ref="0xb61cd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb61cd630" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb61cd630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb61cd808"/>
        <function-ref name="getPayload" scoped="" ref="0xb61cd8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61cd9c8"/>
        <function-ref name="cancel" scoped="" ref="0xb61cdaa8"/>
        <function-ref name="sendDone" scoped="" ref="0xb61cdb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb61cc6a8" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0xb61cc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb61cc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb61cca00" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb61cca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb61ccbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb61cccb8"/>
        <function-ref name="getPayload" scoped="" ref="0xb61ccd98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61cce78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb61cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb61b54e8" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb61b54e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb61be010"/>
        <function-ref name="clear" scoped="" ref="0xb61be3c8"/>
        <function-ref name="isValid" scoped="" ref="0xb61b5c38"/>
        <function-ref name="set" scoped="" ref="0xb61be780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb61b0e68" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb61b0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb61b3050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb61b3130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb61b3210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb61b32f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb61cc010" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb61cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb61cc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb61bcb18" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb61bcb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb61bccf0"/>
        <function-ref name="noAck" scoped="" ref="0xb61bcdd0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb61bceb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb61c0998" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb61c0998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb61c0b70"/>
        <function-ref name="source" scoped="" ref="0xb61c0c50"/>
        <function-ref name="address" scoped="" ref="0xb61c0d30"/>
        <function-ref name="destination" scoped="" ref="0xb61c0e10"/>
        <function-ref name="setSource" scoped="" ref="0xb61c0ef0"/>
        <function-ref name="setDestination" scoped="" ref="0xb61ca010"/>
        <function-ref name="type" scoped="" ref="0xb61ca0f0"/>
        <function-ref name="setType" scoped="" ref="0xb61ca1d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb61ca2b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb61ca390"/>
        <function-ref name="localGroup" scoped="" ref="0xb61ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb61beec0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb61beec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb61b79e0"/>
        <function-ref name="clear" scoped="" ref="0xb61b7d98"/>
        <function-ref name="isValid" scoped="" ref="0xb61b7628"/>
        <function-ref name="set" scoped="" ref="0xb61b4178"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb61a8b40" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb61a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb61a8d18"/>
        <function-ref name="stopDone" scoped="" ref="0xb61a8df8"/>
        <function-ref name="start" scoped="" ref="0xb61a8ed8"/>
        <function-ref name="stop" scoped="" ref="0xb61a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb6197578" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb6197578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb6197750"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb6197830"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb6197910"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb61979f0"/>
        <function-ref name="setCca" scoped="" ref="0xb6197ad0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb6197bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6196280" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0xb6196280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb61964d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb61a4510" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb61a4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb61a46e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb61a47c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb61a48a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61a4988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb61a4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb61a7470" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb61a7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb61a7648"/>
        <function-ref name="getPayload" scoped="" ref="0xb61a7728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61a7808"/>
        <function-ref name="cancel" scoped="" ref="0xb61a78e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb61a79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb61a5510" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0xb61a5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb61a56e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb619ed40" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb619ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb619ef18"/>
        <function-ref name="setNetwork" scoped="" ref="0xb61a3010"/>
        <function-ref name="getRssi" scoped="" ref="0xb61a30f0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb61a31d0"/>
        <function-ref name="getPower" scoped="" ref="0xb61a32b0"/>
        <function-ref name="getLqi" scoped="" ref="0xb61a3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6197da0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb6197da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb61a2010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb61a20f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb61a21d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb61a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb61a7e30" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb61a7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb61a5050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb61a35b0" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb61a35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb61a3788"/>
        <function-ref name="noAck" scoped="" ref="0xb61a3868"/>
        <function-ref name="wasAcked" scoped="" ref="0xb61a3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb61927a8" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb61927a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6192980"/>
        <function-ref name="setRetries" scoped="" ref="0xb6192a60"/>
        <function-ref name="getRetries" scoped="" ref="0xb6192b40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6192c20"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6192d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb61a5880" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb61a5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb61a5a58"/>
        <function-ref name="source" scoped="" ref="0xb61a5b38"/>
        <function-ref name="address" scoped="" ref="0xb61a5c18"/>
        <function-ref name="destination" scoped="" ref="0xb61a5cf8"/>
        <function-ref name="setSource" scoped="" ref="0xb61a5dd8"/>
        <function-ref name="setDestination" scoped="" ref="0xb61a5eb8"/>
        <function-ref name="type" scoped="" ref="0xb61a4010"/>
        <function-ref name="setType" scoped="" ref="0xb61a40f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb61a41d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb61a42b0"/>
        <function-ref name="localGroup" scoped="" ref="0xb61a4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb619c9a0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb619c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb619cb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6190458" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb6190458"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6190630"/>
        <function-ref name="stopDone" scoped="" ref="0xb6190710"/>
        <function-ref name="start" scoped="" ref="0xb61907f0"/>
        <function-ref name="stop" scoped="" ref="0xb61908d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6186118" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6186118"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb61862f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6186b00" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb6186b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6186cd8"/>
        <function-ref name="setRetries" scoped="" ref="0xb6186db8"/>
        <function-ref name="getRetries" scoped="" ref="0xb6186e98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6183010"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb61830f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb618b2a0" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb618b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb618b478"/>
        <function-ref name="setNetwork" scoped="" ref="0xb618b558"/>
        <function-ref name="getRssi" scoped="" ref="0xb618b638"/>
        <function-ref name="getNetwork" scoped="" ref="0xb618b718"/>
        <function-ref name="getPower" scoped="" ref="0xb618b7f8"/>
        <function-ref name="getLqi" scoped="" ref="0xb618b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb618c760" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0xb618c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb618c938"/>
        <function-ref name="getPayload" scoped="" ref="0xb618ca18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb618caf8"/>
        <function-ref name="cancel" scoped="" ref="0xb618cbd8"/>
        <function-ref name="sendDone" scoped="" ref="0xb618ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb61864e0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb61864e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb61866b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6186798"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6186878"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6186958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6185be0" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0xb6185be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6185db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb618baf8" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb618baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb618bcd0"/>
        <function-ref name="noAck" scoped="" ref="0xb618bdb0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb618be90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6190d88" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6190d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb618d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb618d0f0"/>
        <function-ref name="request" scoped="" ref="0xb618d1d0"/>
        <function-ref name="granted" scoped="" ref="0xb618d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb618d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6185470" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0xb6185470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6185648"/>
        <function-ref name="getPayload" scoped="" ref="0xb6185728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6185808"/>
        <function-ref name="cancel" scoped="" ref="0xb61858e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb61859c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb618c010" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0xb618c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb618c1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb618c2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb618c3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb618c488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb618c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb618cee8" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0xb618cee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb618b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb61838d0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb61838d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6183aa8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6183b88"/>
        <function-ref name="start" scoped="" ref="0xb6183c68"/>
        <function-ref name="stop" scoped="" ref="0xb6183d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb617f9a0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb617f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb617fb78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb617fc58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb617fd38"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb617fe18"/>
        <function-ref name="setCca" scoped="" ref="0xb617fef8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb617e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6183ed8" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb6183ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb617f0c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb617f1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb617f280"/>
        <function-ref name="cancel" scoped="" ref="0xb617f360"/>
        <function-ref name="sendDone" scoped="" ref="0xb617f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb617f5e8" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb617f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb617f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb617e940" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb617e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb617eb18"/>
        <function-ref name="stopDone" scoped="" ref="0xb617ebf8"/>
        <function-ref name="start" scoped="" ref="0xb617ecd8"/>
        <function-ref name="stop" scoped="" ref="0xb617edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb617b748" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb617b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb617b920"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb617ba00"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb617bae0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb617bbc0"/>
        <function-ref name="setCca" scoped="" ref="0xb617bca0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb617bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb616f9b0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0xb616f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb616fb88"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb616fc68"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb616fd48"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb616fe28"/>
        <function-ref name="setCca" scoped="" ref="0xb616ff08"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb6178010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb6173ef8" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb6173ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb616e0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0xb616e1c0"/>
        <function-ref name="getRssi" scoped="" ref="0xb616e2a0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb616e380"/>
        <function-ref name="getPower" scoped="" ref="0xb616e460"/>
        <function-ref name="getLqi" scoped="" ref="0xb616e540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0xb616f1f0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0xb616f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb616f3c8"/>
        <function-ref name="cancel" scoped="" ref="0xb616f4a8"/>
        <function-ref name="modify" scoped="" ref="0xb616f588"/>
        <function-ref name="sendDone" scoped="" ref="0xb616f668"/>
        <function-ref name="resend" scoped="" ref="0xb616f748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb617b010" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb617b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb617b1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb617b2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb617b3a8"/>
        <function-ref name="cancel" scoped="" ref="0xb617b488"/>
        <function-ref name="sendDone" scoped="" ref="0xb617b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6178e10" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb6178e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6173010"/>
        <function-ref name="rand32" scoped="" ref="0xb61730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6174c28" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0xb6174c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6174e00"/>
        <function-ref name="stop" scoped="" ref="0xb6174ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb6169698" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb6169698"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb6169870"/>
        <function-ref name="getHeader" scoped="" ref="0xb6169950"/>
        <function-ref name="getMetadata" scoped="" ref="0xb6169a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0xb61741e0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0xb61741e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb61743b8"/>
        <function-ref name="rfOff" scoped="" ref="0xb6174498"/>
        <function-ref name="rxOn" scoped="" ref="0xb6174578"/>
        <function-ref name="startVReg" scoped="" ref="0xb6174658"/>
        <function-ref name="stopVReg" scoped="" ref="0xb6174738"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb6174818"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb61748f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb61749d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6173280" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb6173280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6173458"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6173538"/>
        <function-ref name="led1On" scoped="" ref="0xb6173618"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb61736f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb61737d8"/>
        <function-ref name="get" scoped="" ref="0xb61738b8"/>
        <function-ref name="led1Off" scoped="" ref="0xb6173998"/>
        <function-ref name="led2Off" scoped="" ref="0xb6173d18"/>
        <function-ref name="set" scoped="" ref="0xb6173a78"/>
        <function-ref name="led0On" scoped="" ref="0xb6173b58"/>
        <function-ref name="led2On" scoped="" ref="0xb6173c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb617a010" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb617a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb617a1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb617a2c8"/>
        <function-ref name="request" scoped="" ref="0xb617a3a8"/>
        <function-ref name="granted" scoped="" ref="0xb617a488"/>
        <function-ref name="isOwner" scoped="" ref="0xb617a568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0xb6167ef0" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0xb6167ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb616d188"/>
        <function-ref name="toIdle" scoped="" ref="0xb616d268"/>
        <function-ref name="isState" scoped="" ref="0xb616d348"/>
        <function-ref name="isIdle" scoped="" ref="0xb616d428"/>
        <function-ref name="requestState" scoped="" ref="0xb616d508"/>
        <function-ref name="forceState" scoped="" ref="0xb616d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0xb6164170" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0xb6164170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6164348"/>
        <function-ref name="runTask" scoped="" ref="0xb6164428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0xb61658a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0xb61658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6165a78"/>
        <function-ref name="runTask" scoped="" ref="0xb6165b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0xb6165060" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0xb6165060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6165238"/>
        <function-ref name="runTask" scoped="" ref="0xb6165318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb61304a8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb61304a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb6130680"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb6130760"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb6130840"/>
        <function-ref name="syncDone" scoped="" ref="0xb6130920"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb6130a00"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb6130ae0"/>
        <function-ref name="setChannel" scoped="" ref="0xb6130bc0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb6130ca0"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb6130d80"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb6130e60"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb6138010"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb61380f0"/>
        <function-ref name="sync" scoped="" ref="0xb61381d0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6138330"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb6138410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb6137100" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0xb6137100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6137728"/>
        <function-ref name="readDone" scoped="" ref="0xb6137980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb61385e0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0xb61385e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb61387b8"/>
        <function-ref name="rfOff" scoped="" ref="0xb6138898"/>
        <function-ref name="rxOn" scoped="" ref="0xb6138978"/>
        <function-ref name="startVReg" scoped="" ref="0xb6138a58"/>
        <function-ref name="stopVReg" scoped="" ref="0xb6138b38"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb6138c18"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb6138cf8"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb6138dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb613b3e0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb613b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb613b5b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb613b698"/>
        <function-ref name="request" scoped="" ref="0xb613b778"/>
        <function-ref name="granted" scoped="" ref="0xb613b858"/>
        <function-ref name="isOwner" scoped="" ref="0xb613b938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb612b010" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb612b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb612b1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb612b2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb612b3a8"/>
        <function-ref name="syncDone" scoped="" ref="0xb612b488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb612b568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb612b648"/>
        <function-ref name="setChannel" scoped="" ref="0xb612b728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb612b808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb612b8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb612b9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb612baa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb612bb88"/>
        <function-ref name="sync" scoped="" ref="0xb612bc68"/>
        <function-ref name="getChannel" scoped="" ref="0xb612bdc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb612bea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0xb611fd88" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb611fd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611b010"/>
        <function-ref name="write" scoped="" ref="0xb611b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0xb6128010" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb6128010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb61281e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0xb61285d8" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0xb61285d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6127ab8"/>
        <function-ref name="fired" scoped="" ref="0xb6127288"/>
        <function-ref name="startAt" scoped="" ref="0xb6127778"/>
        <function-ref name="isRunning" scoped="" ref="0xb6127500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6127d30"/>
        <function-ref name="start" scoped="" ref="0xb6128d28"/>
        <function-ref name="stop" scoped="" ref="0xb6127010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0xb611f358" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb611f358"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611f530"/>
        <function-ref name="write" scoped="" ref="0xb611f610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb6125a38" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0xb6125a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6125c10"/>
        <function-ref name="isInput" scoped="" ref="0xb6125cf0"/>
        <function-ref name="toggle" scoped="" ref="0xb6125dd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6125eb0"/>
        <function-ref name="get" scoped="" ref="0xb6124010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61240f0"/>
        <function-ref name="set" scoped="" ref="0xb61241d0"/>
        <function-ref name="clr" scoped="" ref="0xb61242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb612abb8" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0xb612abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb61291f0"/>
        <function-ref name="readDone" scoped="" ref="0xb6129448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0xb61102c8" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0xb61102c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb61104a0"/>
        <function-ref name="runTask" scoped="" ref="0xb6110580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0xb611b330" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb611b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611b508"/>
        <function-ref name="write" scoped="" ref="0xb611b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb611b838" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb611b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611ba10"/>
        <function-ref name="write" scoped="" ref="0xb611baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0xb611a8f8" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb611a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611aad0"/>
        <function-ref name="write" scoped="" ref="0xb611abb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb6122010" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6122010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb61221e8"/>
        <function-ref name="changed" scoped="" ref="0xb61222c8"/>
        <function-ref name="amGroup" scoped="" ref="0xb61223a8"/>
        <function-ref name="setAddress" scoped="" ref="0xb6122488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb6125030" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb6125030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6125208"/>
        <function-ref name="isInput" scoped="" ref="0xb61252e8"/>
        <function-ref name="toggle" scoped="" ref="0xb61253c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb61254a8"/>
        <function-ref name="get" scoped="" ref="0xb6125588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6125668"/>
        <function-ref name="set" scoped="" ref="0xb6125748"/>
        <function-ref name="clr" scoped="" ref="0xb6125828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0xb6119010" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb6119010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb61192e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0xb61244c0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0xb61244c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6124698"/>
        <function-ref name="isInput" scoped="" ref="0xb6124778"/>
        <function-ref name="toggle" scoped="" ref="0xb6124858"/>
        <function-ref name="isOutput" scoped="" ref="0xb6124938"/>
        <function-ref name="get" scoped="" ref="0xb6124a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6124af8"/>
        <function-ref name="set" scoped="" ref="0xb6124bd8"/>
        <function-ref name="clr" scoped="" ref="0xb6124cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb612d4a0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb612d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb612d678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb611f878" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb611f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611fa50"/>
        <function-ref name="write" scoped="" ref="0xb611fb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0xb6119530" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb6119530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb6119708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb6119950" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb6119950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6119b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6119c08"/>
        <function-ref name="request" scoped="" ref="0xb6119ce8"/>
        <function-ref name="granted" scoped="" ref="0xb6119dc8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6119ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0xb6118908" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0xb6118908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6118ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6118bc0"/>
        <function-ref name="request" scoped="" ref="0xb6118ca0"/>
        <function-ref name="granted" scoped="" ref="0xb6118d80"/>
        <function-ref name="isOwner" scoped="" ref="0xb6118e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb612a0d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0xb612a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb612a2a8"/>
        <function-ref name="rfOff" scoped="" ref="0xb612a388"/>
        <function-ref name="rxOn" scoped="" ref="0xb612a468"/>
        <function-ref name="startVReg" scoped="" ref="0xb612a548"/>
        <function-ref name="stopVReg" scoped="" ref="0xb612a628"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb612a708"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb612a7e8"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb612a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0xb611ae00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb611ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611f010"/>
        <function-ref name="write" scoped="" ref="0xb611f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0xb611a3f0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb611a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611a5c8"/>
        <function-ref name="write" scoped="" ref="0xb611a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0xb6117758" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb6117758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb6117930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6116010" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb6116010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb61161e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb61162c8"/>
        <function-ref name="led1On" scoped="" ref="0xb61163a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6116488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6116568"/>
        <function-ref name="get" scoped="" ref="0xb6116648"/>
        <function-ref name="led1Off" scoped="" ref="0xb6116728"/>
        <function-ref name="led2Off" scoped="" ref="0xb6116aa8"/>
        <function-ref name="set" scoped="" ref="0xb6116808"/>
        <function-ref name="led0On" scoped="" ref="0xb61168e8"/>
        <function-ref name="led2On" scoped="" ref="0xb61169c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0xb6111ad0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0xb6111ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6111ca8"/>
        <function-ref name="runTask" scoped="" ref="0xb6111d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb612d830" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb612d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb612da08"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb612dae8"/>
        <function-ref name="request" scoped="" ref="0xb612dbc8"/>
        <function-ref name="granted" scoped="" ref="0xb612dca8"/>
        <function-ref name="isOwner" scoped="" ref="0xb612dd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0xb611cbc8" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb611cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611cda0"/>
        <function-ref name="write" scoped="" ref="0xb611ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0xb611c678" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb611c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb611c8d0"/>
        <function-ref name="write" scoped="" ref="0xb611c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0xb6123010" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0xb6123010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb61231e8"/>
        <function-ref name="disable" scoped="" ref="0xb61232c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb61233a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6123488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0xb6118158" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0xb6118158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6118330"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6118410"/>
        <function-ref name="request" scoped="" ref="0xb61184f0"/>
        <function-ref name="granted" scoped="" ref="0xb61185d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb61186b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0xb6117b70" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb6117b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb6117d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60cb4b0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb60cb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60cb688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb60cba78" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0xb60cba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb60c7010"/>
        <function-ref name="fired" scoped="" ref="0xb60c8718"/>
        <function-ref name="startAt" scoped="" ref="0xb60c8c08"/>
        <function-ref name="isRunning" scoped="" ref="0xb60c8990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb60c7288"/>
        <function-ref name="start" scoped="" ref="0xb60c8200"/>
        <function-ref name="stop" scoped="" ref="0xb60c84a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60c6060" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb60c6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60c6238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb60c64d8" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0xb60c64d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb60c59a0"/>
        <function-ref name="fired" scoped="" ref="0xb60c5170"/>
        <function-ref name="startAt" scoped="" ref="0xb60c5660"/>
        <function-ref name="isRunning" scoped="" ref="0xb60c53e8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb60c5c18"/>
        <function-ref name="start" scoped="" ref="0xb60c6c28"/>
        <function-ref name="stop" scoped="" ref="0xb60c6ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb54b1a20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb54b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb54ae010"/>
        <function-ref name="fired" scoped="" ref="0xb54b0718"/>
        <function-ref name="startAt" scoped="" ref="0xb54b0c08"/>
        <function-ref name="isRunning" scoped="" ref="0xb54b0990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb54ae288"/>
        <function-ref name="start" scoped="" ref="0xb54b0200"/>
        <function-ref name="stop" scoped="" ref="0xb54b04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb54b15c8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb54b15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb54b17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb54adbe0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb54adbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb54aa0f8"/>
        <function-ref name="fired" scoped="" ref="0xb54ac898"/>
        <function-ref name="startAt" scoped="" ref="0xb54acd88"/>
        <function-ref name="isRunning" scoped="" ref="0xb54acb10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb54aa370"/>
        <function-ref name="start" scoped="" ref="0xb54ac380"/>
        <function-ref name="stop" scoped="" ref="0xb54ac620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb54ad788" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb54ad788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb54ad960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb54a0c88" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb54a0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb54a0e60"/>
        <function-ref name="setEvent" scoped="" ref="0xb549e010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb549e0f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb549e1d0"/>
        <function-ref name="fired" scoped="" ref="0xb549e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb54a1588" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb54a1588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb54a1760"/>
        <function-ref name="setClockSource" scoped="" ref="0xb54a1840"/>
        <function-ref name="enableEvents" scoped="" ref="0xb54a1920"/>
        <function-ref name="get" scoped="" ref="0xb54a1a00"/>
        <function-ref name="disableEvents" scoped="" ref="0xb54a1ae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb54a1bc0"/>
        <function-ref name="getMode" scoped="" ref="0xb54a1ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb54a1d80"/>
        <function-ref name="overflow" scoped="" ref="0xb54a1e60"/>
        <function-ref name="setMode" scoped="" ref="0xb54a0010"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb54a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb54a0250" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb54a0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb54a0428"/>
        <function-ref name="getControl" scoped="" ref="0xb54a0508"/>
        <function-ref name="enableEvents" scoped="" ref="0xb54a05e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb54a06c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb54a07a8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb54a0888"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb54a0968"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb54a0a48"/>
        <function-ref name="setControl" scoped="" ref="0xb54a0b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0xb54976b0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb54976b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb5497888"/>
        <function-ref name="setEvent" scoped="" ref="0xb5497968"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb5497a48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb5497b28"/>
        <function-ref name="fired" scoped="" ref="0xb5497c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb5498060" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5498060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5498238"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5498318"/>
        <function-ref name="enableEvents" scoped="" ref="0xb54983f8"/>
        <function-ref name="get" scoped="" ref="0xb54984d8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb54985b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5498698"/>
        <function-ref name="getMode" scoped="" ref="0xb5498778"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5498858"/>
        <function-ref name="overflow" scoped="" ref="0xb5498938"/>
        <function-ref name="setMode" scoped="" ref="0xb5498a18"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb5498af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb549d6b8" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb549d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb549cb80"/>
        <function-ref name="fired" scoped="" ref="0xb549c350"/>
        <function-ref name="startAt" scoped="" ref="0xb549c840"/>
        <function-ref name="isRunning" scoped="" ref="0xb549c5c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb549cdf8"/>
        <function-ref name="start" scoped="" ref="0xb549de08"/>
        <function-ref name="stop" scoped="" ref="0xb549c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb549d240" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb549d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb549d418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb5498c58" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5498c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb5498e30"/>
        <function-ref name="getControl" scoped="" ref="0xb5498f10"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5497010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb54970f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb54971d0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb54972b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb5497390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb5497470"/>
        <function-ref name="setControl" scoped="" ref="0xb5497550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb60b7218" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb60b7218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb60b7968"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb60b7e58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb60b7be0"/>
        <function-ref name="overflow" scoped="" ref="0xb60b5110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb60b3cd8" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0xb60b3cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb60b1478"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb60b1968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb60b16f0"/>
        <function-ref name="overflow" scoped="" ref="0xb60b1be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb60b4a98" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb60b4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb60b3200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb60b36f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb60b3478"/>
        <function-ref name="overflow" scoped="" ref="0xb60b3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb54a96b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb54a96b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb54a8b80"/>
        <function-ref name="fired" scoped="" ref="0xb54a8350"/>
        <function-ref name="startAt" scoped="" ref="0xb54a8840"/>
        <function-ref name="isRunning" scoped="" ref="0xb54a85c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb54a8df8"/>
        <function-ref name="start" scoped="" ref="0xb54a9e08"/>
        <function-ref name="stop" scoped="" ref="0xb54a80d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb54a63b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0xb54a63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb54a4878"/>
        <function-ref name="fired" scoped="" ref="0xb54a4048"/>
        <function-ref name="startAt" scoped="" ref="0xb54a4538"/>
        <function-ref name="isRunning" scoped="" ref="0xb54a42c0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb54a4af0"/>
        <function-ref name="start" scoped="" ref="0xb54a6b08"/>
        <function-ref name="stop" scoped="" ref="0xb54a6da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb54a7180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb54a7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb54a78d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb54a7dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb54a7b48"/>
        <function-ref name="overflow" scoped="" ref="0xb54a6048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0xb60a3c18" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0xb60a3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60a3df0"/>
        <function-ref name="isInput" scoped="" ref="0xb60a3ed0"/>
        <function-ref name="toggle" scoped="" ref="0xb60a2010"/>
        <function-ref name="isOutput" scoped="" ref="0xb60a20f0"/>
        <function-ref name="get" scoped="" ref="0xb60a21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60a22b0"/>
        <function-ref name="set" scoped="" ref="0xb60a2390"/>
        <function-ref name="clr" scoped="" ref="0xb60a2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0xb60a2688" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0xb60a2688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60a2860"/>
        <function-ref name="isInput" scoped="" ref="0xb60a2940"/>
        <function-ref name="toggle" scoped="" ref="0xb60a2a20"/>
        <function-ref name="isOutput" scoped="" ref="0xb60a2b00"/>
        <function-ref name="get" scoped="" ref="0xb60a2be0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60a2cc0"/>
        <function-ref name="set" scoped="" ref="0xb60a2da0"/>
        <function-ref name="clr" scoped="" ref="0xb60a2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb60a10b0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0xb60a10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60a1288"/>
        <function-ref name="isInput" scoped="" ref="0xb60a1368"/>
        <function-ref name="toggle" scoped="" ref="0xb60a1448"/>
        <function-ref name="isOutput" scoped="" ref="0xb60a1528"/>
        <function-ref name="get" scoped="" ref="0xb60a1608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60a16e8"/>
        <function-ref name="set" scoped="" ref="0xb60a17c8"/>
        <function-ref name="clr" scoped="" ref="0xb60a18a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0xb60a3210" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb60a3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60a33e8"/>
        <function-ref name="isInput" scoped="" ref="0xb60a34c8"/>
        <function-ref name="toggle" scoped="" ref="0xb60a35a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb60a3688"/>
        <function-ref name="get" scoped="" ref="0xb60a3768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60a3848"/>
        <function-ref name="set" scoped="" ref="0xb60a3928"/>
        <function-ref name="clr" scoped="" ref="0xb60a3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0xb60a04c8" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0xb60a04c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60a06a0"/>
        <function-ref name="isInput" scoped="" ref="0xb60a0780"/>
        <function-ref name="toggle" scoped="" ref="0xb60a0860"/>
        <function-ref name="isOutput" scoped="" ref="0xb60a0940"/>
        <function-ref name="get" scoped="" ref="0xb60a0a20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60a0b00"/>
        <function-ref name="set" scoped="" ref="0xb60a0be0"/>
        <function-ref name="clr" scoped="" ref="0xb60a0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb60ca7e8" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0xb60ca7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60ca9c0"/>
        <function-ref name="isInput" scoped="" ref="0xb60caaa0"/>
        <function-ref name="toggle" scoped="" ref="0xb60cab80"/>
        <function-ref name="isOutput" scoped="" ref="0xb60cac60"/>
        <function-ref name="get" scoped="" ref="0xb60cad40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60cae20"/>
        <function-ref name="set" scoped="" ref="0xb60caf00"/>
        <function-ref name="clr" scoped="" ref="0xb60a3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0xb60a1aa8" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0xb60a1aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60a1c80"/>
        <function-ref name="isInput" scoped="" ref="0xb60a1d60"/>
        <function-ref name="toggle" scoped="" ref="0xb60a1e40"/>
        <function-ref name="isOutput" scoped="" ref="0xb60a1f20"/>
        <function-ref name="get" scoped="" ref="0xb60a0018"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60a00f8"/>
        <function-ref name="set" scoped="" ref="0xb60a01d8"/>
        <function-ref name="clr" scoped="" ref="0xb60a02b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb609e190" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb609e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb609e368"/>
        <function-ref name="isInput" scoped="" ref="0xb609e448"/>
        <function-ref name="setResistor" scoped="" ref="0xb609e528"/>
        <function-ref name="toggle" scoped="" ref="0xb609e608"/>
        <function-ref name="isOutput" scoped="" ref="0xb609e6e8"/>
        <function-ref name="getResistor" scoped="" ref="0xb609e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb609e8a8"/>
        <function-ref name="get" scoped="" ref="0xb609e988"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb609ea68"/>
        <function-ref name="getRaw" scoped="" ref="0xb609eb48"/>
        <function-ref name="set" scoped="" ref="0xb609ec28"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb609ed08"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb609ede8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb609c010"/>
        <function-ref name="clr" scoped="" ref="0xb609c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb609f7f0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb609f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb609f9c8"/>
        <function-ref name="isInput" scoped="" ref="0xb609faa8"/>
        <function-ref name="toggle" scoped="" ref="0xb609fb88"/>
        <function-ref name="isOutput" scoped="" ref="0xb609fc68"/>
        <function-ref name="get" scoped="" ref="0xb609fd48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb609fe28"/>
        <function-ref name="set" scoped="" ref="0xb609ff08"/>
        <function-ref name="clr" scoped="" ref="0xb609e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb609b9a8" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb609b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb609bb80"/>
        <function-ref name="isInput" scoped="" ref="0xb609bc60"/>
        <function-ref name="setResistor" scoped="" ref="0xb609bd40"/>
        <function-ref name="toggle" scoped="" ref="0xb609be20"/>
        <function-ref name="isOutput" scoped="" ref="0xb609bf00"/>
        <function-ref name="getResistor" scoped="" ref="0xb609a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb609a0f0"/>
        <function-ref name="get" scoped="" ref="0xb609a1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb609a2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb609a390"/>
        <function-ref name="set" scoped="" ref="0xb609a470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb609a550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb609a630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb609a790"/>
        <function-ref name="clr" scoped="" ref="0xb609a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb609b030" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb609b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb609b208"/>
        <function-ref name="isInput" scoped="" ref="0xb609b2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb609b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb609b4a8"/>
        <function-ref name="get" scoped="" ref="0xb609b588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb609b668"/>
        <function-ref name="set" scoped="" ref="0xb609b748"/>
        <function-ref name="clr" scoped="" ref="0xb609b828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6098190" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6098190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6098368"/>
        <function-ref name="isInput" scoped="" ref="0xb6098448"/>
        <function-ref name="setResistor" scoped="" ref="0xb6098528"/>
        <function-ref name="toggle" scoped="" ref="0xb6098608"/>
        <function-ref name="isOutput" scoped="" ref="0xb60986e8"/>
        <function-ref name="getResistor" scoped="" ref="0xb60987c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60988a8"/>
        <function-ref name="get" scoped="" ref="0xb6098988"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6098a68"/>
        <function-ref name="getRaw" scoped="" ref="0xb6098b48"/>
        <function-ref name="set" scoped="" ref="0xb6098c28"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6098d08"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6098de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6097010"/>
        <function-ref name="clr" scoped="" ref="0xb60970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb60997c0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb60997c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6099998"/>
        <function-ref name="isInput" scoped="" ref="0xb6099a78"/>
        <function-ref name="toggle" scoped="" ref="0xb6099b58"/>
        <function-ref name="isOutput" scoped="" ref="0xb6099c38"/>
        <function-ref name="get" scoped="" ref="0xb6099d18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6099df8"/>
        <function-ref name="set" scoped="" ref="0xb6099ed8"/>
        <function-ref name="clr" scoped="" ref="0xb6098010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb60969d8" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb60969d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6096bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb6096c90"/>
        <function-ref name="setResistor" scoped="" ref="0xb6096d70"/>
        <function-ref name="toggle" scoped="" ref="0xb6096e50"/>
        <function-ref name="isOutput" scoped="" ref="0xb6095010"/>
        <function-ref name="getResistor" scoped="" ref="0xb60950f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60951d0"/>
        <function-ref name="get" scoped="" ref="0xb60952b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6095390"/>
        <function-ref name="getRaw" scoped="" ref="0xb6095470"/>
        <function-ref name="set" scoped="" ref="0xb6095550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6095630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6095710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6095870"/>
        <function-ref name="clr" scoped="" ref="0xb6095950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6096060" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6096060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6096238"/>
        <function-ref name="isInput" scoped="" ref="0xb6096318"/>
        <function-ref name="toggle" scoped="" ref="0xb60963f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb60964d8"/>
        <function-ref name="get" scoped="" ref="0xb60965b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6096698"/>
        <function-ref name="set" scoped="" ref="0xb6096778"/>
        <function-ref name="clr" scoped="" ref="0xb6096858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6093270" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6093270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6093448"/>
        <function-ref name="isInput" scoped="" ref="0xb6093528"/>
        <function-ref name="setResistor" scoped="" ref="0xb6093608"/>
        <function-ref name="toggle" scoped="" ref="0xb60936e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb60937c8"/>
        <function-ref name="getResistor" scoped="" ref="0xb60938a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6093988"/>
        <function-ref name="get" scoped="" ref="0xb6093a68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6093b48"/>
        <function-ref name="getRaw" scoped="" ref="0xb6093c28"/>
        <function-ref name="set" scoped="" ref="0xb6093d08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6093de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6093ec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6092090"/>
        <function-ref name="clr" scoped="" ref="0xb6092170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb60948a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb60948a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6094a78"/>
        <function-ref name="isInput" scoped="" ref="0xb6094b58"/>
        <function-ref name="toggle" scoped="" ref="0xb6094c38"/>
        <function-ref name="isOutput" scoped="" ref="0xb6094d18"/>
        <function-ref name="get" scoped="" ref="0xb6094df8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6094ed8"/>
        <function-ref name="set" scoped="" ref="0xb6093010"/>
        <function-ref name="clr" scoped="" ref="0xb60930f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6091a18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6091a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6091bf0"/>
        <function-ref name="isInput" scoped="" ref="0xb6091cd0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6091db0"/>
        <function-ref name="toggle" scoped="" ref="0xb6091e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6090010"/>
        <function-ref name="getResistor" scoped="" ref="0xb60900f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60901d0"/>
        <function-ref name="get" scoped="" ref="0xb60902b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6090390"/>
        <function-ref name="getRaw" scoped="" ref="0xb6090470"/>
        <function-ref name="set" scoped="" ref="0xb6090550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6090630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6090710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6090870"/>
        <function-ref name="clr" scoped="" ref="0xb6090950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb60910a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb60910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6091278"/>
        <function-ref name="isInput" scoped="" ref="0xb6091358"/>
        <function-ref name="toggle" scoped="" ref="0xb6091438"/>
        <function-ref name="isOutput" scoped="" ref="0xb6091518"/>
        <function-ref name="get" scoped="" ref="0xb60915f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60916d8"/>
        <function-ref name="set" scoped="" ref="0xb60917b8"/>
        <function-ref name="clr" scoped="" ref="0xb6091898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb608e270" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb608e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb608e448"/>
        <function-ref name="isInput" scoped="" ref="0xb608e528"/>
        <function-ref name="setResistor" scoped="" ref="0xb608e608"/>
        <function-ref name="toggle" scoped="" ref="0xb608e6e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb608e7c8"/>
        <function-ref name="getResistor" scoped="" ref="0xb608e8a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb608e988"/>
        <function-ref name="get" scoped="" ref="0xb608ea68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb608eb48"/>
        <function-ref name="getRaw" scoped="" ref="0xb608ec28"/>
        <function-ref name="set" scoped="" ref="0xb608ed08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb608ede8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb608eec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb608d090"/>
        <function-ref name="clr" scoped="" ref="0xb608d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb608f8a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb608f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb608fa78"/>
        <function-ref name="isInput" scoped="" ref="0xb608fb58"/>
        <function-ref name="toggle" scoped="" ref="0xb608fc38"/>
        <function-ref name="isOutput" scoped="" ref="0xb608fd18"/>
        <function-ref name="get" scoped="" ref="0xb608fdf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb608fed8"/>
        <function-ref name="set" scoped="" ref="0xb608e010"/>
        <function-ref name="clr" scoped="" ref="0xb608e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0xb607f7f0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0xb607f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb607f9c8"/>
        <function-ref name="disable" scoped="" ref="0xb607faa8"/>
        <function-ref name="captured" scoped="" ref="0xb607fb88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb607fc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0xb607fef0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0xb607fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb60820e0"/>
        <function-ref name="disable" scoped="" ref="0xb60821c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb60822a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6082380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0xb6082618" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb6082618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb60827f0"/>
        <function-ref name="disable" scoped="" ref="0xb60828d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb60829b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6082a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0xb607da48" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0xb607da48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb607dc20"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb607dd00"/>
        <function-ref name="captured" scoped="" ref="0xb607dde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb607dec0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6072010"/>
        <function-ref name="setEdge" scoped="" ref="0xb60720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb607e9f0" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb607e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb607ebc8"/>
        <function-ref name="disable" scoped="" ref="0xb607eca8"/>
        <function-ref name="captured" scoped="" ref="0xb607ed88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb607ee68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb607d010" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb607d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb607d1e8"/>
        <function-ref name="getControl" scoped="" ref="0xb607d2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb607d3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb607d488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb607d568"/>
        <function-ref name="disableEvents" scoped="" ref="0xb607d648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb607d728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb607d808"/>
        <function-ref name="setControl" scoped="" ref="0xb607d8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0xb6072270" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6072270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6072448"/>
        <function-ref name="isInput" scoped="" ref="0xb6072528"/>
        <function-ref name="setResistor" scoped="" ref="0xb6072608"/>
        <function-ref name="toggle" scoped="" ref="0xb60726e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb60727c8"/>
        <function-ref name="getResistor" scoped="" ref="0xb60728a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6072988"/>
        <function-ref name="get" scoped="" ref="0xb6072a68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6072b48"/>
        <function-ref name="getRaw" scoped="" ref="0xb6072c28"/>
        <function-ref name="set" scoped="" ref="0xb6072d08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6072de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6072ec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6071090"/>
        <function-ref name="clr" scoped="" ref="0xb6071170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0xb606f608" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0xb606f608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb606f7e0"/>
        <function-ref name="fired" scoped="" ref="0xb606f8c0"/>
        <function-ref name="disable" scoped="" ref="0xb606f9a0"/>
        <function-ref name="edge" scoped="" ref="0xb606fa80"/>
        <function-ref name="enable" scoped="" ref="0xb606fb60"/>
        <function-ref name="getValue" scoped="" ref="0xb606fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb606f010" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0xb606f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb606f1e8"/>
        <function-ref name="disable" scoped="" ref="0xb606f2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb606f3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb606f488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0xb606d010" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0xb606d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb606d1e8"/>
        <function-ref name="fired" scoped="" ref="0xb606d2c8"/>
        <function-ref name="disable" scoped="" ref="0xb606d3a8"/>
        <function-ref name="edge" scoped="" ref="0xb606d488"/>
        <function-ref name="enable" scoped="" ref="0xb606d568"/>
        <function-ref name="getValue" scoped="" ref="0xb606d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb606e960" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0xb606e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb606eb38"/>
        <function-ref name="disable" scoped="" ref="0xb606ec18"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb606ecf8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb606edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5e3dbd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5e3dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3deb0"/>
        <function-ref name="write" scoped="" ref="0xb5e3b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5e42190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5e42190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e42368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5e3e270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e3e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3e448"/>
        <function-ref name="write" scoped="" ref="0xb5e3e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5e3ba00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5e3ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3bbd8"/>
        <function-ref name="write" scoped="" ref="0xb5e3bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5e372b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5e372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e37488"/>
        <function-ref name="write" scoped="" ref="0xb5e37568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5e3be38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5e3be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3a050"/>
        <function-ref name="write" scoped="" ref="0xb5e3a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5e31b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5e31b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e31cf8"/>
        <function-ref name="write" scoped="" ref="0xb5e31dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5e32a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5e32a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e32bd8"/>
        <function-ref name="write" scoped="" ref="0xb5e32cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5e42b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5e42b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e42d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5e34190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5e34190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e34368"/>
        <function-ref name="write" scoped="" ref="0xb5e34448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5e32190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5e32190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e32368"/>
        <function-ref name="write" scoped="" ref="0xb5e32448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5e3eae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5e3eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3ecb8"/>
        <function-ref name="write" scoped="" ref="0xb5e3ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5e3d368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5e3d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3d540"/>
        <function-ref name="write" scoped="" ref="0xb5e3d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5e385c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5e385c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e387a0"/>
        <function-ref name="write" scoped="" ref="0xb5e38880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5e39880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5e39880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e39a58"/>
        <function-ref name="write" scoped="" ref="0xb5e39b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5e3a2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5e3a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3a488"/>
        <function-ref name="write" scoped="" ref="0xb5e3a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5e43530" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5e43530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5e43708"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5e437e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5e438c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5e40910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5e40910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e40ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5e40c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5e40c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e40ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5e34c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5e34c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e34dd8"/>
        <function-ref name="write" scoped="" ref="0xb5e34eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5e3f080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5e3f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e3f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5e325c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5e325c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e327a0"/>
        <function-ref name="write" scoped="" ref="0xb5e32880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5e40260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e40260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e40438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5e35cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5e35cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e35e90"/>
        <function-ref name="write" scoped="" ref="0xb5e34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5e3ef18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5e3ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3d108"/>
        <function-ref name="write" scoped="" ref="0xb5e3d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5e3e6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e3e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3e880"/>
        <function-ref name="write" scoped="" ref="0xb5e3e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5e43da0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5e43da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e42010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5e35448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5e35448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e35620"/>
        <function-ref name="write" scoped="" ref="0xb5e35700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5e376e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5e376e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e378c0"/>
        <function-ref name="write" scoped="" ref="0xb5e379a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5e35880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5e35880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e35a58"/>
        <function-ref name="write" scoped="" ref="0xb5e35b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5e316e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5e316e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e318c0"/>
        <function-ref name="write" scoped="" ref="0xb5e319a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5e32e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5e32e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e31050"/>
        <function-ref name="write" scoped="" ref="0xb5e31130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5e39cb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5e39cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e39e90"/>
        <function-ref name="write" scoped="" ref="0xb5e38010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5e37b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5e37b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e37cf8"/>
        <function-ref name="write" scoped="" ref="0xb5e37dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5e33cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5e33cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e33ed0"/>
        <function-ref name="write" scoped="" ref="0xb5e32010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5e3ab20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5e3ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3acf8"/>
        <function-ref name="write" scoped="" ref="0xb5e3add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5e2f010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5e2f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5e2f1e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5e2f2c8"/>
        <function-ref name="write" scoped="" ref="0xb5e2f3a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5e2f488"/>
        <function-ref name="readDone" scoped="" ref="0xb5e2f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5e43a48" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5e43a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e43c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5e3fde0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5e3fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3e010"/>
        <function-ref name="write" scoped="" ref="0xb5e3e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5e3d7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5e3d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3d978"/>
        <function-ref name="write" scoped="" ref="0xb5e3da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5e38a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5e38a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e38bd8"/>
        <function-ref name="write" scoped="" ref="0xb5e38cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5e3a6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5e3a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3a8c0"/>
        <function-ref name="write" scoped="" ref="0xb5e3a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5e38e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5e38e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e37050"/>
        <function-ref name="write" scoped="" ref="0xb5e37130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5e3b190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5e3b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3b368"/>
        <function-ref name="write" scoped="" ref="0xb5e3b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5e424e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5e424e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e426c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5e3b5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5e3b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e3b7a0"/>
        <function-ref name="write" scoped="" ref="0xb5e3b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5e44e28" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5e44e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5e43050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5e43130"/>
        <function-ref name="request" scoped="" ref="0xb5e43210"/>
        <function-ref name="granted" scoped="" ref="0xb5e432f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5e433d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5e3f3d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5e3f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e3f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5e3fa88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5e3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e3fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5e338c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5e338c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e33a98"/>
        <function-ref name="write" scoped="" ref="0xb5e33b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5e33488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5e33488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e33660"/>
        <function-ref name="write" scoped="" ref="0xb5e33740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5e405b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5e405b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e40790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5e33050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5e33050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e33228"/>
        <function-ref name="write" scoped="" ref="0xb5e33308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5e312b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5e312b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e31488"/>
        <function-ref name="write" scoped="" ref="0xb5e31568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5e38190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5e38190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e38368"/>
        <function-ref name="write" scoped="" ref="0xb5e38448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5e35010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5e35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e351e8"/>
        <function-ref name="write" scoped="" ref="0xb5e352c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5e42840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5e42840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e42a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5e42ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5e42ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e400e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5e39010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5e39010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e391e8"/>
        <function-ref name="write" scoped="" ref="0xb5e392c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5e3f730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5e3f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e3f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5e39448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5e39448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e39620"/>
        <function-ref name="write" scoped="" ref="0xb5e39700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5e345c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5e345c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e349a0"/>
        <function-ref name="write" scoped="" ref="0xb5e34a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5e2f6e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5e2f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5e2f8c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5e2f9a0"/>
        <function-ref name="write" scoped="" ref="0xb5e2fa80"/>
        <function-ref name="beginRead" scoped="" ref="0xb5e2fb60"/>
        <function-ref name="readDone" scoped="" ref="0xb5e2fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb6047e18" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0xb6047e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb6046010"/>
        <function-ref name="writeDone" scoped="" ref="0xb60460f0"/>
        <function-ref name="write" scoped="" ref="0xb60461d0"/>
        <function-ref name="beginRead" scoped="" ref="0xb60462b0"/>
        <function-ref name="readDone" scoped="" ref="0xb6046390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb6047588" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb6047588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb6047760"/>
        <function-ref name="abortRelease" scoped="" ref="0xb6047840"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb6047920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb6046880" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0xb6046880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6046a58"/>
        <function-ref name="write" scoped="" ref="0xb6046b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb6044100" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0xb6044100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60442d8"/>
        <function-ref name="write" scoped="" ref="0xb60443b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb604fd98" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb604fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6047010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb60470f0"/>
        <function-ref name="request" scoped="" ref="0xb60471d0"/>
        <function-ref name="granted" scoped="" ref="0xb60472b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6047390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb60448d8" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0xb60448d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb6044ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0xb6036a48" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb6036a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6036c20"/>
        <function-ref name="sendDone" scoped="" ref="0xb6036d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb6040788" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0xb6040788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb6040960"/>
        <function-ref name="writeDone" scoped="" ref="0xb6040a40"/>
        <function-ref name="write" scoped="" ref="0xb6040b20"/>
        <function-ref name="beginRead" scoped="" ref="0xb6040c00"/>
        <function-ref name="readDone" scoped="" ref="0xb6040ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb6041488" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb6041488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb6041660"/>
        <function-ref name="abortRelease" scoped="" ref="0xb6041740"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb6041820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb603a590" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb603a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb603a768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0xb6036f18" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0xb6036f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb603c108"/>
        <function-ref name="toIdle" scoped="" ref="0xb603c1e8"/>
        <function-ref name="isState" scoped="" ref="0xb603c2c8"/>
        <function-ref name="isIdle" scoped="" ref="0xb603c3a8"/>
        <function-ref name="requestState" scoped="" ref="0xb603c488"/>
        <function-ref name="forceState" scoped="" ref="0xb603c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb603d5b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb603d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb603d790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb603d870"/>
        <function-ref name="request" scoped="" ref="0xb603d950"/>
        <function-ref name="granted" scoped="" ref="0xb603da30"/>
        <function-ref name="isOwner" scoped="" ref="0xb603db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb603f208" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0xb603f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb603f3e0"/>
        <function-ref name="write" scoped="" ref="0xb603f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb603f9b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0xb603f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb603fb88"/>
        <function-ref name="write" scoped="" ref="0xb603fc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb603c6d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb603c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb603c8b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb603c990"/>
        <function-ref name="led1On" scoped="" ref="0xb603ca70"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb603cb50"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb603cc30"/>
        <function-ref name="get" scoped="" ref="0xb603cd10"/>
        <function-ref name="led1Off" scoped="" ref="0xb603cdf0"/>
        <function-ref name="led2Off" scoped="" ref="0xb603b1d0"/>
        <function-ref name="set" scoped="" ref="0xb603ced0"/>
        <function-ref name="led0On" scoped="" ref="0xb603b010"/>
        <function-ref name="led2On" scoped="" ref="0xb603b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6041c98" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6041c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6041e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6040010"/>
        <function-ref name="request" scoped="" ref="0xb60400f0"/>
        <function-ref name="granted" scoped="" ref="0xb60401d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb60402b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0xb6034528" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0xb6034528"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6034700"/>
        <function-ref name="runTask" scoped="" ref="0xb60347e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb603d178" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0xb603d178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb603d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb6000148" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb6000148"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb6000320"/>
        <function-ref name="toIdle" scoped="" ref="0xb6000400"/>
        <function-ref name="isState" scoped="" ref="0xb60004e0"/>
        <function-ref name="isIdle" scoped="" ref="0xb60005c0"/>
        <function-ref name="requestState" scoped="" ref="0xb60006a0"/>
        <function-ref name="forceState" scoped="" ref="0xb6000780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5ffc378" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5ffc378"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5ffc550"/>
        <function-ref name="toIdle" scoped="" ref="0xb5ffc630"/>
        <function-ref name="isState" scoped="" ref="0xb5ffc710"/>
        <function-ref name="isIdle" scoped="" ref="0xb5ffc7f0"/>
        <function-ref name="requestState" scoped="" ref="0xb5ffc8d0"/>
        <function-ref name="forceState" scoped="" ref="0xb5ffc9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5ff93a8" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5ff93a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5ff9580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5ff99d8" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5ff99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5ff9bb0"/>
        <function-ref name="toIdle" scoped="" ref="0xb5ff9c90"/>
        <function-ref name="isState" scoped="" ref="0xb5ff9d70"/>
        <function-ref name="isIdle" scoped="" ref="0xb5ff9e50"/>
        <function-ref name="requestState" scoped="" ref="0xb5ff8010"/>
        <function-ref name="forceState" scoped="" ref="0xb5ff80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb5ffdbc0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5ffdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ffdd98"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ffde78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5ffd888" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5ffd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5ffda60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5ffd1d0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5ffd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ffd3a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5ffd488"/>
        <function-ref name="request" scoped="" ref="0xb5ffd568"/>
        <function-ref name="granted" scoped="" ref="0xb5ffd648"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ffd728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5429a70" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5429a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5429c48"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5429d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb54287a8" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb54287a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5428980"/>
        <function-ref name="sendDone" scoped="" ref="0xb5428a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0xb5428bc0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5428bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5428d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5429e88" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5429e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5428070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb54293b8" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb54293b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5429590"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5429670"/>
        <function-ref name="request" scoped="" ref="0xb5429750"/>
        <function-ref name="granted" scoped="" ref="0xb5429830"/>
        <function-ref name="isOwner" scoped="" ref="0xb5429910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb54281d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0xb54281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb54283a8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb5428488"/>
        <function-ref name="splitRead" scoped="" ref="0xb5428568"/>
        <function-ref name="write" scoped="" ref="0xb5428648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb5fada58" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5fada58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5fadc30"/>
        <function-ref name="configure" scoped="" ref="0xb5fadd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb5fabba8" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5fabba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5fabd80"/>
        <function-ref name="sendDone" scoped="" ref="0xb5fabe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0xb5faae18" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5faae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5fa9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5fadeb8" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5fadeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5fab0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb5faa3c8" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb5faa3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5faa5a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5faa680"/>
        <function-ref name="request" scoped="" ref="0xb5faa760"/>
        <function-ref name="granted" scoped="" ref="0xb5faa840"/>
        <function-ref name="isOwner" scoped="" ref="0xb5faa920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5fad010" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5fad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5fad1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5fad2c8"/>
        <function-ref name="request" scoped="" ref="0xb5fad3a8"/>
        <function-ref name="granted" scoped="" ref="0xb5fad488"/>
        <function-ref name="isOwner" scoped="" ref="0xb5fad568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb5fab290" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0xb5fab290"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb5fab468"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb5fab548"/>
        <function-ref name="splitRead" scoped="" ref="0xb5fab628"/>
        <function-ref name="write" scoped="" ref="0xb5fab708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb5fa8108" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb5fa8108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5fa82e0"/>
        <function-ref name="txDone" scoped="" ref="0xb5fa83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb5f66790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f66790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5f66978"/>
        <function-ref name="configure" scoped="" ref="0xb5f66a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb5f65578" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5f65578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5f65760"/>
        <function-ref name="sendDone" scoped="" ref="0xb5f65840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0xb5f64208" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f64208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5f643f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5f66bb8" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5f66bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5f66d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0xb5f64570" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5f64570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5f64748"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5f64828"/>
        <function-ref name="setUctl" scoped="" ref="0xb5f64908"/>
        <function-ref name="enableUart" scoped="" ref="0xb5f649e8"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5f64ac8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5f64ba8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5f64c88"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5f64d68"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5f64e48"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5f64f28"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5f63018"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5f630f8"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5f631d8"/>
        <function-ref name="getUbr" scoped="" ref="0xb5f63338"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5f63418"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5f634f8"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5f635d8"/>
        <function-ref name="isUart" scoped="" ref="0xb5f636b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5f63798"/>
        <function-ref name="isSpi" scoped="" ref="0xb5f63878"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5f63958"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5f63a38"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5f63b18"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5f63bf8"/>
        <function-ref name="getMode" scoped="" ref="0xb5f63cd8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5f63eb8"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5f62010"/>
        <function-ref name="setUbr" scoped="" ref="0xb5f620f0"/>
        <function-ref name="tx" scoped="" ref="0xb5f621d0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5f622b0"/>
        <function-ref name="disableUart" scoped="" ref="0xb5f62390"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5f62470"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5f62550"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5f62630"/>
        <function-ref name="rx" scoped="" ref="0xb5f62710"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5f627f0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5f628d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5f629b0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5f62a90"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5f62b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5f61170" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5f61170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5f61348"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5f61428"/>
        <function-ref name="led1On" scoped="" ref="0xb5f61508"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5f615e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5f616c8"/>
        <function-ref name="get" scoped="" ref="0xb5f617a8"/>
        <function-ref name="led1Off" scoped="" ref="0xb5f61888"/>
        <function-ref name="led2On" scoped="" ref="0xb5f61c08"/>
        <function-ref name="set" scoped="" ref="0xb5f61a48"/>
        <function-ref name="led2Off" scoped="" ref="0xb5f61968"/>
        <function-ref name="led0On" scoped="" ref="0xb5f61b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb5f65a58" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb5f65a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f65c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f65d20"/>
        <function-ref name="request" scoped="" ref="0xb5f65e00"/>
        <function-ref name="granted" scoped="" ref="0xb5f65ee0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5f66030" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5f66030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f66218"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f662f8"/>
        <function-ref name="request" scoped="" ref="0xb5f663d8"/>
        <function-ref name="granted" scoped="" ref="0xb5f664b8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f66598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb5f66ef0" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0xb5f66ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb5f650e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb5f651c0"/>
        <function-ref name="splitRead" scoped="" ref="0xb5f652a0"/>
        <function-ref name="write" scoped="" ref="0xb5f65380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb5f62cf0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f62cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5f62ec8"/>
        <function-ref name="txDone" scoped="" ref="0xb5f61010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0xb5f61d88" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0xb5f61d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5f5f010"/>
        <function-ref name="runTask" scoped="" ref="0xb5f5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0xb5f57758" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5f57758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5f57930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb5f58b28" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5f58b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5f58d00"/>
        <function-ref name="txDone" scoped="" ref="0xb5f58de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb5f5a280" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5f5a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5f5a458"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5f5a538"/>
        <function-ref name="setUctl" scoped="" ref="0xb5f5a618"/>
        <function-ref name="enableUart" scoped="" ref="0xb5f5a6f8"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5f5a7d8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5f5a8b8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5f5a998"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5f5aa78"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5f5ab58"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5f5ac38"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5f5ad18"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5f5adf8"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5f5aed8"/>
        <function-ref name="getUbr" scoped="" ref="0xb5f59090"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5f59170"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5f59250"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5f59330"/>
        <function-ref name="isUart" scoped="" ref="0xb5f59410"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5f594f0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5f595d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5f596b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5f59790"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5f59870"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5f59950"/>
        <function-ref name="getMode" scoped="" ref="0xb5f59a30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5f59c10"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5f59cf0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5f59dd0"/>
        <function-ref name="tx" scoped="" ref="0xb5f59eb0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5f58010"/>
        <function-ref name="disableUart" scoped="" ref="0xb5f580f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5f581d0"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5f582b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5f58390"/>
        <function-ref name="rx" scoped="" ref="0xb5f58470"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5f58550"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5f58630"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5f58710"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5f587f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5f588d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0xb5f34758" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0xb5f34758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5f34930"/>
        <function-ref name="isInput" scoped="" ref="0xb5f34a10"/>
        <function-ref name="setResistor" scoped="" ref="0xb5f34af0"/>
        <function-ref name="toggle" scoped="" ref="0xb5f34bd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5f34cb0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5f34d90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5f34e70"/>
        <function-ref name="get" scoped="" ref="0xb5f33010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5f330f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb5f331d0"/>
        <function-ref name="set" scoped="" ref="0xb5f332b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5f33390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5f33470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5f335d0"/>
        <function-ref name="clr" scoped="" ref="0xb5f336b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5f52e50" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5f52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5f51050"/>
        <function-ref name="txDone" scoped="" ref="0xb5f51130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0xb5f33918" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0xb5f33918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5f33af0"/>
        <function-ref name="isInput" scoped="" ref="0xb5f33bd0"/>
        <function-ref name="setResistor" scoped="" ref="0xb5f33cb0"/>
        <function-ref name="toggle" scoped="" ref="0xb5f33d90"/>
        <function-ref name="isOutput" scoped="" ref="0xb5f33e70"/>
        <function-ref name="getResistor" scoped="" ref="0xb5f32010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5f320f0"/>
        <function-ref name="get" scoped="" ref="0xb5f321d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5f322b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb5f32390"/>
        <function-ref name="set" scoped="" ref="0xb5f32470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5f32550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5f32630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5f32790"/>
        <function-ref name="clr" scoped="" ref="0xb5f32870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0xb5f32ad8" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0xb5f32ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5f32cb0"/>
        <function-ref name="isInput" scoped="" ref="0xb5f32d90"/>
        <function-ref name="setResistor" scoped="" ref="0xb5f32e70"/>
        <function-ref name="toggle" scoped="" ref="0xb5f31010"/>
        <function-ref name="isOutput" scoped="" ref="0xb5f310f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5f311d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5f312b0"/>
        <function-ref name="get" scoped="" ref="0xb5f31390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5f31470"/>
        <function-ref name="getRaw" scoped="" ref="0xb5f31550"/>
        <function-ref name="set" scoped="" ref="0xb5f31630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5f31710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5f317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5f31950"/>
        <function-ref name="clr" scoped="" ref="0xb5f31a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0xb5f54510" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5f54510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5f546e8"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5f547c8"/>
        <function-ref name="setUctl" scoped="" ref="0xb5f548a8"/>
        <function-ref name="enableUart" scoped="" ref="0xb5f54988"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5f54a68"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5f54b48"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5f54c28"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5f54d08"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5f54de8"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5f54ec8"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5f53010"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5f530f0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5f531d0"/>
        <function-ref name="getUbr" scoped="" ref="0xb5f53330"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5f53410"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5f534f0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5f535d0"/>
        <function-ref name="isUart" scoped="" ref="0xb5f536b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5f53790"/>
        <function-ref name="isSpi" scoped="" ref="0xb5f53870"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5f53950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5f53a30"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5f53b10"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5f53bf0"/>
        <function-ref name="getMode" scoped="" ref="0xb5f53cd0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5f53eb0"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5f52010"/>
        <function-ref name="setUbr" scoped="" ref="0xb5f520f0"/>
        <function-ref name="tx" scoped="" ref="0xb5f521d0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5f522b0"/>
        <function-ref name="disableUart" scoped="" ref="0xb5f52390"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5f52470"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5f52550"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5f52630"/>
        <function-ref name="rx" scoped="" ref="0xb5f52710"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5f527f0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5f528d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5f529b0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5f52a90"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5f52b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0xb5f387a0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0xb5f387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb5f38978"/>
        <function-ref name="getStartByte" scoped="" ref="0xb5f38a58"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb5f38b38"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb5f38c18"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb5f38cf8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb5f38dd8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb5f38eb8"/>
        <function-ref name="getStopBit" scoped="" ref="0xb5f50010"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5f500f0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb5f501d0"/>
        <function-ref name="getData" scoped="" ref="0xb5f502b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb5f50390"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb5f50470"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb5f505d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb5f506b0"/>
        <function-ref name="getIV" scoped="" ref="0xb5f50790"/>
        <function-ref name="enableI2C" scoped="" ref="0xb5f50870"/>
        <function-ref name="setStartBit" scoped="" ref="0xb5f50950"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb5f50a30"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb5f50b10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb5f50bf0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb5f50cd0"/>
        <function-ref name="isI2C" scoped="" ref="0xb5f50db0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb5f50e90"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb5f4f010"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb5f4f1f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb5f4f2d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb5f4f3b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb5f4f490"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb5f4f570"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb5f4f650"/>
        <function-ref name="disableI2C" scoped="" ref="0xb5f4f730"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb5f4f810"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb5f4f8f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb5f4f9d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb5f4fab0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb5f4fb90"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb5f4fc70"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb5f4fd50"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb5f4fe30"/>
        <function-ref name="getStartBit" scoped="" ref="0xb5f4ff10"/>
        <function-ref name="setWordMode" scoped="" ref="0xb5f37010"/>
        <function-ref name="setData" scoped="" ref="0xb5f370f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb5f371d0"/>
        <function-ref name="getClockSource" scoped="" ref="0xb5f372b0"/>
        <function-ref name="getWordMode" scoped="" ref="0xb5f37390"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb5f37470"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb5f37550"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb5f37630"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb5f37910"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb5f379f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb5f37ad0"/>
        <function-ref name="setStopBit" scoped="" ref="0xb5f37bb0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb5f37c90"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb5f37d70"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb5f37e50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb5f36010"/>
        <function-ref name="setStartByte" scoped="" ref="0xb5f360f0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb5f361d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0xb5f35598" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0xb5f35598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5f35770"/>
        <function-ref name="isInput" scoped="" ref="0xb5f35850"/>
        <function-ref name="setResistor" scoped="" ref="0xb5f35930"/>
        <function-ref name="toggle" scoped="" ref="0xb5f35a10"/>
        <function-ref name="isOutput" scoped="" ref="0xb5f35af0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5f35bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5f35cb0"/>
        <function-ref name="get" scoped="" ref="0xb5f35d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5f35e70"/>
        <function-ref name="getRaw" scoped="" ref="0xb5f34010"/>
        <function-ref name="set" scoped="" ref="0xb5f340f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5f341d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5f342b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5f34410"/>
        <function-ref name="clr" scoped="" ref="0xb5f344f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5f51418" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5f51418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5f515f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0xb5f36438" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0xb5f36438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5f36610"/>
        <function-ref name="isInput" scoped="" ref="0xb5f366f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb5f367d0"/>
        <function-ref name="toggle" scoped="" ref="0xb5f368b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5f36990"/>
        <function-ref name="getResistor" scoped="" ref="0xb5f36a70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5f36b50"/>
        <function-ref name="get" scoped="" ref="0xb5f36c30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5f36d10"/>
        <function-ref name="getRaw" scoped="" ref="0xb5f36df0"/>
        <function-ref name="set" scoped="" ref="0xb5f36ed0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5f35010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5f350f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5f35250"/>
        <function-ref name="clr" scoped="" ref="0xb5f35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5423898" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5423898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5423a70"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5423b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0xb5420c88" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5420c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5420e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb541cb50" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb541cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb541cd28"/>
        <function-ref name="configure" scoped="" ref="0xb541ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0xb541f010" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0xb541f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb541f1e8"/>
        <function-ref name="getStartByte" scoped="" ref="0xb541f2c8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb541f3a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb541f488"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb541f568"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb541f648"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb541f728"/>
        <function-ref name="getStopBit" scoped="" ref="0xb541f808"/>
        <function-ref name="setClockSource" scoped="" ref="0xb541f8e8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb541f9c8"/>
        <function-ref name="getData" scoped="" ref="0xb541faa8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb541fb88"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb541fc68"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb541fdc8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb541fea8"/>
        <function-ref name="getIV" scoped="" ref="0xb541e010"/>
        <function-ref name="enableI2C" scoped="" ref="0xb541e0f0"/>
        <function-ref name="setStartBit" scoped="" ref="0xb541e1d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb541e2b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb541e390"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb541e470"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb541e550"/>
        <function-ref name="isI2C" scoped="" ref="0xb541e630"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb541e710"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb541e7f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb541e9d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb541eab0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb541eb90"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb541ec70"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb541ed50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb541ee30"/>
        <function-ref name="disableI2C" scoped="" ref="0xb541ef10"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb541d010"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb541d0f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb541d1d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb541d2b0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb541d390"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb541d470"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb541d550"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb541d630"/>
        <function-ref name="getStartBit" scoped="" ref="0xb541d710"/>
        <function-ref name="setWordMode" scoped="" ref="0xb541d7f0"/>
        <function-ref name="setData" scoped="" ref="0xb541d8d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb541d9b0"/>
        <function-ref name="getClockSource" scoped="" ref="0xb541da90"/>
        <function-ref name="getWordMode" scoped="" ref="0xb541db70"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb541dc50"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb541dd30"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb541de10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb541c210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb541c2f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb541c3d0"/>
        <function-ref name="setStopBit" scoped="" ref="0xb541c4b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb541c590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb541c670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb541c750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb541c830"/>
        <function-ref name="setStartByte" scoped="" ref="0xb541c910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb541c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb5420870" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5420870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5420a48"/>
        <function-ref name="txDone" scoped="" ref="0xb5420b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb54231e0" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb54231e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb54233b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5423498"/>
        <function-ref name="request" scoped="" ref="0xb5423578"/>
        <function-ref name="granted" scoped="" ref="0xb5423658"/>
        <function-ref name="isOwner" scoped="" ref="0xb5423738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb5422170" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5422170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5422348"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5422428"/>
        <function-ref name="setUctl" scoped="" ref="0xb5422508"/>
        <function-ref name="enableUart" scoped="" ref="0xb54225e8"/>
        <function-ref name="setUrctl" scoped="" ref="0xb54226c8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb54227a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5422888"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5422968"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5422a48"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5422b28"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5422c08"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5422ce8"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5422dc8"/>
        <function-ref name="getUbr" scoped="" ref="0xb5422f28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5421018"/>
        <function-ref name="setUmctl" scoped="" ref="0xb54210f8"/>
        <function-ref name="isUartRx" scoped="" ref="0xb54211d8"/>
        <function-ref name="isUart" scoped="" ref="0xb54212b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5421398"/>
        <function-ref name="isSpi" scoped="" ref="0xb5421478"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5421558"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5421638"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5421718"/>
        <function-ref name="enableIntr" scoped="" ref="0xb54217f8"/>
        <function-ref name="getMode" scoped="" ref="0xb54218d8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5421ab8"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5421b98"/>
        <function-ref name="setUbr" scoped="" ref="0xb5421c78"/>
        <function-ref name="tx" scoped="" ref="0xb5421d58"/>
        <function-ref name="getUctl" scoped="" ref="0xb5421e38"/>
        <function-ref name="disableUart" scoped="" ref="0xb5421f18"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5420010"/>
        <function-ref name="setModeUart" scoped="" ref="0xb54200f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb54201d0"/>
        <function-ref name="rx" scoped="" ref="0xb54202b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5420390"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5420470"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5420550"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5420630"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5420710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5423cb0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5423cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5423e88"/>
        <function-ref name="userId" scoped="" ref="0xb5422010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5ed85e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5ed85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5ed87b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5ed8898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5ed6238" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5ed6238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5ed6410"/>
        <function-ref name="configure" scoped="" ref="0xb5ed64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5edcb60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5edcb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5edcd38"/>
        <function-ref name="txDone" scoped="" ref="0xb5edce18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5ed9b38" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5ed9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ed9d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5ed9df0"/>
        <function-ref name="request" scoped="" ref="0xb5ed9ed0"/>
        <function-ref name="granted" scoped="" ref="0xb5ed8010"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ed80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5ed94c8" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ed94c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5ed96a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5ed8a68" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ed8a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5ed8c40"/>
        <function-ref name="userId" scoped="" ref="0xb5ed8d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5ed4ae8" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ed4ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5ed4cc0"/>
        <function-ref name="userId" scoped="" ref="0xb5ed4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5ed5af8" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5ed5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5ed5ce0"/>
        <function-ref name="txDone" scoped="" ref="0xb5ed5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0xb5ed47b0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0xb5ed47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5ed4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5ed4010" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ed4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5ed41f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0xb5ed4378" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0xb5ed4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5ed4550"/>
        <function-ref name="txDone" scoped="" ref="0xb5ed4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5ec9a48" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5ec9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5ec9c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5ec9d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5ec79c0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5ec79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5ec7ba8"/>
        <function-ref name="configure" scoped="" ref="0xb5ec7c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5ec9e50" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5ec9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ec7050"/>
        <function-ref name="requested" scoped="" ref="0xb5ec7130"/>
        <function-ref name="granted" scoped="" ref="0xb5ec7210"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ec72f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5ec73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5ec9308" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5ec9308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ec94f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5ec95d0"/>
        <function-ref name="request" scoped="" ref="0xb5ec96b0"/>
        <function-ref name="granted" scoped="" ref="0xb5ec9790"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ec9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5ec7510" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5ec7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5ec76e8"/>
        <function-ref name="userId" scoped="" ref="0xb5ec77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb53d2120" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb53d2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb53d22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb53d2458" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb53d2458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb53d2630"/>
        <function-ref name="isEmpty" scoped="" ref="0xb53d2710"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb53d27f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb53d28d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb53d1cf8" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb53d1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb53d1ee0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb53d0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb53d0ca8" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb53d0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb53d0e90"/>
        <function-ref name="configure" scoped="" ref="0xb53cf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb53cf170" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb53cf170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb53cf348"/>
        <function-ref name="isEmpty" scoped="" ref="0xb53cf428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb53cf508"/>
        <function-ref name="dequeue" scoped="" ref="0xb53cf5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb53d0150" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb53d0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb53d0328"/>
        <function-ref name="requested" scoped="" ref="0xb53d0408"/>
        <function-ref name="granted" scoped="" ref="0xb53d04e8"/>
        <function-ref name="isOwner" scoped="" ref="0xb53d05c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb53d06a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb53cf728" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb53cf728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb53cf900"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb53cf9e0"/>
        <function-ref name="led1On" scoped="" ref="0xb53cfac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb53cfba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb53cfc80"/>
        <function-ref name="get" scoped="" ref="0xb53cfd60"/>
        <function-ref name="led1Off" scoped="" ref="0xb53cfe40"/>
        <function-ref name="led0On" scoped="" ref="0xb53cd1d8"/>
        <function-ref name="set" scoped="" ref="0xb53cd018"/>
        <function-ref name="led2On" scoped="" ref="0xb53cff20"/>
        <function-ref name="led2Off" scoped="" ref="0xb53cd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb53d15b8" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb53d15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb53d17a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb53d1880"/>
        <function-ref name="request" scoped="" ref="0xb53d1960"/>
        <function-ref name="granted" scoped="" ref="0xb53d1a40"/>
        <function-ref name="isOwner" scoped="" ref="0xb53d1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb53d07e8" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb53d07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb53d09c0"/>
        <function-ref name="userId" scoped="" ref="0xb53d0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb53cd358" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb53cd358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb53cd530"/>
        <function-ref name="runTask" scoped="" ref="0xb53cd610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0xb5ec3578" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0xb5ec3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb5ec3750"/>
        <function-ref name="getStartByte" scoped="" ref="0xb5ec3830"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb5ec3910"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb5ec39f0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb5ec3ad0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb5ec3bb0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb5ec3c90"/>
        <function-ref name="getStopBit" scoped="" ref="0xb5ec3d70"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5ec3e50"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb5ec0010"/>
        <function-ref name="getData" scoped="" ref="0xb5ec00f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb5ec01d0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb5ec02b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb5ec0410"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb5ec04f0"/>
        <function-ref name="getIV" scoped="" ref="0xb5ec05d0"/>
        <function-ref name="enableI2C" scoped="" ref="0xb5ec06b0"/>
        <function-ref name="setStartBit" scoped="" ref="0xb5ec0790"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb5ec0870"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb5ec0950"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb5ec0a30"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb5ec0b10"/>
        <function-ref name="isI2C" scoped="" ref="0xb5ec0bf0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb5ec0cd0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb5ec0db0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb5ebf010"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb5ebf0f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb5ebf1d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb5ebf2b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb5ebf390"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb5ebf470"/>
        <function-ref name="disableI2C" scoped="" ref="0xb5ebf550"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb5ebf630"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb5ebf710"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb5ebf7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb5ebf8d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb5ebf9b0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb5ebfa90"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb5ebfb70"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb5ebfc50"/>
        <function-ref name="getStartBit" scoped="" ref="0xb5ebfd30"/>
        <function-ref name="setWordMode" scoped="" ref="0xb5ebfe10"/>
        <function-ref name="setData" scoped="" ref="0xb5ebfef0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb5ebe010"/>
        <function-ref name="getClockSource" scoped="" ref="0xb5ebe0f0"/>
        <function-ref name="getWordMode" scoped="" ref="0xb5ebe1d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb5ebe2b0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb5ebe390"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb5ebe470"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb5ebe750"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb5ebe830"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb5ebe910"/>
        <function-ref name="setStopBit" scoped="" ref="0xb5ebe9f0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb5ebead0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb5ebebb0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb5ebec90"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb5ebed70"/>
        <function-ref name="setStartByte" scoped="" ref="0xb5ebee50"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb5ebd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0xb5eb76d8" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0xb5eb76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5eb78b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5eb7990"/>
        <function-ref name="setUctl" scoped="" ref="0xb5eb7a70"/>
        <function-ref name="enableUart" scoped="" ref="0xb5eb7b50"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5eb7c30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5eb7d10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5eb7df0"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5eb7ed0"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5eb6010"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5eb60f0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5eb61d0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5eb62b0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5eb6390"/>
        <function-ref name="getUbr" scoped="" ref="0xb5eb64f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5eb65d0"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5eb66b0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5eb6790"/>
        <function-ref name="isUart" scoped="" ref="0xb5eb6870"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5eb6950"/>
        <function-ref name="isSpi" scoped="" ref="0xb5eb6a30"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5eb6b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5eb6bf0"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5eb6cd0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5eb6db0"/>
        <function-ref name="getMode" scoped="" ref="0xb5eb6e90"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5eb5110"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5eb51f0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5eb52d0"/>
        <function-ref name="tx" scoped="" ref="0xb5eb53b0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5eb5490"/>
        <function-ref name="disableUart" scoped="" ref="0xb5eb5570"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5eb5650"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5eb5730"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5eb5810"/>
        <function-ref name="rx" scoped="" ref="0xb5eb58f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5eb59d0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5eb5ab0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5eb5b90"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5eb5c70"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5eb5d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0xb5eb3168" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0xb5eb3168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5eb3340"/>
        <function-ref name="isInput" scoped="" ref="0xb5eb3420"/>
        <function-ref name="setResistor" scoped="" ref="0xb5eb3500"/>
        <function-ref name="toggle" scoped="" ref="0xb5eb35e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5eb36c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5eb37a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5eb3880"/>
        <function-ref name="get" scoped="" ref="0xb5eb3960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5eb3a40"/>
        <function-ref name="getRaw" scoped="" ref="0xb5eb3b20"/>
        <function-ref name="set" scoped="" ref="0xb5eb3c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5eb3ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5eb3dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5eb3f20"/>
        <function-ref name="clr" scoped="" ref="0xb5eb2018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0xb5ebd9f8" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0xb5ebd9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb5ebdbd0"/>
        <function-ref name="getStartByte" scoped="" ref="0xb5ebdcb0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb5ebdd90"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb5ebde70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb5eba010"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb5eba0f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb5eba1d0"/>
        <function-ref name="getStopBit" scoped="" ref="0xb5eba2b0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5eba390"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb5eba470"/>
        <function-ref name="getData" scoped="" ref="0xb5eba550"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb5eba630"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb5eba710"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb5eba870"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb5eba950"/>
        <function-ref name="getIV" scoped="" ref="0xb5ebaa30"/>
        <function-ref name="enableI2C" scoped="" ref="0xb5ebab10"/>
        <function-ref name="setStartBit" scoped="" ref="0xb5ebabf0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb5ebacd0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb5ebadb0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb5ebae90"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb5eb9010"/>
        <function-ref name="isI2C" scoped="" ref="0xb5eb90f0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb5eb91d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb5eb92b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb5eb9490"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb5eb9570"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb5eb9650"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb5eb9730"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb5eb9810"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb5eb98f0"/>
        <function-ref name="disableI2C" scoped="" ref="0xb5eb99d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb5eb9ab0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb5eb9b90"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb5eb9c70"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb5eb9d50"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb5eb9e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb5eb9f10"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb5eb8010"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb5eb80f0"/>
        <function-ref name="getStartBit" scoped="" ref="0xb5eb81d0"/>
        <function-ref name="setWordMode" scoped="" ref="0xb5eb82b0"/>
        <function-ref name="setData" scoped="" ref="0xb5eb8390"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb5eb8470"/>
        <function-ref name="getClockSource" scoped="" ref="0xb5eb8550"/>
        <function-ref name="getWordMode" scoped="" ref="0xb5eb8630"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb5eb8710"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb5eb87f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb5eb88d0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb5eb8bb0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb5eb8c90"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb5eb8d70"/>
        <function-ref name="setStopBit" scoped="" ref="0xb5eb8e50"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb5eb7010"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb5eb70f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb5eb71d0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb5eb72b0"/>
        <function-ref name="setStartByte" scoped="" ref="0xb5eb7390"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb5eb7470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0xb5eb4010" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0xb5eb4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5eb41e8"/>
        <function-ref name="isInput" scoped="" ref="0xb5eb42c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb5eb43a8"/>
        <function-ref name="toggle" scoped="" ref="0xb5eb4488"/>
        <function-ref name="isOutput" scoped="" ref="0xb5eb4568"/>
        <function-ref name="getResistor" scoped="" ref="0xb5eb4648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5eb4728"/>
        <function-ref name="get" scoped="" ref="0xb5eb4808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5eb48e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb5eb49c8"/>
        <function-ref name="set" scoped="" ref="0xb5eb4aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5eb4b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5eb4c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5eb4dc8"/>
        <function-ref name="clr" scoped="" ref="0xb5eb4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5e22bd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5e22bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e22eb0"/>
        <function-ref name="write" scoped="" ref="0xb5e21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5e27190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5e27190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e27368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5e23270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e23270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e23448"/>
        <function-ref name="write" scoped="" ref="0xb5e23528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5e21a00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5e21a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e21bd8"/>
        <function-ref name="write" scoped="" ref="0xb5e21cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5e1c2b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5e1c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1c488"/>
        <function-ref name="write" scoped="" ref="0xb5e1c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5e21e38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5e21e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e20050"/>
        <function-ref name="write" scoped="" ref="0xb5e20130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5e16b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5e16b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e16cf8"/>
        <function-ref name="write" scoped="" ref="0xb5e16dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5e17a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5e17a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e17bd8"/>
        <function-ref name="write" scoped="" ref="0xb5e17cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5e27b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5e27b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e27d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5e1a190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5e1a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1a368"/>
        <function-ref name="write" scoped="" ref="0xb5e1a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5e17190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5e17190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e17368"/>
        <function-ref name="write" scoped="" ref="0xb5e17448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5e23ae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5e23ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e23cb8"/>
        <function-ref name="write" scoped="" ref="0xb5e23d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5e22368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5e22368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e22540"/>
        <function-ref name="write" scoped="" ref="0xb5e22620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5e1d5c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5e1d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1d7a0"/>
        <function-ref name="write" scoped="" ref="0xb5e1d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5e1e880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5e1e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1ea58"/>
        <function-ref name="write" scoped="" ref="0xb5e1eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5e202b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5e202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e20488"/>
        <function-ref name="write" scoped="" ref="0xb5e20568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5e28550" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5e28550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5e28728"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5e28808"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5e288e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5e26910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5e26910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e26ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5e26c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5e26c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e26ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5e1ac00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5e1ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1add8"/>
        <function-ref name="write" scoped="" ref="0xb5e1aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5e25080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5e25080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e25258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5e175c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5e175c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e177a0"/>
        <function-ref name="write" scoped="" ref="0xb5e17880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5e26260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e26260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e26438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5e1bcb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5e1bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1be90"/>
        <function-ref name="write" scoped="" ref="0xb5e1a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5e23f18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5e23f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e22108"/>
        <function-ref name="write" scoped="" ref="0xb5e221e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5e236a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e236a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e23880"/>
        <function-ref name="write" scoped="" ref="0xb5e23960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5e28dc0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5e28dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e27010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5e1b448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5e1b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1b620"/>
        <function-ref name="write" scoped="" ref="0xb5e1b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5e1c6e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5e1c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1c8c0"/>
        <function-ref name="write" scoped="" ref="0xb5e1c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5e1b880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5e1b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1ba58"/>
        <function-ref name="write" scoped="" ref="0xb5e1bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5e166e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5e166e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e168c0"/>
        <function-ref name="write" scoped="" ref="0xb5e169a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5e17e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5e17e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e16050"/>
        <function-ref name="write" scoped="" ref="0xb5e16130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5e1ecb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5e1ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1ee90"/>
        <function-ref name="write" scoped="" ref="0xb5e1d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5e1cb20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5e1cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1ccf8"/>
        <function-ref name="write" scoped="" ref="0xb5e1cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5e18cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5e18cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e18ed0"/>
        <function-ref name="write" scoped="" ref="0xb5e17010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5e20b20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5e20b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e20cf8"/>
        <function-ref name="write" scoped="" ref="0xb5e20dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5e15010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5e15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5e151e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5e152c8"/>
        <function-ref name="write" scoped="" ref="0xb5e153a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5e15488"/>
        <function-ref name="readDone" scoped="" ref="0xb5e15568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5e28a68" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5e28a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e28c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5e25de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5e25de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e23010"/>
        <function-ref name="write" scoped="" ref="0xb5e230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5e227a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5e227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e22978"/>
        <function-ref name="write" scoped="" ref="0xb5e22a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5e1da00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5e1da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1dbd8"/>
        <function-ref name="write" scoped="" ref="0xb5e1dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5e206e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5e206e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e208c0"/>
        <function-ref name="write" scoped="" ref="0xb5e209a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5e1de38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5e1de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1c050"/>
        <function-ref name="write" scoped="" ref="0xb5e1c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5e21190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5e21190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e21368"/>
        <function-ref name="write" scoped="" ref="0xb5e21448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5e274e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5e274e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e276c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5e215c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5e215c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e217a0"/>
        <function-ref name="write" scoped="" ref="0xb5e21880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5e29e88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5e29e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5e28070"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5e28150"/>
        <function-ref name="request" scoped="" ref="0xb5e28230"/>
        <function-ref name="granted" scoped="" ref="0xb5e28310"/>
        <function-ref name="isOwner" scoped="" ref="0xb5e283f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5e253d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5e253d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5e25a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5e25a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e25c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5e188c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5e188c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e18a98"/>
        <function-ref name="write" scoped="" ref="0xb5e18b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5e18488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5e18488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e18660"/>
        <function-ref name="write" scoped="" ref="0xb5e18740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5e265b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5e265b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e26790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5e18050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5e18050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e18228"/>
        <function-ref name="write" scoped="" ref="0xb5e18308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5e162b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5e162b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e16488"/>
        <function-ref name="write" scoped="" ref="0xb5e16568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5e1d190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5e1d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1d368"/>
        <function-ref name="write" scoped="" ref="0xb5e1d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5e1b010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5e1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1b1e8"/>
        <function-ref name="write" scoped="" ref="0xb5e1b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5e27840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5e27840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e27a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5e27ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5e27ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e260e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5e1e010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5e1e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1e1e8"/>
        <function-ref name="write" scoped="" ref="0xb5e1e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5e25730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5e25730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e25908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5e1e448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5e1e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1e620"/>
        <function-ref name="write" scoped="" ref="0xb5e1e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5e1a5c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5e1a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e1a9a0"/>
        <function-ref name="write" scoped="" ref="0xb5e1aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5e156e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5e156e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5e158c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5e159a0"/>
        <function-ref name="write" scoped="" ref="0xb5e15a80"/>
        <function-ref name="beginRead" scoped="" ref="0xb5e15b60"/>
        <function-ref name="readDone" scoped="" ref="0xb5e15c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5e0a880" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5e0a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0ab58"/>
        <function-ref name="write" scoped="" ref="0xb5e0ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5e10c28" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5e10c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e10e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5e0ce50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5e0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0b050"/>
        <function-ref name="write" scoped="" ref="0xb5e0b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5e086a8" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5e086a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e08880"/>
        <function-ref name="write" scoped="" ref="0xb5e08960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5e05e38" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5e05e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e03050"/>
        <function-ref name="write" scoped="" ref="0xb5e03130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5e08ae0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5e08ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e08cb8"/>
        <function-ref name="write" scoped="" ref="0xb5e08d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5dfd6e8" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5dfd6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dfd8c0"/>
        <function-ref name="write" scoped="" ref="0xb5dfd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5dff5c8" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5dff5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dff7a0"/>
        <function-ref name="write" scoped="" ref="0xb5dff880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5e0e6c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5e0e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5e02cb8" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5e02cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e02e90"/>
        <function-ref name="write" scoped="" ref="0xb5e01010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5e00cf8" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5e00cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e00ed0"/>
        <function-ref name="write" scoped="" ref="0xb5dff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5e0b6e8" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5e0b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0b8c0"/>
        <function-ref name="write" scoped="" ref="0xb5e0b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5e0a010" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5e0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0a1e8"/>
        <function-ref name="write" scoped="" ref="0xb5e0a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5e05190" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5e05190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e05368"/>
        <function-ref name="write" scoped="" ref="0xb5e05448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5e06468" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5e06468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e06640"/>
        <function-ref name="write" scoped="" ref="0xb5e06720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5e08f18" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5e08f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e07108"/>
        <function-ref name="write" scoped="" ref="0xb5e071e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5e10060" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5e10060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5e10238"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5e10318"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5e103f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5e0d4e8" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5e0d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5e0d840" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5e0d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0da98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5e017c8" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5e017c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e019a0"/>
        <function-ref name="write" scoped="" ref="0xb5e01a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5e0dc18" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5e0dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5dff190" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5dff190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dff368"/>
        <function-ref name="write" scoped="" ref="0xb5dff448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5e0ed70" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5e0ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5e02880" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5e02880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e02a58"/>
        <function-ref name="write" scoped="" ref="0xb5e02b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5e0bb20" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5e0bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0bcf8"/>
        <function-ref name="write" scoped="" ref="0xb5e0bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5e0b2b0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5e0b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0b488"/>
        <function-ref name="write" scoped="" ref="0xb5e0b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5e108d0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5e108d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e10aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5e02010" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5e02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e021e8"/>
        <function-ref name="write" scoped="" ref="0xb5e022c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5e032b0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5e032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e03488"/>
        <function-ref name="write" scoped="" ref="0xb5e03568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5e02448" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5e02448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e02620"/>
        <function-ref name="write" scoped="" ref="0xb5e02700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5dfd2b0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5dfd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dfd488"/>
        <function-ref name="write" scoped="" ref="0xb5dfd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5dffa00" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5dffa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dffbd8"/>
        <function-ref name="write" scoped="" ref="0xb5dffcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5e068a0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5e068a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e06a78"/>
        <function-ref name="write" scoped="" ref="0xb5e06b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5e036e8" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5e036e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e038c0"/>
        <function-ref name="write" scoped="" ref="0xb5e039a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5e008c0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5e008c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e00a98"/>
        <function-ref name="write" scoped="" ref="0xb5e00b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5e077a0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5e077a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e07978"/>
        <function-ref name="write" scoped="" ref="0xb5e07a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5dfdb20" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5dfdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5dfdcf8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5dfddd8"/>
        <function-ref name="write" scoped="" ref="0xb5dfdeb8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5dfc010"/>
        <function-ref name="readDone" scoped="" ref="0xb5dfc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5e10578" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5e10578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e10750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5e0ca18" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5e0ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0cbf0"/>
        <function-ref name="write" scoped="" ref="0xb5e0ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5e0a448" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5e0a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e0a620"/>
        <function-ref name="write" scoped="" ref="0xb5e0a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5e055c8" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5e055c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e057a0"/>
        <function-ref name="write" scoped="" ref="0xb5e05880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5e07368" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5e07368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e07540"/>
        <function-ref name="write" scoped="" ref="0xb5e07620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5e05a00" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5e05a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e05bd8"/>
        <function-ref name="write" scoped="" ref="0xb5e05cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5e0adb8" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5e0adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e08010"/>
        <function-ref name="write" scoped="" ref="0xb5e080f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5e0e010" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5e0e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5e08270" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5e08270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e08448"/>
        <function-ref name="write" scoped="" ref="0xb5e08528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5e11980" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5e11980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5e11b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5e11c38"/>
        <function-ref name="request" scoped="" ref="0xb5e11d18"/>
        <function-ref name="granted" scoped="" ref="0xb5e11df8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5e11ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5e0c010" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5e0c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5e0c6c0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5e0c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5e00488" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5e00488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e00660"/>
        <function-ref name="write" scoped="" ref="0xb5e00740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5e00050" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5e00050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e00228"/>
        <function-ref name="write" scoped="" ref="0xb5e00308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5e0d190" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5e0d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0d368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5e01c00" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5e01c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e01dd8"/>
        <function-ref name="write" scoped="" ref="0xb5e01eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5dffe38" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5dffe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dfd050"/>
        <function-ref name="write" scoped="" ref="0xb5dfd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5e06cd8" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5e06cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e06eb0"/>
        <function-ref name="write" scoped="" ref="0xb5e05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5e03b20" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5e03b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e03cf8"/>
        <function-ref name="write" scoped="" ref="0xb5e03dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5e0e368" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5e0e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0e540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5e0ea18" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5e0ea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5e07bd8" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5e07bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e07db0"/>
        <function-ref name="write" scoped="" ref="0xb5e07e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5e0c368" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5e0c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5e0c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5e06030" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5e06030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e06208"/>
        <function-ref name="write" scoped="" ref="0xb5e062e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5e01190" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5e01190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5e01568"/>
        <function-ref name="write" scoped="" ref="0xb5e01648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5dfc270" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5dfc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5dfc448"/>
        <function-ref name="writeDone" scoped="" ref="0xb5dfc528"/>
        <function-ref name="write" scoped="" ref="0xb5dfc608"/>
        <function-ref name="beginRead" scoped="" ref="0xb5dfc6e8"/>
        <function-ref name="readDone" scoped="" ref="0xb5dfc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb5df8720" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5df8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb5df88f8"/>
        <function-ref name="changed" scoped="" ref="0xb5df89d8"/>
        <function-ref name="amGroup" scoped="" ref="0xb5df8ab8"/>
        <function-ref name="setAddress" scoped="" ref="0xb5df8b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb5df7ae0" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5df7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb5df7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb5de61d8" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5de61d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb5de63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0xb5de6db8" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0xb5de6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5de5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0xb5ddfb08" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0xb5ddfb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddfce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0xb5dd60e0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0xb5dd60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd62b8"/>
        <function-ref name="write" scoped="" ref="0xb5dd6398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0xb5dd65e0" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0xb5dd65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5dd67b8"/>
        <function-ref name="stop" scoped="" ref="0xb5dd6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0xb5ddb888" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0xb5ddb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0xb5dce010" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0xb5dce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dce1e8"/>
        <function-ref name="write" scoped="" ref="0xb5dce2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0xb5dce4e8" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0xb5dce4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5dce6c0"/>
        <function-ref name="isInput" scoped="" ref="0xb5dce7a0"/>
        <function-ref name="toggle" scoped="" ref="0xb5dce880"/>
        <function-ref name="isOutput" scoped="" ref="0xb5dce960"/>
        <function-ref name="get" scoped="" ref="0xb5dcea40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5dceb20"/>
        <function-ref name="set" scoped="" ref="0xb5dcec00"/>
        <function-ref name="clr" scoped="" ref="0xb5dcece0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb5dc9010" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0xb5dc9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb5dc9760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0xb5dcd4e8" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0xb5dcd4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dcd6c0"/>
        <function-ref name="write" scoped="" ref="0xb5dcd7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0xb5dcd9c0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0xb5dcd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5dcdb98"/>
        <function-ref name="isInput" scoped="" ref="0xb5dcdc78"/>
        <function-ref name="toggle" scoped="" ref="0xb5dcdd58"/>
        <function-ref name="isOutput" scoped="" ref="0xb5dcde38"/>
        <function-ref name="get" scoped="" ref="0xb5dcdf18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5dca010"/>
        <function-ref name="set" scoped="" ref="0xb5dca0f0"/>
        <function-ref name="clr" scoped="" ref="0xb5dca1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb5db6d50" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0xb5db6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb5db54e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb5db3888" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0xb5db3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb5db2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5db2388" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5db2388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5db2ad8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5da9010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5db2d50"/>
        <function-ref name="overflow" scoped="" ref="0xb5da9288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0xb5da6160" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0xb5da6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5da68b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5da6da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5da6b28"/>
        <function-ref name="overflow" scoped="" ref="0xb5da5048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb5da2010" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5da2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5da21e8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5da22c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5da23a8"/>
        <function-ref name="get" scoped="" ref="0xb5da2488"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5da2568"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5da2648"/>
        <function-ref name="getMode" scoped="" ref="0xb5da2728"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5da2808"/>
        <function-ref name="overflow" scoped="" ref="0xb5da28e8"/>
        <function-ref name="setMode" scoped="" ref="0xb5da29c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb5da2aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb5da5eb8" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5da5eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695cf38"/>
            <typename><typedef-ref name="TMicro" ref="0xb695b130"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5da3628"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5da3b18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5da38a0"/>
        <function-ref name="overflow" scoped="" ref="0xb5da3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0xb5ddd640" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0xb5ddd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ddd818"/>
        <function-ref name="isInput" scoped="" ref="0xb5ddd8f8"/>
        <function-ref name="toggle" scoped="" ref="0xb5ddd9d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5dddab8"/>
        <function-ref name="get" scoped="" ref="0xb5dddb98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5dddc78"/>
        <function-ref name="set" scoped="" ref="0xb5dddd58"/>
        <function-ref name="clr" scoped="" ref="0xb5ddde38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb5da0350" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb5da0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5da0528"/>
        <function-ref name="isInput" scoped="" ref="0xb5da0608"/>
        <function-ref name="setResistor" scoped="" ref="0xb5da06e8"/>
        <function-ref name="toggle" scoped="" ref="0xb5da07c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5da08a8"/>
        <function-ref name="getResistor" scoped="" ref="0xb5da0988"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5da0a68"/>
        <function-ref name="get" scoped="" ref="0xb5da0b48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5da0c28"/>
        <function-ref name="getRaw" scoped="" ref="0xb5da0d08"/>
        <function-ref name="set" scoped="" ref="0xb5da0de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5da0ec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5d9f010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5d9f170"/>
        <function-ref name="clr" scoped="" ref="0xb5d9f250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb5da7940" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb5da7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5da7b18"/>
        <function-ref name="isInput" scoped="" ref="0xb5da7bf8"/>
        <function-ref name="toggle" scoped="" ref="0xb5da7cd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5da7db8"/>
        <function-ref name="get" scoped="" ref="0xb5da7e98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5da0010"/>
        <function-ref name="set" scoped="" ref="0xb5da00f0"/>
        <function-ref name="clr" scoped="" ref="0xb5da01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5ddc590" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5ddc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5ddc768"/>
        <function-ref name="stop" scoped="" ref="0xb5ddc848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb5d96808" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb5d96808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5d969e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5d96ac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5d96ba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5d96c80"/>
        <function-ref name="setCca" scoped="" ref="0xb5d96d60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5d96e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb5d958d8" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d958d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d95ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0xb5d960f0" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0xb5d960f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5d962c8"/>
        <function-ref name="cancel" scoped="" ref="0xb5d963a8"/>
        <function-ref name="modify" scoped="" ref="0xb5d96488"/>
        <function-ref name="sendDone" scoped="" ref="0xb5d96568"/>
        <function-ref name="resend" scoped="" ref="0xb5d96648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d99c00" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d99c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d99dd8"/>
        <function-ref name="stop" scoped="" ref="0xb5d99eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb5d95d40" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0xb5d95d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d95f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb5d8d2d0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb5d8d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5d8d4a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5d8d588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5d8d668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5d8d748"/>
        <function-ref name="setCca" scoped="" ref="0xb5d8d828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5d8d908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb5d88088" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5d88088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5d88b90"/>
        <function-ref name="clear" scoped="" ref="0xb5d87010"/>
        <function-ref name="isValid" scoped="" ref="0xb5d887d8"/>
        <function-ref name="set" scoped="" ref="0xb5d873c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb5d7bcd0" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5d7bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7bea8"/>
        <function-ref name="write" scoped="" ref="0xb5d7a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb5d7a220" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5d7a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7a3f8"/>
        <function-ref name="write" scoped="" ref="0xb5d7a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb5d8dbc8" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d8dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d8dda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0xb5d7c4c8" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5d7c4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d7c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0xb5d85710" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0xb5d85710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb5d858e8"/>
        <function-ref name="disable" scoped="" ref="0xb5d859c8"/>
        <function-ref name="captured" scoped="" ref="0xb5d85aa8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb5d85b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0xb5d8c680" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0xb5d8c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5d8bb30"/>
        <function-ref name="fired" scoped="" ref="0xb5d8b300"/>
        <function-ref name="startAt" scoped="" ref="0xb5d8b7f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb5d8b578"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5d8bda8"/>
        <function-ref name="start" scoped="" ref="0xb5d8cdd0"/>
        <function-ref name="stop" scoped="" ref="0xb5d8b088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5d890e0" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5d890e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5d892b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5d89398"/>
        <function-ref name="getRssi" scoped="" ref="0xb5d89478"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5d89558"/>
        <function-ref name="getPower" scoped="" ref="0xb5d89638"/>
        <function-ref name="getLqi" scoped="" ref="0xb5d89718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0xb5d7d258" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d7d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7d430"/>
        <function-ref name="write" scoped="" ref="0xb5d7d510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb5d7d760" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5d7d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7d938"/>
        <function-ref name="write" scoped="" ref="0xb5d7da18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0xb5d76978" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0xb5d76978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5d76b50"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb5d76c30"/>
        <function-ref name="sfd" scoped="" ref="0xb5d76d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5d8eb28" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5d8eb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5d8ed00"/>
        <function-ref name="cancel" scoped="" ref="0xb5d8ede0"/>
        <function-ref name="modify" scoped="" ref="0xb5d8eec0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5d8d010"/>
        <function-ref name="resend" scoped="" ref="0xb5d8d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0xb5d7e4a8" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d7e4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5d7e680"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5d7e760"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5d7e840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0xb5d7c8f8" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d7c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d7cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb5d84830" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb5d84830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d84a08"/>
        <function-ref name="isInput" scoped="" ref="0xb5d84ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d84bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d84ca8"/>
        <function-ref name="get" scoped="" ref="0xb5d84d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d84e68"/>
        <function-ref name="set" scoped="" ref="0xb5d80010"/>
        <function-ref name="clr" scoped="" ref="0xb5d800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5d8e290" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5d8e290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5d8e468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5d89920" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5d89920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5d89af8"/>
        <function-ref name="getHeader" scoped="" ref="0xb5d89bd8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5d89cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb5d85040" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5d85040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5d85218"/>
        <function-ref name="isSet" scoped="" ref="0xb5d852f8"/>
        <function-ref name="cancel" scoped="" ref="0xb5d853d8"/>
        <function-ref name="set" scoped="" ref="0xb5d854b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb5d7cd38" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d7cd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7b050"/>
        <function-ref name="write" scoped="" ref="0xb5d7b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb5d80d30" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb5d80d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d80f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5d7e010"/>
        <function-ref name="request" scoped="" ref="0xb5d7e0f0"/>
        <function-ref name="granted" scoped="" ref="0xb5d7e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d7e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0xb5d85d88" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0xb5d85d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d84010"/>
        <function-ref name="isInput" scoped="" ref="0xb5d840f0"/>
        <function-ref name="toggle" scoped="" ref="0xb5d841d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d842b0"/>
        <function-ref name="get" scoped="" ref="0xb5d84390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d84470"/>
        <function-ref name="set" scoped="" ref="0xb5d84550"/>
        <function-ref name="clr" scoped="" ref="0xb5d84630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb5d7a6e8" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5d7a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7a8c0"/>
        <function-ref name="write" scoped="" ref="0xb5d7a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0xb5d7abc8" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5d7abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7ada0"/>
        <function-ref name="write" scoped="" ref="0xb5d7ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb5d7dc48" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5d7dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d7de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0xb5d802f0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0xb5d802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d804c8"/>
        <function-ref name="isInput" scoped="" ref="0xb5d805a8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d80688"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d80768"/>
        <function-ref name="get" scoped="" ref="0xb5d80848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d80928"/>
        <function-ref name="set" scoped="" ref="0xb5d80a08"/>
        <function-ref name="clr" scoped="" ref="0xb5d80ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5d76ea0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5d76ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5d780c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5d781a0"/>
        <function-ref name="led1On" scoped="" ref="0xb5d78280"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5d78360"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5d78440"/>
        <function-ref name="get" scoped="" ref="0xb5d78520"/>
        <function-ref name="led1Off" scoped="" ref="0xb5d78600"/>
        <function-ref name="led2Off" scoped="" ref="0xb5d78980"/>
        <function-ref name="set" scoped="" ref="0xb5d786e0"/>
        <function-ref name="led0On" scoped="" ref="0xb5d787c0"/>
        <function-ref name="led2On" scoped="" ref="0xb5d788a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb5d7b7b0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5d7b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7b988"/>
        <function-ref name="write" scoped="" ref="0xb5d7ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d8e630" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d8e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d8e808"/>
        <function-ref name="stop" scoped="" ref="0xb5d8e8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0xb5d7ea68" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5d7ea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5d7ec40"/>
        <function-ref name="writeDone" scoped="" ref="0xb5d7ed20"/>
        <function-ref name="write" scoped="" ref="0xb5d7ee00"/>
        <function-ref name="beginRead" scoped="" ref="0xb5d7eee0"/>
        <function-ref name="readDone" scoped="" ref="0xb5d7d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0xb5d7c098" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5d7c098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d7c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0xb5d7b370" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5d7b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d7b548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb5d8c0b8" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0xb5d8c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d8c290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5d1dbd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5d1dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1deb0"/>
        <function-ref name="write" scoped="" ref="0xb5d1c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5d22190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5d22190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d22368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5d1e270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5d1e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1e448"/>
        <function-ref name="write" scoped="" ref="0xb5d1e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5d1ca00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5d1ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1cbd8"/>
        <function-ref name="write" scoped="" ref="0xb5d1ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5d172b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5d172b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d17488"/>
        <function-ref name="write" scoped="" ref="0xb5d17568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5d1ce38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5d1ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1b050"/>
        <function-ref name="write" scoped="" ref="0xb5d1b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5d11b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5d11b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d11cf8"/>
        <function-ref name="write" scoped="" ref="0xb5d11dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5d12a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5d12a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d12bd8"/>
        <function-ref name="write" scoped="" ref="0xb5d12cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5d22b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5d22b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d22d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5d15190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5d15190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d15368"/>
        <function-ref name="write" scoped="" ref="0xb5d15448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5d12190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d12190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d12368"/>
        <function-ref name="write" scoped="" ref="0xb5d12448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5d1eae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5d1eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1ecb8"/>
        <function-ref name="write" scoped="" ref="0xb5d1ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5d1d368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5d1d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1d540"/>
        <function-ref name="write" scoped="" ref="0xb5d1d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5d185c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5d185c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d187a0"/>
        <function-ref name="write" scoped="" ref="0xb5d18880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5d19880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5d19880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d19a58"/>
        <function-ref name="write" scoped="" ref="0xb5d19b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5d1b2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5d1b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1b488"/>
        <function-ref name="write" scoped="" ref="0xb5d1b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5d234f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d234f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5d236c8"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5d237a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5d23888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5d21910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d21910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d21ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5d21c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5d21c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d21ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5d15c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5d15c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d15dd8"/>
        <function-ref name="write" scoped="" ref="0xb5d15eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5d1f080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5d1f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5d125c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5d125c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d127a0"/>
        <function-ref name="write" scoped="" ref="0xb5d12880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5d21260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5d21260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d21438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5d16cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5d16cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d16e90"/>
        <function-ref name="write" scoped="" ref="0xb5d15010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5d1ef18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5d1ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1d108"/>
        <function-ref name="write" scoped="" ref="0xb5d1d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5d1e6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d1e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1e880"/>
        <function-ref name="write" scoped="" ref="0xb5d1e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5d23d60" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5d23d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d22010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5d16448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5d16448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d16620"/>
        <function-ref name="write" scoped="" ref="0xb5d16700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5d176e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5d176e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d178c0"/>
        <function-ref name="write" scoped="" ref="0xb5d179a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5d16880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5d16880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d16a58"/>
        <function-ref name="write" scoped="" ref="0xb5d16b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5d116e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5d116e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d118c0"/>
        <function-ref name="write" scoped="" ref="0xb5d119a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5d12e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5d12e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d11050"/>
        <function-ref name="write" scoped="" ref="0xb5d11130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5d19cb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5d19cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d19e90"/>
        <function-ref name="write" scoped="" ref="0xb5d18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5d17b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5d17b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d17cf8"/>
        <function-ref name="write" scoped="" ref="0xb5d17dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5d13cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5d13cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d13ed0"/>
        <function-ref name="write" scoped="" ref="0xb5d12010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5d1bb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5d1bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1bcf8"/>
        <function-ref name="write" scoped="" ref="0xb5d1bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5d10010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5d10010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5d101e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5d102c8"/>
        <function-ref name="write" scoped="" ref="0xb5d103a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5d10488"/>
        <function-ref name="readDone" scoped="" ref="0xb5d10568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5d23a08" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5d23a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d23be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5d1fde0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5d1fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1e010"/>
        <function-ref name="write" scoped="" ref="0xb5d1e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5d1d7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5d1d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1d978"/>
        <function-ref name="write" scoped="" ref="0xb5d1da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5d18a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5d18a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d18bd8"/>
        <function-ref name="write" scoped="" ref="0xb5d18cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5d1b6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5d1b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1b8c0"/>
        <function-ref name="write" scoped="" ref="0xb5d1b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5d18e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5d18e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d17050"/>
        <function-ref name="write" scoped="" ref="0xb5d17130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5d1c190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5d1c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1c368"/>
        <function-ref name="write" scoped="" ref="0xb5d1c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5d224e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5d224e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d226c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5d1c5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5d1c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1c7a0"/>
        <function-ref name="write" scoped="" ref="0xb5d1c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5d24d88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5d24d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d23010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5d230f0"/>
        <function-ref name="request" scoped="" ref="0xb5d231d0"/>
        <function-ref name="granted" scoped="" ref="0xb5d232b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d23390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5d1f3d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5d1f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5d1fa88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5d1fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5d138c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5d138c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d13a98"/>
        <function-ref name="write" scoped="" ref="0xb5d13b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5d13488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5d13488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d13660"/>
        <function-ref name="write" scoped="" ref="0xb5d13740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5d215b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5d215b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d21790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5d13050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5d13050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d13228"/>
        <function-ref name="write" scoped="" ref="0xb5d13308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5d112b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5d112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d11488"/>
        <function-ref name="write" scoped="" ref="0xb5d11568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5d18190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5d18190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d18368"/>
        <function-ref name="write" scoped="" ref="0xb5d18448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5d16010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5d16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d161e8"/>
        <function-ref name="write" scoped="" ref="0xb5d162c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5d22840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5d22840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d22a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5d22ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5d22ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d210e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5d19010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5d19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d191e8"/>
        <function-ref name="write" scoped="" ref="0xb5d192c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5d1f730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5d1f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5d19448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5d19448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d19620"/>
        <function-ref name="write" scoped="" ref="0xb5d19700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5d155c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5d155c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d159a0"/>
        <function-ref name="write" scoped="" ref="0xb5d15a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5d106e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5d106e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5d108c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5d109a0"/>
        <function-ref name="write" scoped="" ref="0xb5d10a80"/>
        <function-ref name="beginRead" scoped="" ref="0xb5d10b60"/>
        <function-ref name="readDone" scoped="" ref="0xb5d10c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb5d07620" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0xb5d07620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5d077f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb5d078d8"/>
        <function-ref name="sfd" scoped="" ref="0xb5d079b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5d07b60" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5d07b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5d07d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb5d06010" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0xb5d06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d061e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d07180" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d07180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d07358"/>
        <function-ref name="stop" scoped="" ref="0xb5d07438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0xb5d01cc8" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0xb5d01cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d01ea0"/>
        <function-ref name="isInput" scoped="" ref="0xb5d00010"/>
        <function-ref name="toggle" scoped="" ref="0xb5d000f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d001d0"/>
        <function-ref name="get" scoped="" ref="0xb5d002b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d00390"/>
        <function-ref name="set" scoped="" ref="0xb5d00470"/>
        <function-ref name="clr" scoped="" ref="0xb5d00550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb5cfc010" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb5cfc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb5cfc1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb5cfc2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb5cfc3a8"/>
        <function-ref name="syncDone" scoped="" ref="0xb5cfc488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb5cfc568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb5cfc648"/>
        <function-ref name="setChannel" scoped="" ref="0xb5cfc728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb5cfc808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb5cfc8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb5cfc9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb5cfcaa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb5cfcb88"/>
        <function-ref name="sync" scoped="" ref="0xb5cfcc68"/>
        <function-ref name="getChannel" scoped="" ref="0xb5cfcdc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb5cfcea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0xb5cef378" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0xb5cef378"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5cef550"/>
        <function-ref name="runTask" scoped="" ref="0xb5cef630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb5cfb2b0" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5cfb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5cfbdb8"/>
        <function-ref name="clear" scoped="" ref="0xb5cfa1a0"/>
        <function-ref name="isValid" scoped="" ref="0xb5cfba00"/>
        <function-ref name="set" scoped="" ref="0xb5cfa558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0xb5d00768" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0xb5d00768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d00940"/>
        <function-ref name="isInput" scoped="" ref="0xb5d00a20"/>
        <function-ref name="toggle" scoped="" ref="0xb5d00b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d00be0"/>
        <function-ref name="get" scoped="" ref="0xb5d00cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d00da0"/>
        <function-ref name="set" scoped="" ref="0xb5d00e80"/>
        <function-ref name="clr" scoped="" ref="0xb5cff010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb5cf8408" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5cf8408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cf85e0"/>
        <function-ref name="write" scoped="" ref="0xb5cf86c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb5cf88d0" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5cf88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cf8aa8"/>
        <function-ref name="write" scoped="" ref="0xb5cf8b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0xb5cf7318" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5cf7318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cf74f0"/>
        <function-ref name="write" scoped="" ref="0xb5cf75d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5cfd1f0" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5cfd1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5cfd3c8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5cfd4a8"/>
        <function-ref name="getRssi" scoped="" ref="0xb5cfd588"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5cfd668"/>
        <function-ref name="getPower" scoped="" ref="0xb5cfd748"/>
        <function-ref name="getLqi" scoped="" ref="0xb5cfd828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb5d02500" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0xb5d02500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5d026d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb5d027b8"/>
        <function-ref name="sfd" scoped="" ref="0xb5d02898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0xb5cfe8b0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5cfe8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cfea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb5d012c0" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb5d012c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d01498"/>
        <function-ref name="isInput" scoped="" ref="0xb5d01578"/>
        <function-ref name="toggle" scoped="" ref="0xb5d01658"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d01738"/>
        <function-ref name="get" scoped="" ref="0xb5d01818"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d018f8"/>
        <function-ref name="set" scoped="" ref="0xb5d019d8"/>
        <function-ref name="clr" scoped="" ref="0xb5d01ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0xb5cf7818" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5cf7818"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cf79f0"/>
        <function-ref name="write" scoped="" ref="0xb5cf7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5d06c98" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5d06c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5d06e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5cfda30" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cfda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5cfdc08"/>
        <function-ref name="getHeader" scoped="" ref="0xb5cfdce8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5cfddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5d02a40" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5d02a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5d02c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb5cff968" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb5cff968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5cffb40"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5cffc20"/>
        <function-ref name="request" scoped="" ref="0xb5cffd00"/>
        <function-ref name="granted" scoped="" ref="0xb5cffde0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5cffec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb5cf8d98" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5cf8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cf7010"/>
        <function-ref name="write" scoped="" ref="0xb5cf70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0xb5cfe128" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5cfe128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5cfe300"/>
        <function-ref name="writeDone" scoped="" ref="0xb5cfe3e0"/>
        <function-ref name="write" scoped="" ref="0xb5cfe4c0"/>
        <function-ref name="beginRead" scoped="" ref="0xb5cfe5a0"/>
        <function-ref name="readDone" scoped="" ref="0xb5cfe680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb5cf7d00" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5cf7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cf6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb5d02ed8" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0xb5d02ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d010c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5cf61a0" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5cf61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5cf6378"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5cf6458"/>
        <function-ref name="led1On" scoped="" ref="0xb5cf6538"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5cf6618"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5cf66f8"/>
        <function-ref name="get" scoped="" ref="0xb5cf67d8"/>
        <function-ref name="led1Off" scoped="" ref="0xb5cf68b8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5cf6c38"/>
        <function-ref name="set" scoped="" ref="0xb5cf6998"/>
        <function-ref name="led0On" scoped="" ref="0xb5cf6a78"/>
        <function-ref name="led2On" scoped="" ref="0xb5cf6b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb5cfae98" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5cfae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cf80c0"/>
        <function-ref name="write" scoped="" ref="0xb5cf81a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0xb5cfaa58" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5cfaa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cfac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0xb5cff2a8" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb5cff2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5cff480"/>
        <function-ref name="disable" scoped="" ref="0xb5cff560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb5cff640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb5cff720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0xb5cfece0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5cfece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cfd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d02060" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d02060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d02238"/>
        <function-ref name="stop" scoped="" ref="0xb5d02318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb5cb6208" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5cb6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb5cb63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb5cbadc8" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5cbadc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5cb7010"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5cb70f0"/>
        <function-ref name="getRssi" scoped="" ref="0xb5cb71d0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5cb72b0"/>
        <function-ref name="getPower" scoped="" ref="0xb5cb7390"/>
        <function-ref name="getLqi" scoped="" ref="0xb5cb7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb5cb6860" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cb6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5cb53c8"/>
        <function-ref name="clear" scoped="" ref="0xb5cb5780"/>
        <function-ref name="isValid" scoped="" ref="0xb5cb5010"/>
        <function-ref name="set" scoped="" ref="0xb5cb5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb5cb7c60" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cb7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5cb7e38"/>
        <function-ref name="getHeader" scoped="" ref="0xb5cb7f18"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5cb6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb5cb2a00" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5cb2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5cb2bd8"/>
        <function-ref name="isSet" scoped="" ref="0xb5cb2cb8"/>
        <function-ref name="cancel" scoped="" ref="0xb5cb2d98"/>
        <function-ref name="set" scoped="" ref="0xb5cb2e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb5cb3288" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5cb3288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5cb3d90"/>
        <function-ref name="clear" scoped="" ref="0xb5cb2178"/>
        <function-ref name="isValid" scoped="" ref="0xb5cb39d8"/>
        <function-ref name="set" scoped="" ref="0xb5cb2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5cb76e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5cb76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5cb78b8"/>
        <function-ref name="noAck" scoped="" ref="0xb5cb7998"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5cb7a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb5caebc0" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5caebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb5caed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb5cb17e0" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5cb17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5cb19b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5cb1a98"/>
        <function-ref name="getRssi" scoped="" ref="0xb5cb1b78"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5cb1c58"/>
        <function-ref name="getPower" scoped="" ref="0xb5cb1d38"/>
        <function-ref name="getLqi" scoped="" ref="0xb5cb1e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb5ca9a28" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5ca9a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5ca9c00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5ca9ce0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ca9dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ca9ea0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5ca7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb5cad260" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5cad260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5cadd68"/>
        <function-ref name="clear" scoped="" ref="0xb5cab158"/>
        <function-ref name="isValid" scoped="" ref="0xb5cad9b0"/>
        <function-ref name="set" scoped="" ref="0xb5cab510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb5cae630" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5cae630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5cae808"/>
        <function-ref name="getHeader" scoped="" ref="0xb5cae8e8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5cae9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb5ca9400" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5ca9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5ca95d8"/>
        <function-ref name="isSet" scoped="" ref="0xb5ca96b8"/>
        <function-ref name="cancel" scoped="" ref="0xb5ca9798"/>
        <function-ref name="set" scoped="" ref="0xb5ca9878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0xb5ca7350" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0xb5ca7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5ca7998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb5ca7da8" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb5ca7da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5ca6400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb5cabc50" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5cabc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5caa7a8"/>
        <function-ref name="clear" scoped="" ref="0xb5caab60"/>
        <function-ref name="isValid" scoped="" ref="0xb5caa3f0"/>
        <function-ref name="set" scoped="" ref="0xb5caaf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5cae0b0" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5cae0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5cae288"/>
        <function-ref name="noAck" scoped="" ref="0xb5cae368"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5cae448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb5cafb78" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0xb5cafb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c77200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5c77550" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5c77550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c77ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5c761a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5c77f18"/>
        <function-ref name="overflow" scoped="" ref="0xb5c76420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb5c758b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb5c758b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5c723a8"/>
        <function-ref name="fired" scoped="" ref="0xb5c74648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb5c74d50"/>
        <function-ref name="isOneShot" scoped="" ref="0xb5c74af8"/>
        <function-ref name="getdt" scoped="" ref="0xb5c72858"/>
        <function-ref name="gett0" scoped="" ref="0xb5c72600"/>
        <function-ref name="isRunning" scoped="" ref="0xb5c748a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb5c75ed8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb5c72088"/>
        <function-ref name="startOneShot" scoped="" ref="0xb5c74170"/>
        <function-ref name="stop" scoped="" ref="0xb5c743f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5c6a270" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5c6a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6a548"/>
        <function-ref name="write" scoped="" ref="0xb5c6a628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5c706e0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5c706e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c708b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5c6c810" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5c6c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6c9e8"/>
        <function-ref name="write" scoped="" ref="0xb5c6cac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5c69030" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5c69030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c69208"/>
        <function-ref name="write" scoped="" ref="0xb5c692e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5c65880" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5c65880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c65a58"/>
        <function-ref name="write" scoped="" ref="0xb5c65b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5c69468" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5c69468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c69640"/>
        <function-ref name="write" scoped="" ref="0xb5c69720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5c5e190" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5c5e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c5e368"/>
        <function-ref name="write" scoped="" ref="0xb5c5e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5c5f010" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5c5f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c5f1e8"/>
        <function-ref name="write" scoped="" ref="0xb5c5f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5c6f190" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5c6f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5c626e8" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5c626e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c628c0"/>
        <function-ref name="write" scoped="" ref="0xb5c629a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5c606e8" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5c606e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c608c0"/>
        <function-ref name="write" scoped="" ref="0xb5c609a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5c6b0b0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5c6b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6b288"/>
        <function-ref name="write" scoped="" ref="0xb5c6b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5c6b920" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5c6b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6baf8"/>
        <function-ref name="write" scoped="" ref="0xb5c6bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5c66b20" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5c66b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c66cf8"/>
        <function-ref name="write" scoped="" ref="0xb5c66dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5c67e38" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5c67e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c66050"/>
        <function-ref name="write" scoped="" ref="0xb5c66130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5c698a0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5c698a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c69a78"/>
        <function-ref name="write" scoped="" ref="0xb5c69b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5cb8af0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5cb8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5cb8cc8"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5cb8da8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5cb8e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5c6fef0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5c6fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5c6d260" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5c6d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5c61190" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5c61190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c61368"/>
        <function-ref name="write" scoped="" ref="0xb5c61448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5c6d638" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5c6d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5c60b20" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c60b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c60cf8"/>
        <function-ref name="write" scoped="" ref="0xb5c60dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5c6f840" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5c6f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5c622b0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5c622b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c62488"/>
        <function-ref name="write" scoped="" ref="0xb5c62568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5c6b4e8" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5c6b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6b6c0"/>
        <function-ref name="write" scoped="" ref="0xb5c6b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5c6cc48" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5c6cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6ce20"/>
        <function-ref name="write" scoped="" ref="0xb5c6cf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5c70388" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5c70388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c70560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5c64a00" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5c64a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c64bd8"/>
        <function-ref name="write" scoped="" ref="0xb5c64cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5c65cb8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5c65cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c65e90"/>
        <function-ref name="write" scoped="" ref="0xb5c64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5c64e38" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5c64e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c62050"/>
        <function-ref name="write" scoped="" ref="0xb5c62130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5c5fcb8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5c5fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c5fe90"/>
        <function-ref name="write" scoped="" ref="0xb5c5e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5c5f448" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5c5f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c5f620"/>
        <function-ref name="write" scoped="" ref="0xb5c5f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5c662b0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5c662b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c66488"/>
        <function-ref name="write" scoped="" ref="0xb5c66568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5c64190" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5c64190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c64368"/>
        <function-ref name="write" scoped="" ref="0xb5c64448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5c602b0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5c602b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c60488"/>
        <function-ref name="write" scoped="" ref="0xb5c60568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5c67190" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5c67190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c67368"/>
        <function-ref name="write" scoped="" ref="0xb5c67448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5c5e5c8" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5c5e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5c5e7a0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5c5e880"/>
        <function-ref name="write" scoped="" ref="0xb5c5e960"/>
        <function-ref name="beginRead" scoped="" ref="0xb5c5ea40"/>
        <function-ref name="readDone" scoped="" ref="0xb5c5eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5c70030" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5c70030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c70208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5c6c3d8" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5c6c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6c5b0"/>
        <function-ref name="write" scoped="" ref="0xb5c6c690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5c6bd58" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5c6bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6a010"/>
        <function-ref name="write" scoped="" ref="0xb5c6a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5c65010" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5c65010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c651e8"/>
        <function-ref name="write" scoped="" ref="0xb5c652c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5c69cd8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5c69cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c69eb0"/>
        <function-ref name="write" scoped="" ref="0xb5c67010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5c65448" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5c65448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c65620"/>
        <function-ref name="write" scoped="" ref="0xb5c65700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5c6a7a8" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5c6a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6a980"/>
        <function-ref name="write" scoped="" ref="0xb5c6aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5c70a38" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5c70a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c70c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5c6abe0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5c6abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c6adb8"/>
        <function-ref name="write" scoped="" ref="0xb5c6ae98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5cb8438" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5cb8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5cb8610"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5cb86f0"/>
        <function-ref name="request" scoped="" ref="0xb5cb87d0"/>
        <function-ref name="granted" scoped="" ref="0xb5cb88b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5cb8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5c6d990" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5c6d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6db68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5c6c080" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5c6c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6c258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5c61e38" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5c61e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c60050"/>
        <function-ref name="write" scoped="" ref="0xb5c60130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5c61a00" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5c61a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c61bd8"/>
        <function-ref name="write" scoped="" ref="0xb5c61cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5c6fb98" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c6fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5c615c8" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5c615c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c617a0"/>
        <function-ref name="write" scoped="" ref="0xb5c61880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5c5f880" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5c5f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c5fa58"/>
        <function-ref name="write" scoped="" ref="0xb5c5fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5c666e8" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5c666e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c668c0"/>
        <function-ref name="write" scoped="" ref="0xb5c669a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5c645c8" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5c645c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c647a0"/>
        <function-ref name="write" scoped="" ref="0xb5c64880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5c70d90" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5c70d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5c6f4e8" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5c6f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5c675c8" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5c675c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c677a0"/>
        <function-ref name="write" scoped="" ref="0xb5c67880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5c6dce8" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5c6dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c6dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5c67a00" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5c67a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c67bd8"/>
        <function-ref name="write" scoped="" ref="0xb5c67cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5c62b20" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5c62b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c62ef8"/>
        <function-ref name="write" scoped="" ref="0xb5c61010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5c5eca0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5c5eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5c5ee78"/>
        <function-ref name="writeDone" scoped="" ref="0xb5c5d010"/>
        <function-ref name="write" scoped="" ref="0xb5c5d0f0"/>
        <function-ref name="beginRead" scoped="" ref="0xb5c5d1d0"/>
        <function-ref name="readDone" scoped="" ref="0xb5c5d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb5c44c40" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb5c44c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb5c44e18"/>
        <function-ref name="rand32" scoped="" ref="0xb5c44ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb5c44380" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0xb5c44380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5c449a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5c47060" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5c47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5c47238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb5c426e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb5c426e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb5c428b8"/>
        <function-ref name="rand32" scoped="" ref="0xb5c42998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb5c46dd0" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0xb5c46dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5c42448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5c468b0" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5c468b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5c46a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5c49970" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5c49970"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5c49b48"/>
        <function-ref name="toIdle" scoped="" ref="0xb5c49c28"/>
        <function-ref name="isState" scoped="" ref="0xb5c49d08"/>
        <function-ref name="isIdle" scoped="" ref="0xb5c49de8"/>
        <function-ref name="requestState" scoped="" ref="0xb5c49ec8"/>
        <function-ref name="forceState" scoped="" ref="0xb5c48010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5c36010" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5c36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c361e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c362c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c363a8"/>
        <function-ref name="cancel" scoped="" ref="0xb5c36488"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c36568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5c3a7f0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5c3a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c3a9c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c3aaa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c3ab88"/>
        <function-ref name="cancel" scoped="" ref="0xb5c3ac68"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c3ad48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5c33960" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5c33960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c33b38"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c33c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c33cf8"/>
        <function-ref name="cancel" scoped="" ref="0xb5c33dd8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c33eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5c36e90" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5c36e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c33080"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c33160"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c33240"/>
        <function-ref name="cancel" scoped="" ref="0xb5c33320"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c33400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb5c32818" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb5c32818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb5c329f0"/>
        <function-ref name="rand32" scoped="" ref="0xb5c32ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5c33570" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5c33570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5c33748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5c32cb8" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c32cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5c32e90"/>
        <function-ref name="getHeader" scoped="" ref="0xb5c31010"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5c310f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0xb5c32060" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5c32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5c32238"/>
        <function-ref name="toIdle" scoped="" ref="0xb5c32318"/>
        <function-ref name="isState" scoped="" ref="0xb5c323f8"/>
        <function-ref name="isIdle" scoped="" ref="0xb5c324d8"/>
        <function-ref name="requestState" scoped="" ref="0xb5c325b8"/>
        <function-ref name="forceState" scoped="" ref="0xb5c32698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5c35f10" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5c35f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5c34108"/>
        <function-ref name="toIdle" scoped="" ref="0xb5c341e8"/>
        <function-ref name="isState" scoped="" ref="0xb5c342c8"/>
        <function-ref name="isIdle" scoped="" ref="0xb5c343a8"/>
        <function-ref name="requestState" scoped="" ref="0xb5c34488"/>
        <function-ref name="forceState" scoped="" ref="0xb5c34568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5c37e78" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5c37e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c24070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5c37628" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5c37628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c37800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb5c37a50" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0xb5c37a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c37c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5c216a8" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5c216a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c21880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5c21280" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5c21280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5c21458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5c24af8" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5c24af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c24cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5c21a68" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c21a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5c21c40"/>
        <function-ref name="getHeader" scoped="" ref="0xb5c21d20"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5c21e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb5c24f20" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0xb5c24f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c21110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5c07ea8" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5c07ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c060c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5c06298" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5c06298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c06470"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c06550"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c06630"/>
        <function-ref name="cancel" scoped="" ref="0xb5c06710"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5c08090" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5c08090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c08268"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c08348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c08428"/>
        <function-ref name="cancel" scoped="" ref="0xb5c08508"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c085e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb5c08b40" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0xb5c08b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c08d18"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c08df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c08ed8"/>
        <function-ref name="cancel" scoped="" ref="0xb5c07010"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5c08770" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5c08770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c08948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5c0a9a0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5c0a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5c0ab78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5c0ac58"/>
        <function-ref name="request" scoped="" ref="0xb5c0ad38"/>
        <function-ref name="granted" scoped="" ref="0xb5c0ae18"/>
        <function-ref name="isOwner" scoped="" ref="0xb5c0aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb5c07320" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0xb5c07320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c074f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb5c07700" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0xb5c07700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5c078d8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5c079b8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c07a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c07b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5c07c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5c004c8" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5c004c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c006a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c00780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c00860"/>
        <function-ref name="cancel" scoped="" ref="0xb5c00940"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c00a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5c00c30" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5c00c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c00e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0xb5be5cc8" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0xb5be5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5be5ea0"/>
        <function-ref name="runTask" scoped="" ref="0xb5be3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5bff010" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5bff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5bff1e8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5bff2c8"/>
        <function-ref name="getRssi" scoped="" ref="0xb5bff3a8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5bff488"/>
        <function-ref name="getPower" scoped="" ref="0xb5bff568"/>
        <function-ref name="getLqi" scoped="" ref="0xb5bff648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb5c01118" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0xb5c01118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c012f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c013d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c014b0"/>
        <function-ref name="cancel" scoped="" ref="0xb5c01590"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c01670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5bffde8" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb5bffde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5bfe010"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5bfe0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5bfe1d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb5bfe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5bff830" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5bff830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5bffa08"/>
        <function-ref name="getHeader" scoped="" ref="0xb5bffae8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5bffbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb5c02d28" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0xb5c02d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c02f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5c05e50" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5c05e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5c02050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5c02130"/>
        <function-ref name="request" scoped="" ref="0xb5c02210"/>
        <function-ref name="granted" scoped="" ref="0xb5c022f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5c023d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb5c025b8" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0xb5c025b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5c02790"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c02870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c02950"/>
        <function-ref name="cancel" scoped="" ref="0xb5c02a30"/>
        <function-ref name="sendDone" scoped="" ref="0xb5c02b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb5c018a0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0xb5c018a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5c01a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb5c01c80" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0xb5c01c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5c01e58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5c00010"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c000f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c001d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5c002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5bd25c8" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5bd25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5bd27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb5bd2900" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb5bd2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5bd2ad8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5bd2bb8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5bd2c98"/>
        <function-ref name="dequeue" scoped="" ref="0xb5bd2d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5bcb1d0" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5bcb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5bcb3a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb5bcb488"/>
        <function-ref name="start" scoped="" ref="0xb5bcb568"/>
        <function-ref name="stop" scoped="" ref="0xb5bcb648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5bca0a8" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5bca0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bca280"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bca360"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bca440"/>
        <function-ref name="cancel" scoped="" ref="0xb5bca520"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bca600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5bca810" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5bca810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bca9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5bcc040" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5bcc040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bcc218"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bcc2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bcc3d8"/>
        <function-ref name="cancel" scoped="" ref="0xb5bcc4b8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bcc598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb5bccae8" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb5bccae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb5bcccc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb5bccda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb5bcce80"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb5bcb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0xb5bcb840" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0xb5bcb840"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5bcba18"/>
        <function-ref name="toIdle" scoped="" ref="0xb5bcbaf8"/>
        <function-ref name="isState" scoped="" ref="0xb5bcbbd8"/>
        <function-ref name="isIdle" scoped="" ref="0xb5bcbcb8"/>
        <function-ref name="requestState" scoped="" ref="0xb5bcbd98"/>
        <function-ref name="forceState" scoped="" ref="0xb5bcbe78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb5bcac30" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0xb5bcac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5bcae08"/>
        <function-ref name="stopDone" scoped="" ref="0xb5bcaee8"/>
        <function-ref name="start" scoped="" ref="0xb5bc9010"/>
        <function-ref name="stop" scoped="" ref="0xb5bc90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5bcc720" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5bcc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bcc8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb5bc9888" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb5bc9888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb5bc9a60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb5bc9b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb5bc9c20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb5bc9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5bc88f0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5bc88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5bc8ac8"/>
        <function-ref name="toIdle" scoped="" ref="0xb5bc8ba8"/>
        <function-ref name="isState" scoped="" ref="0xb5bc8c88"/>
        <function-ref name="isIdle" scoped="" ref="0xb5bc8d68"/>
        <function-ref name="requestState" scoped="" ref="0xb5bc8e48"/>
        <function-ref name="forceState" scoped="" ref="0xb5bc8f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5bbf228" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5bbf228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bbf400"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bbf4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bbf5c0"/>
        <function-ref name="cancel" scoped="" ref="0xb5bbf6a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bbf780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5bcd320" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5bcd320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bcd4f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bcd5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bcd6b8"/>
        <function-ref name="cancel" scoped="" ref="0xb5bcd798"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bcd878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb5bcda20" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb5bcda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb5bcdbf8"/>
        <function-ref name="setRetries" scoped="" ref="0xb5bcdcd8"/>
        <function-ref name="getRetries" scoped="" ref="0xb5bcddb8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb5bcde98"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb5bbf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb5bbc6a0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5bbc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5bbc878"/>
        <function-ref name="noAck" scoped="" ref="0xb5bbc958"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5bbca38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb5bbfec0" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb5bbfec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb5bbc0c0"/>
        <function-ref name="setRetries" scoped="" ref="0xb5bbc1a0"/>
        <function-ref name="getRetries" scoped="" ref="0xb5bbc280"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb5bbc360"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb5bbc440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5badea0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5badea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bab0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5bad738" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5bad738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bad910"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bad9f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5badad0"/>
        <function-ref name="cancel" scoped="" ref="0xb5badbb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5badc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb5baa010" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb5baa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb5baa1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb5baa2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb5baa3a8"/>
        <function-ref name="syncDone" scoped="" ref="0xb5baa488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb5baa568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb5baa648"/>
        <function-ref name="setChannel" scoped="" ref="0xb5baa728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb5baa808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb5baa8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb5baa9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb5baaaa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb5baab88"/>
        <function-ref name="sync" scoped="" ref="0xb5baac68"/>
        <function-ref name="getChannel" scoped="" ref="0xb5baadc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb5baaea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb5baeea8" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb5baeea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5bad0c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5bad1a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5bad280"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5bad360"/>
        <function-ref name="setCca" scoped="" ref="0xb5bad440"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5bad520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb5bae830" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0xb5bae830"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb5baea08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb5ba9870" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0xb5ba9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5ba9a48"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5ba9b28"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5ba9c08"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5ba9ce8"/>
        <function-ref name="setCca" scoped="" ref="0xb5ba9dc8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5ba9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5bafdc0" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5bafdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5bae010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5bae0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bae1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bae2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5bae390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5bb3c80" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5bb3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bb3e58"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bb0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bb00f0"/>
        <function-ref name="cancel" scoped="" ref="0xb5bb01d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb5bb0db0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0xb5bb0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5baf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5bab280" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5bab280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5bab458"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5bab538"/>
        <function-ref name="getRssi" scoped="" ref="0xb5bab618"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5bab6f8"/>
        <function-ref name="getPower" scoped="" ref="0xb5bab7d8"/>
        <function-ref name="getLqi" scoped="" ref="0xb5bab8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb5ba9130" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5ba9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb5ba9388"/>
        <function-ref name="changed" scoped="" ref="0xb5ba9468"/>
        <function-ref name="amGroup" scoped="" ref="0xb5ba9548"/>
        <function-ref name="setAddress" scoped="" ref="0xb5ba9628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5babaa0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5babaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5babc78"/>
        <function-ref name="getHeader" scoped="" ref="0xb5babd58"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5babe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5bb0718" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5bb0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bb08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5ba87d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5ba87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5ba89a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5ba8a88"/>
        <function-ref name="led1On" scoped="" ref="0xb5ba8b68"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5ba8c48"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5ba8d28"/>
        <function-ref name="get" scoped="" ref="0xb5ba8e08"/>
        <function-ref name="led1Off" scoped="" ref="0xb5ba8ee8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5ba72b0"/>
        <function-ref name="set" scoped="" ref="0xb5ba7010"/>
        <function-ref name="led0On" scoped="" ref="0xb5ba70f0"/>
        <function-ref name="led2On" scoped="" ref="0xb5ba71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5baf1a8" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5baf1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5baf380"/>
        <function-ref name="source" scoped="" ref="0xb5baf460"/>
        <function-ref name="address" scoped="" ref="0xb5baf540"/>
        <function-ref name="destination" scoped="" ref="0xb5baf620"/>
        <function-ref name="setSource" scoped="" ref="0xb5baf700"/>
        <function-ref name="setDestination" scoped="" ref="0xb5baf7e0"/>
        <function-ref name="type" scoped="" ref="0xb5baf8c0"/>
        <function-ref name="setType" scoped="" ref="0xb5baf9a0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5bafa80"/>
        <function-ref name="setGroup" scoped="" ref="0xb5bafb60"/>
        <function-ref name="localGroup" scoped="" ref="0xb5bafc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0xb5ba8108" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0xb5ba8108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ba82e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5ba83c0"/>
        <function-ref name="request" scoped="" ref="0xb5ba84a0"/>
        <function-ref name="granted" scoped="" ref="0xb5ba8580"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ba8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5b59938" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5b59938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b59b10"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b59bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b59cd0"/>
        <function-ref name="cancel" scoped="" ref="0xb5b59db0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b59e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5b58010" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5b58010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5b581e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5b582c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b583a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b58488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5b58568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5b586a8" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5b586a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5b58880"/>
        <function-ref name="source" scoped="" ref="0xb5b58960"/>
        <function-ref name="address" scoped="" ref="0xb5b58a40"/>
        <function-ref name="destination" scoped="" ref="0xb5b58b20"/>
        <function-ref name="setSource" scoped="" ref="0xb5b58c00"/>
        <function-ref name="setDestination" scoped="" ref="0xb5b58ce0"/>
        <function-ref name="type" scoped="" ref="0xb5b58dc0"/>
        <function-ref name="setType" scoped="" ref="0xb5b58ea0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5b0b010"/>
        <function-ref name="setGroup" scoped="" ref="0xb5b0b0f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5b0b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5b0b330" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5b0b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5b0b508"/>
        <function-ref name="noAck" scoped="" ref="0xb5b0b5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5b0b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5312200" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5312200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb53123d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb53124b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5312598"/>
        <function-ref name="cancel" scoped="" ref="0xb5312678"/>
        <function-ref name="sendDone" scoped="" ref="0xb5312758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5312898" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5312898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5312a70"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5312b50"/>
        <function-ref name="getPayload" scoped="" ref="0xb5312c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5312d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5312df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5311010" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5311010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb53111e8"/>
        <function-ref name="source" scoped="" ref="0xb53112c8"/>
        <function-ref name="address" scoped="" ref="0xb53113a8"/>
        <function-ref name="destination" scoped="" ref="0xb5311488"/>
        <function-ref name="setSource" scoped="" ref="0xb5311568"/>
        <function-ref name="setDestination" scoped="" ref="0xb5311648"/>
        <function-ref name="type" scoped="" ref="0xb5311728"/>
        <function-ref name="setType" scoped="" ref="0xb5311808"/>
        <function-ref name="isForMe" scoped="" ref="0xb53118e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb53119c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb5311aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5311c08" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5311c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5311de0"/>
        <function-ref name="noAck" scoped="" ref="0xb5311ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5310010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb530ed88" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb530ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb530a010"/>
        <function-ref name="getPayload" scoped="" ref="0xb530a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb530a1d0"/>
        <function-ref name="cancel" scoped="" ref="0xb530a2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb530a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb530a500" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb530a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb530a6d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb530a7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb530a898"/>
        <function-ref name="cancel" scoped="" ref="0xb530a978"/>
        <function-ref name="sendDone" scoped="" ref="0xb530aa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb530ab98" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb530ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb530ad70"/>
        <function-ref name="source" scoped="" ref="0xb530ae50"/>
        <function-ref name="address" scoped="" ref="0xb5309010"/>
        <function-ref name="destination" scoped="" ref="0xb53090f0"/>
        <function-ref name="setSource" scoped="" ref="0xb53091d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb53092b0"/>
        <function-ref name="type" scoped="" ref="0xb5309390"/>
        <function-ref name="setType" scoped="" ref="0xb5309470"/>
        <function-ref name="isForMe" scoped="" ref="0xb5309550"/>
        <function-ref name="setGroup" scoped="" ref="0xb5309630"/>
        <function-ref name="localGroup" scoped="" ref="0xb5309710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5b43678" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5b43678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b43850"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b43930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b43a10"/>
        <function-ref name="cancel" scoped="" ref="0xb5b43af0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b43bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb5b150a8" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5b150a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b15290"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b15370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b15450"/>
        <function-ref name="cancel" scoped="" ref="0xb5b15530"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b15610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5b3d908" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5b3d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b3daf0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b3dbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b3dcb0"/>
        <function-ref name="cancel" scoped="" ref="0xb5b3dd90"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b3de70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb5b143f0" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5b143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5b145c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5b146a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b14788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b14868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5b14948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb5b14ac8" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0xb5b14ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5b14ca0"/>
        <function-ref name="runTask" scoped="" ref="0xb5b14d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb5b14f00" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0xb5b14f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5b130f0"/>
        <function-ref name="runTask" scoped="" ref="0xb5b131d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb5b15750" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5b15750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5b15928"/>
        <function-ref name="source" scoped="" ref="0xb5b15a08"/>
        <function-ref name="address" scoped="" ref="0xb5b15ae8"/>
        <function-ref name="destination" scoped="" ref="0xb5b15bc8"/>
        <function-ref name="setSource" scoped="" ref="0xb5b15ca8"/>
        <function-ref name="setDestination" scoped="" ref="0xb5b15d88"/>
        <function-ref name="type" scoped="" ref="0xb5b15e68"/>
        <function-ref name="setType" scoped="" ref="0xb5b14010"/>
        <function-ref name="isForMe" scoped="" ref="0xb5b140f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb5b141d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5b142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5b08070" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DemoAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5b08070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5b08248"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5b08328"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b08408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b084e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5b085c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5b09d30" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DemoAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5b09d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b09f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5b08708" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="DemoAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5b08708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5b088e0"/>
        <function-ref name="source" scoped="" ref="0xb5b089c0"/>
        <function-ref name="address" scoped="" ref="0xb5b08aa0"/>
        <function-ref name="destination" scoped="" ref="0xb5b08b80"/>
        <function-ref name="setSource" scoped="" ref="0xb5b08c60"/>
        <function-ref name="setDestination" scoped="" ref="0xb5b08d40"/>
        <function-ref name="type" scoped="" ref="0xb5b08e20"/>
        <function-ref name="setType" scoped="" ref="0xb5b08f00"/>
        <function-ref name="isForMe" scoped="" ref="0xb5b05010"/>
        <function-ref name="setGroup" scoped="" ref="0xb5b050f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5b051d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5b02010" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5b02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5b021e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb5b022c8"/>
        <function-ref name="start" scoped="" ref="0xb5b023a8"/>
        <function-ref name="stop" scoped="" ref="0xb5b02488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5b028e8" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5b028e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b02ac0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b02ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b02c80"/>
        <function-ref name="cancel" scoped="" ref="0xb5b02d60"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b02e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5b01620" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5b01620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5b017f8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5b018d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b019b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b01a98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5b01b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5b012c8" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5b012c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b014a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5afe010" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5afe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5afe1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5afe2c8"/>
        <function-ref name="led1On" scoped="" ref="0xb5afe3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5afe488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5afe568"/>
        <function-ref name="get" scoped="" ref="0xb5afe648"/>
        <function-ref name="led1Off" scoped="" ref="0xb5afe728"/>
        <function-ref name="led2Off" scoped="" ref="0xb5afeaa8"/>
        <function-ref name="set" scoped="" ref="0xb5afe808"/>
        <function-ref name="led0On" scoped="" ref="0xb5afe8e8"/>
        <function-ref name="led2On" scoped="" ref="0xb5afe9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb5affa10" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5affa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5affbe8"/>
        <function-ref name="noAck" scoped="" ref="0xb5affcc8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5affda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5b01d10" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5b01d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5b01ee8"/>
        <function-ref name="source" scoped="" ref="0xb5aff010"/>
        <function-ref name="address" scoped="" ref="0xb5aff0f0"/>
        <function-ref name="destination" scoped="" ref="0xb5aff1d0"/>
        <function-ref name="setSource" scoped="" ref="0xb5aff2b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb5aff390"/>
        <function-ref name="type" scoped="" ref="0xb5aff470"/>
        <function-ref name="setType" scoped="" ref="0xb5aff550"/>
        <function-ref name="isForMe" scoped="" ref="0xb5aff630"/>
        <function-ref name="setGroup" scoped="" ref="0xb5aff710"/>
        <function-ref name="localGroup" scoped="" ref="0xb5aff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5acaaf0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5acaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5acacc8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5acada8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5acae88"/>
        <function-ref name="cancel" scoped="" ref="0xb5ac9010"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ac90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5ac9250" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5ac9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ac9428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5afd830" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5afd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5afda18"/>
        <function-ref name="getPayload" scoped="" ref="0xb5afdaf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5afdbd8"/>
        <function-ref name="cancel" scoped="" ref="0xb5afdcb8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5afdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5afcf10" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5afcf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5aca108"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5aca1e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5aca2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5aca3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5aca488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5afc010" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5afc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5afc1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb5aca5c8" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5aca5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5aca7a0"/>
        <function-ref name="noAck" scoped="" ref="0xb5aca880"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5aca960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5afc338" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5afc338"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5afc510"/>
        <function-ref name="source" scoped="" ref="0xb5afc5f0"/>
        <function-ref name="address" scoped="" ref="0xb5afc6d0"/>
        <function-ref name="destination" scoped="" ref="0xb5afc7b0"/>
        <function-ref name="setSource" scoped="" ref="0xb5afc890"/>
        <function-ref name="setDestination" scoped="" ref="0xb5afc970"/>
        <function-ref name="type" scoped="" ref="0xb5afca50"/>
        <function-ref name="setType" scoped="" ref="0xb5afcb30"/>
        <function-ref name="isForMe" scoped="" ref="0xb5afcc10"/>
        <function-ref name="setGroup" scoped="" ref="0xb5afccf0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5afcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5ac89b0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5ac89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5ac8b88"/>
        <function-ref name="stopDone" scoped="" ref="0xb5ac8c68"/>
        <function-ref name="start" scoped="" ref="0xb5ac8d48"/>
        <function-ref name="stop" scoped="" ref="0xb5ac8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5ac5890" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5ac5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb697c510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ac5a68"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ac5b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ac5c28"/>
        <function-ref name="cancel" scoped="" ref="0xb5ac5d08"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ac5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5ac8618" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5ac8618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5ac87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5ac5288" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5ac5288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb697c510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ac5460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5ac2518" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5ac2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5ac26f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5ac27d0"/>
        <function-ref name="led1On" scoped="" ref="0xb5ac28b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5ac2990"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5ac2a70"/>
        <function-ref name="get" scoped="" ref="0xb5ac2b50"/>
        <function-ref name="led1Off" scoped="" ref="0xb5ac2c30"/>
        <function-ref name="led2Off" scoped="" ref="0xb5ac1010"/>
        <function-ref name="set" scoped="" ref="0xb5ac2d10"/>
        <function-ref name="led0On" scoped="" ref="0xb5ac2df0"/>
        <function-ref name="led2On" scoped="" ref="0xb5ac2ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb5ac2010" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb5ac2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb697c510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb5ac21e8"/>
        <function-ref name="offset" scoped="" ref="0xb5ac22c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb5ac23a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5ac1988" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5ac1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5ac1b60"/>
        <function-ref name="stopDone" scoped="" ref="0xb5ac1c40"/>
        <function-ref name="start" scoped="" ref="0xb5ac1d20"/>
        <function-ref name="stop" scoped="" ref="0xb5ac1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb5a813b0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0xb5a813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a81588"/>
        <function-ref name="runTask" scoped="" ref="0xb5a81668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb5abcb20" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0xb5abcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5abccf8"/>
        <function-ref name="stop" scoped="" ref="0xb5abcdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb5aa1250" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0xb5aa1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5aa1428"/>
        <function-ref name="runTask" scoped="" ref="0xb5aa1508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5ac15f0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5ac15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5ac17c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb5abbb30" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0xb5abbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb5abbd08"/>
        <function-ref name="flush" scoped="" ref="0xb5abbde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb5a84bf0" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0xb5a84bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a84dc8"/>
        <function-ref name="runTask" scoped="" ref="0xb5a84ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb5ab24f0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0xb5ab24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb5ab26c8"/>
        <function-ref name="resetSend" scoped="" ref="0xb5ab27a8"/>
        <function-ref name="dataReceived" scoped="" ref="0xb5ab2888"/>
        <function-ref name="resetReceive" scoped="" ref="0xb5ab2968"/>
        <function-ref name="putData" scoped="" ref="0xb5ab2a48"/>
        <function-ref name="putDone" scoped="" ref="0xb5ab2b28"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb5ab2c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5ab2d78" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5ab2d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5abc010"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5abc0f0"/>
        <function-ref name="led1On" scoped="" ref="0xb5abc1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5abc2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5abc390"/>
        <function-ref name="get" scoped="" ref="0xb5abc470"/>
        <function-ref name="led1Off" scoped="" ref="0xb5abc550"/>
        <function-ref name="led2Off" scoped="" ref="0xb5abc8d0"/>
        <function-ref name="set" scoped="" ref="0xb5abc630"/>
        <function-ref name="led0On" scoped="" ref="0xb5abc710"/>
        <function-ref name="led2On" scoped="" ref="0xb5abc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb5a7f040" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb5a7f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a7f218"/>
        <function-ref name="runTask" scoped="" ref="0xb5a7f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb5ab8098" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0xb5ab8098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb5ab8270"/>
        <function-ref name="nextByte" scoped="" ref="0xb5ab8350"/>
        <function-ref name="startSend" scoped="" ref="0xb5ab8430"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb5ab8510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb5ab62a8" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb5ab62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb5ab6480"/>
        <function-ref name="byteReceived" scoped="" ref="0xb5ab6560"/>
        <function-ref name="endPacket" scoped="" ref="0xb5ab6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb5a095f0" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0xb5a095f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a097c8"/>
        <function-ref name="runTask" scoped="" ref="0xb5a098a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5a0b1e8" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5a0b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb697c510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5a0b3d0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5a0b4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5a0b590"/>
        <function-ref name="cancel" scoped="" ref="0xb5a0b670"/>
        <function-ref name="sendDone" scoped="" ref="0xb5a0b750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb5a09a28" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0xb5a09a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a09c00"/>
        <function-ref name="runTask" scoped="" ref="0xb5a09ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5a46d78" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5a46d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb697c510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5a0b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb5a0b978" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0xb5a0b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb697c510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb5a0bb60"/>
        <function-ref name="offset" scoped="" ref="0xb5a0bc40"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb5a0bd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5a0a908" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5a0a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5a0aae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5a0abc0"/>
        <function-ref name="led1On" scoped="" ref="0xb5a0aca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5a0ad80"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5a0ae60"/>
        <function-ref name="get" scoped="" ref="0xb5a09010"/>
        <function-ref name="led1Off" scoped="" ref="0xb5a090f0"/>
        <function-ref name="led2On" scoped="" ref="0xb5a09470"/>
        <function-ref name="set" scoped="" ref="0xb5a092b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb5a091d0"/>
        <function-ref name="led0On" scoped="" ref="0xb5a09390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb5a0a350" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0xb5a0a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb5a0a528"/>
        <function-ref name="nextByte" scoped="" ref="0xb5a0a608"/>
        <function-ref name="startSend" scoped="" ref="0xb5a0a6e8"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb5a0a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb5a0be60" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb5a0be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb5a0a050"/>
        <function-ref name="byteReceived" scoped="" ref="0xb5a0a130"/>
        <function-ref name="endPacket" scoped="" ref="0xb5a0a210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb59fc200" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb59fc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59fc3d8"/>
        <function-ref name="receivedByte" scoped="" ref="0xb59fc4b8"/>
        <function-ref name="receive" scoped="" ref="0xb59fc598"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59fc678"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59fc758"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb59fc838"/>
        <function-ref name="sendDone" scoped="" ref="0xb59fc918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb5a08eb8" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0xb5a08eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb5a050c0"/>
        <function-ref name="resetSend" scoped="" ref="0xb5a051a0"/>
        <function-ref name="dataReceived" scoped="" ref="0xb5a05280"/>
        <function-ref name="resetReceive" scoped="" ref="0xb5a05360"/>
        <function-ref name="putData" scoped="" ref="0xb5a05440"/>
        <function-ref name="putDone" scoped="" ref="0xb5a05520"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb5a05600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb59fca88" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb59fca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb59fcc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb59fcd40"/>
        <function-ref name="led1On" scoped="" ref="0xb59fce20"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb59fcf00"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5a04010"/>
        <function-ref name="get" scoped="" ref="0xb5a040f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5a041d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb5a04550"/>
        <function-ref name="set" scoped="" ref="0xb5a042b0"/>
        <function-ref name="led0On" scoped="" ref="0xb5a04390"/>
        <function-ref name="led2On" scoped="" ref="0xb5a04470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb59ead28" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb59ead28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59eaf00"/>
        <function-ref name="receive" scoped="" ref="0xb59ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb5a07ec8" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb5a07ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59ee0c0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb59ee1a0"/>
        <function-ref name="receive" scoped="" ref="0xb59ee280"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59ee360"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59ee440"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb59ee520"/>
        <function-ref name="sendDone" scoped="" ref="0xb59ee600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5a07a48" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5a07a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5a07c20"/>
        <function-ref name="stop" scoped="" ref="0xb5a07d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5913890" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5913890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5913a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5913b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb59125d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb59125d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59127a8"/>
        <function-ref name="receive" scoped="" ref="0xb5912888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0xb59129e8" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59129e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5912bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb5913ca8" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb5913ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5913e80"/>
        <function-ref name="receivedByte" scoped="" ref="0xb5912010"/>
        <function-ref name="receive" scoped="" ref="0xb59120f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59121d0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59122b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb5912390"/>
        <function-ref name="sendDone" scoped="" ref="0xb5912470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb59131d8" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb59131d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb59133b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5913490"/>
        <function-ref name="request" scoped="" ref="0xb5913570"/>
        <function-ref name="granted" scoped="" ref="0xb5913650"/>
        <function-ref name="isOwner" scoped="" ref="0xb5913730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb59e3880" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb59e3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb59e3a58"/>
        <function-ref name="configure" scoped="" ref="0xb59e3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb59e2bc0" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb59e2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59e2d98"/>
        <function-ref name="receive" scoped="" ref="0xb59e2e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0xb59e0e40" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59e0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb59df050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb59e2010" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb59e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59e21e8"/>
        <function-ref name="receivedByte" scoped="" ref="0xb59e22c8"/>
        <function-ref name="receive" scoped="" ref="0xb59e23a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59e2488"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59e2568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb59e2648"/>
        <function-ref name="sendDone" scoped="" ref="0xb59e2728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb59e03e8" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb59e03e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb59e05c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb59e06a0"/>
        <function-ref name="request" scoped="" ref="0xb59e0780"/>
        <function-ref name="granted" scoped="" ref="0xb59e0860"/>
        <function-ref name="isOwner" scoped="" ref="0xb59e0940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb59e6e08" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb59e6e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb59e3010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb59e30f0"/>
        <function-ref name="request" scoped="" ref="0xb59e31d0"/>
        <function-ref name="granted" scoped="" ref="0xb59e32b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb59e3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb59df640" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb59df640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb59df818"/>
        <function-ref name="txDone" scoped="" ref="0xb59df8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb59ddd10" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb59ddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb59ddef8"/>
        <function-ref name="configure" scoped="" ref="0xb59a3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb59a3b28" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb59a3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59a3d10"/>
        <function-ref name="receive" scoped="" ref="0xb59a3df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0xb59a2790" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59a2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb59a2978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0xb59a2af8" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb59a2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb59a2cd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb59a2db0"/>
        <function-ref name="setUctl" scoped="" ref="0xb59a2e90"/>
        <function-ref name="enableUart" scoped="" ref="0xb59a1010"/>
        <function-ref name="setUrctl" scoped="" ref="0xb59a10f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb59a11d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb59a12b0"/>
        <function-ref name="getUtctl" scoped="" ref="0xb59a1390"/>
        <function-ref name="getUrctl" scoped="" ref="0xb59a1470"/>
        <function-ref name="resetUsart" scoped="" ref="0xb59a1550"/>
        <function-ref name="getUmctl" scoped="" ref="0xb59a1630"/>
        <function-ref name="disableIntr" scoped="" ref="0xb59a1710"/>
        <function-ref name="setUtctl" scoped="" ref="0xb59a17f0"/>
        <function-ref name="getUbr" scoped="" ref="0xb59a1950"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb59a1a30"/>
        <function-ref name="setUmctl" scoped="" ref="0xb59a1b10"/>
        <function-ref name="isUartRx" scoped="" ref="0xb59a1bf0"/>
        <function-ref name="isUart" scoped="" ref="0xb59a1cd0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb59a1db0"/>
        <function-ref name="isSpi" scoped="" ref="0xb59a1e90"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb59a0010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb59a00f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb59a01d0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb59a02b0"/>
        <function-ref name="getMode" scoped="" ref="0xb59a0390"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb59a0570"/>
        <function-ref name="clrIntr" scoped="" ref="0xb59a0650"/>
        <function-ref name="setUbr" scoped="" ref="0xb59a0730"/>
        <function-ref name="tx" scoped="" ref="0xb59a0810"/>
        <function-ref name="getUctl" scoped="" ref="0xb59a08f0"/>
        <function-ref name="disableUart" scoped="" ref="0xb59a09d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb59a0ab0"/>
        <function-ref name="setModeUart" scoped="" ref="0xb59a0b90"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb59a0c70"/>
        <function-ref name="rx" scoped="" ref="0xb59a0d50"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb59a0e30"/>
        <function-ref name="isUartTx" scoped="" ref="0xb59a0f10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb599f010"/>
        <function-ref name="disableSpi" scoped="" ref="0xb599f0f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb599f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb59a3208" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb59a3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59a33f0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb59a34d0"/>
        <function-ref name="receive" scoped="" ref="0xb59a35b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59a3690"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59a3770"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb59a3850"/>
        <function-ref name="sendDone" scoped="" ref="0xb59a3930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb599f930" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb599f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb599e0a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb599e598"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb599e320"/>
        <function-ref name="overflow" scoped="" ref="0xb599e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb59a2030" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb59a2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb59a2218"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb59a22f8"/>
        <function-ref name="request" scoped="" ref="0xb59a23d8"/>
        <function-ref name="granted" scoped="" ref="0xb59a24b8"/>
        <function-ref name="isOwner" scoped="" ref="0xb59a2598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb59dd5b0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb59dd5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb59dd798"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb59dd878"/>
        <function-ref name="request" scoped="" ref="0xb59dd958"/>
        <function-ref name="granted" scoped="" ref="0xb59dda38"/>
        <function-ref name="isOwner" scoped="" ref="0xb59ddb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb599f3e8" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb599f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb599f5d0"/>
        <function-ref name="txDone" scoped="" ref="0xb599f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb599ea40" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb599ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb599ec18"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb599ecf8"/>
        <function-ref name="led1On" scoped="" ref="0xb599edd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb599eeb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb599d010"/>
        <function-ref name="get" scoped="" ref="0xb599d0f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb599d1d0"/>
        <function-ref name="led2On" scoped="" ref="0xb599d550"/>
        <function-ref name="set" scoped="" ref="0xb599d390"/>
        <function-ref name="led2Off" scoped="" ref="0xb599d2b0"/>
        <function-ref name="led0On" scoped="" ref="0xb599d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb5994348" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5994348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5994520"/>
        <function-ref name="txDone" scoped="" ref="0xb5994600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb5999590" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb5999590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5999768"/>
        <function-ref name="stop" scoped="" ref="0xb5999848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb5999a38" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5999a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5999c10"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5999cf0"/>
        <function-ref name="setUctl" scoped="" ref="0xb5999dd0"/>
        <function-ref name="enableUart" scoped="" ref="0xb5999eb0"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5996010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb59960f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb59961d0"/>
        <function-ref name="getUtctl" scoped="" ref="0xb59962b0"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5996390"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5996470"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5996550"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5996630"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5996710"/>
        <function-ref name="getUbr" scoped="" ref="0xb5996870"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5996950"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5996a30"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5996b10"/>
        <function-ref name="isUart" scoped="" ref="0xb5996bf0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5996cd0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5996db0"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5996e90"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5995010"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb59950f0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb59951d0"/>
        <function-ref name="getMode" scoped="" ref="0xb59952b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5995490"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5995570"/>
        <function-ref name="setUbr" scoped="" ref="0xb5995650"/>
        <function-ref name="tx" scoped="" ref="0xb5995730"/>
        <function-ref name="getUctl" scoped="" ref="0xb5995810"/>
        <function-ref name="disableUart" scoped="" ref="0xb59958f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb59959d0"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5995ab0"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5995b90"/>
        <function-ref name="rx" scoped="" ref="0xb5995c70"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5995d50"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5995e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5995f10"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5994010"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb59940f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0xb598c678" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0xb598c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb598c850"/>
        <function-ref name="isInput" scoped="" ref="0xb598c930"/>
        <function-ref name="setResistor" scoped="" ref="0xb598ca10"/>
        <function-ref name="toggle" scoped="" ref="0xb598caf0"/>
        <function-ref name="isOutput" scoped="" ref="0xb598cbd0"/>
        <function-ref name="getResistor" scoped="" ref="0xb598ccb0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb598cd90"/>
        <function-ref name="get" scoped="" ref="0xb598ce70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb598b010"/>
        <function-ref name="getRaw" scoped="" ref="0xb598b0f0"/>
        <function-ref name="set" scoped="" ref="0xb598b1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb598b2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb598b390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb598b4f0"/>
        <function-ref name="clr" scoped="" ref="0xb598b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb598fd70" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb598fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb598e010"/>
        <function-ref name="txDone" scoped="" ref="0xb598e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0xb598b838" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0xb598b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb598ba10"/>
        <function-ref name="isInput" scoped="" ref="0xb598baf0"/>
        <function-ref name="setResistor" scoped="" ref="0xb598bbd0"/>
        <function-ref name="toggle" scoped="" ref="0xb598bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb598bd90"/>
        <function-ref name="getResistor" scoped="" ref="0xb598be70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb598a010"/>
        <function-ref name="get" scoped="" ref="0xb598a0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb598a1d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb598a2b0"/>
        <function-ref name="set" scoped="" ref="0xb598a390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb598a470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb598a550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb598a6b0"/>
        <function-ref name="clr" scoped="" ref="0xb598a790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0xb598a9f8" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0xb598a9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb598abd0"/>
        <function-ref name="isInput" scoped="" ref="0xb598acb0"/>
        <function-ref name="setResistor" scoped="" ref="0xb598ad90"/>
        <function-ref name="toggle" scoped="" ref="0xb598ae70"/>
        <function-ref name="isOutput" scoped="" ref="0xb5989010"/>
        <function-ref name="getResistor" scoped="" ref="0xb59890f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb59891d0"/>
        <function-ref name="get" scoped="" ref="0xb59892b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5989390"/>
        <function-ref name="getRaw" scoped="" ref="0xb5989470"/>
        <function-ref name="set" scoped="" ref="0xb5989550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5989630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5989710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5989870"/>
        <function-ref name="clr" scoped="" ref="0xb5989950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0xb5991438" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5991438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5991610"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb59916f0"/>
        <function-ref name="setUctl" scoped="" ref="0xb59917d0"/>
        <function-ref name="enableUart" scoped="" ref="0xb59918b0"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5991990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5991a70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5991b50"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5991c30"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5991d10"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5991df0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5991ed0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5990010"/>
        <function-ref name="setUtctl" scoped="" ref="0xb59900f0"/>
        <function-ref name="getUbr" scoped="" ref="0xb5990250"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5990330"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5990410"/>
        <function-ref name="isUartRx" scoped="" ref="0xb59904f0"/>
        <function-ref name="isUart" scoped="" ref="0xb59905d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb59906b0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5990790"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5990870"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5990950"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5990a30"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5990b10"/>
        <function-ref name="getMode" scoped="" ref="0xb5990bf0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5990dd0"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5990eb0"/>
        <function-ref name="setUbr" scoped="" ref="0xb598f010"/>
        <function-ref name="tx" scoped="" ref="0xb598f0f0"/>
        <function-ref name="getUctl" scoped="" ref="0xb598f1d0"/>
        <function-ref name="disableUart" scoped="" ref="0xb598f2b0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb598f390"/>
        <function-ref name="setModeUart" scoped="" ref="0xb598f470"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb598f550"/>
        <function-ref name="rx" scoped="" ref="0xb598f630"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb598f710"/>
        <function-ref name="isUartTx" scoped="" ref="0xb598f7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb598f8d0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb598f9b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb598fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb5994f28" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb5994f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5991110"/>
        <function-ref name="stop" scoped="" ref="0xb59911f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0xb598d4b8" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0xb598d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb598d690"/>
        <function-ref name="isInput" scoped="" ref="0xb598d770"/>
        <function-ref name="setResistor" scoped="" ref="0xb598d850"/>
        <function-ref name="toggle" scoped="" ref="0xb598d930"/>
        <function-ref name="isOutput" scoped="" ref="0xb598da10"/>
        <function-ref name="getResistor" scoped="" ref="0xb598daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb598dbd0"/>
        <function-ref name="get" scoped="" ref="0xb598dcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb598dd90"/>
        <function-ref name="getRaw" scoped="" ref="0xb598de70"/>
        <function-ref name="set" scoped="" ref="0xb598c010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb598c0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb598c1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb598c330"/>
        <function-ref name="clr" scoped="" ref="0xb598c410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0xb598e358" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0xb598e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb598e530"/>
        <function-ref name="isInput" scoped="" ref="0xb598e610"/>
        <function-ref name="setResistor" scoped="" ref="0xb598e6f0"/>
        <function-ref name="toggle" scoped="" ref="0xb598e7d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb598e8b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb598e990"/>
        <function-ref name="makeOutput" scoped="" ref="0xb598ea70"/>
        <function-ref name="get" scoped="" ref="0xb598eb50"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb598ec30"/>
        <function-ref name="getRaw" scoped="" ref="0xb598ed10"/>
        <function-ref name="set" scoped="" ref="0xb598edf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb598eed0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb598d010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb598d170"/>
        <function-ref name="clr" scoped="" ref="0xb598d250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb5941010" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5941010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c6e0"/>
            <typename><typedef-ref name="T32khz" ref="0xb695ccc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5941760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5941c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb59419d8"/>
        <function-ref name="overflow" scoped="" ref="0xb5941ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb52a0ea8" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb52a0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb529f0c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb529f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb529c300" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb529c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb529c4d8"/>
        <function-ref name="configure" scoped="" ref="0xb529c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb529deb0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb529deb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb529c0c0"/>
        <function-ref name="txDone" scoped="" ref="0xb529c1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb52a07f0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb52a07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb52a09c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb52a0aa8"/>
        <function-ref name="request" scoped="" ref="0xb52a0b88"/>
        <function-ref name="granted" scoped="" ref="0xb52a0c68"/>
        <function-ref name="isOwner" scoped="" ref="0xb52a0d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb529f718" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb529f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb529f8f0"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb529f9d0"/>
        <function-ref name="setUctl" scoped="" ref="0xb529fab0"/>
        <function-ref name="enableUart" scoped="" ref="0xb529fb90"/>
        <function-ref name="setUrctl" scoped="" ref="0xb529fc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb529fd50"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb529fe30"/>
        <function-ref name="getUtctl" scoped="" ref="0xb529ff10"/>
        <function-ref name="getUrctl" scoped="" ref="0xb529e010"/>
        <function-ref name="resetUsart" scoped="" ref="0xb529e0f0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb529e1d0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb529e2b0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb529e390"/>
        <function-ref name="getUbr" scoped="" ref="0xb529e4f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb529e5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0xb529e6b0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb529e790"/>
        <function-ref name="isUart" scoped="" ref="0xb529e870"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb529e950"/>
        <function-ref name="isSpi" scoped="" ref="0xb529ea30"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb529eb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb529ebf0"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb529ecd0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb529edb0"/>
        <function-ref name="getMode" scoped="" ref="0xb529ee90"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb529d110"/>
        <function-ref name="clrIntr" scoped="" ref="0xb529d1f0"/>
        <function-ref name="setUbr" scoped="" ref="0xb529d2d0"/>
        <function-ref name="tx" scoped="" ref="0xb529d3b0"/>
        <function-ref name="getUctl" scoped="" ref="0xb529d490"/>
        <function-ref name="disableUart" scoped="" ref="0xb529d570"/>
        <function-ref name="enableSpi" scoped="" ref="0xb529d650"/>
        <function-ref name="setModeUart" scoped="" ref="0xb529d730"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb529d810"/>
        <function-ref name="rx" scoped="" ref="0xb529d8f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb529d9d0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb529dab0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb529db90"/>
        <function-ref name="disableSpi" scoped="" ref="0xb529dc70"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb529dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb529f300" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb529f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb529f4d8"/>
        <function-ref name="userId" scoped="" ref="0xb529f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5933500" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5933500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb59336d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb59337b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5931158" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5931158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5931330"/>
        <function-ref name="configure" scoped="" ref="0xb5931410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb59342a8" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb59342a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5934480"/>
        <function-ref name="txDone" scoped="" ref="0xb5934560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb59349f8" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb59349f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5934bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5934cb0"/>
        <function-ref name="request" scoped="" ref="0xb5934d90"/>
        <function-ref name="granted" scoped="" ref="0xb5934e70"/>
        <function-ref name="isOwner" scoped="" ref="0xb5933010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5933988" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5933988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5933b60"/>
        <function-ref name="userId" scoped="" ref="0xb5933c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5930de0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5930de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb592f010"/>
        <function-ref name="userId" scoped="" ref="0xb592f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5931dc8" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5931dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5930010"/>
        <function-ref name="txDone" scoped="" ref="0xb59300f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0xb5930aa8" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0xb5930aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5930c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5930308" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5930308"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb59304f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0xb5930670" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0xb5930670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5930848"/>
        <function-ref name="txDone" scoped="" ref="0xb5930928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb592ee98" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb592ee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb592d0c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb592d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb592de28" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb592de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb592c050"/>
        <function-ref name="configure" scoped="" ref="0xb592c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb592d2e0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb592d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb592d4b8"/>
        <function-ref name="requested" scoped="" ref="0xb592d598"/>
        <function-ref name="granted" scoped="" ref="0xb592d678"/>
        <function-ref name="isOwner" scoped="" ref="0xb592d758"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb592d838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb592e758" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb592e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb592e940"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb592ea20"/>
        <function-ref name="request" scoped="" ref="0xb592eb00"/>
        <function-ref name="granted" scoped="" ref="0xb592ebe0"/>
        <function-ref name="isOwner" scoped="" ref="0xb592ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb592d978" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb592d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb592db50"/>
        <function-ref name="userId" scoped="" ref="0xb592dc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb52676a0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb52676a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5267878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb52679d8" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb52679d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5267bb0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5267c90"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5267d70"/>
        <function-ref name="dequeue" scoped="" ref="0xb5267e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb52653a8" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb52653a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5265590"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5265670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5263338" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5263338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5263520"/>
        <function-ref name="configure" scoped="" ref="0xb5263600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5263760" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb5263760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5263938"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5263a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5263af8"/>
        <function-ref name="dequeue" scoped="" ref="0xb5263bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb52657b0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb52657b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5265988"/>
        <function-ref name="requested" scoped="" ref="0xb5265a68"/>
        <function-ref name="granted" scoped="" ref="0xb5265b48"/>
        <function-ref name="isOwner" scoped="" ref="0xb5265c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5265d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5263d18" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5263d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5263ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5262010"/>
        <function-ref name="led1On" scoped="" ref="0xb52620f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb52621d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb52622b0"/>
        <function-ref name="get" scoped="" ref="0xb5262390"/>
        <function-ref name="led1Off" scoped="" ref="0xb5262470"/>
        <function-ref name="led0On" scoped="" ref="0xb52627f0"/>
        <function-ref name="set" scoped="" ref="0xb5262630"/>
        <function-ref name="led2On" scoped="" ref="0xb5262550"/>
        <function-ref name="led2Off" scoped="" ref="0xb5262710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5266bc0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5266bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5266da8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5266e88"/>
        <function-ref name="request" scoped="" ref="0xb5265010"/>
        <function-ref name="granted" scoped="" ref="0xb52650f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb52651d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5265e48" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5265e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5263050"/>
        <function-ref name="userId" scoped="" ref="0xb5263130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5262970" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb5262970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5262b48"/>
        <function-ref name="runTask" scoped="" ref="0xb5262c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb592a948" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb592a948"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb592ab20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb592ac60" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb592ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb592ae38"/>
        <function-ref name="requested" scoped="" ref="0xb592af18"/>
        <function-ref name="granted" scoped="" ref="0xb5929010"/>
        <function-ref name="isOwner" scoped="" ref="0xb59290f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb59291d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb592a550" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb592a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb592a728"/>
        <function-ref name="stop" scoped="" ref="0xb592a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5929310" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5929310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb59294e8"/>
        <function-ref name="userId" scoped="" ref="0xb59295c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb5248640" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5248640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb5248818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb5248958" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5248958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5248b30"/>
        <function-ref name="requested" scoped="" ref="0xb5248c10"/>
        <function-ref name="granted" scoped="" ref="0xb5248cf0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5248dd0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5248eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb5248248" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb5248248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5248420"/>
        <function-ref name="stop" scoped="" ref="0xb5248500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5247010" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5247010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb52471e8"/>
        <function-ref name="userId" scoped="" ref="0xb52472c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0xb590e010" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb590e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb590e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb590e3a0" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb590e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb590e578"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb590e658"/>
        <function-ref name="request" scoped="" ref="0xb590e738"/>
        <function-ref name="granted" scoped="" ref="0xb590e818"/>
        <function-ref name="isOwner" scoped="" ref="0xb590e8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5911b20" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5911b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5911cf8"/>
        <function-ref name="stop" scoped="" ref="0xb5911dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb5904338" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0xb5904338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb5904510"/>
        <function-ref name="offset" scoped="" ref="0xb59045f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb59046d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb58febd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb58febd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb695c288"/>
            <typename><typedef-ref name="TMilli" ref="0xb695c468"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb58fb6d8"/>
        <function-ref name="fired" scoped="" ref="0xb58fd970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb58fb098"/>
        <function-ref name="isOneShot" scoped="" ref="0xb58fde20"/>
        <function-ref name="getdt" scoped="" ref="0xb58fbb88"/>
        <function-ref name="gett0" scoped="" ref="0xb58fb930"/>
        <function-ref name="isRunning" scoped="" ref="0xb58fdbc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb58fd218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb58fb3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb58fd498"/>
        <function-ref name="stop" scoped="" ref="0xb58fd718"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb69b1910" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb69ae3c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb69ae3c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb69ae870" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb69ab060" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb69ae3c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb69aecf0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb69aeec0" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb69ae3c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb69a48f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb69a4798" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb69692e0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6969188" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6966370" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6966010" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69661f0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb69689b0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb6968010" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6969c08" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6969de8" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb6972698" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb6972138" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6972350" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6972530" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb696f248" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6970ed0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb696f0c8" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6970970" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6971350" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb69711f8" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6970060" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6971cf0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6971ee8" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb69a6878" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb69a6720" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb69a5730" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb69a55d8" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb69a6038" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb69a6d88" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb69a7de8" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
              <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb69a78a0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb69a7a80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69a7c60" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb6c47800" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb6c47d18" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb6962ec8" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb6961360" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb69617e0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb695f070" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb695fd60" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb695e230" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb6961c08" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb695e970" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb695e818" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb6962aa0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb695f4f0" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb695f918" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb695b5d8" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb695b5d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb6957f00" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6959b78" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb6958ce8" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb69589a0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb6958b88" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb69584f8" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb6956888" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb6956358" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb6958038" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb695bc30" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb695bad8" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb69578e0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6957598" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb6957780" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb69592e0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6959188" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb69597b0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb6933708" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0xb6913070" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0xb6914010" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0xb6914c58" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0xb6915bb8" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0xb6914458" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0xb6915448" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0xb6915800" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0xb6914858" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb69be2a0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb6be1790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0xb68e4e98" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0xb68e4d40" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0xb68ec5b0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb690fac8"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0xb690d0d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0xb68e2430" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0xb68e2c70" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0xb68e48f0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0xb68e2828" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb68eca08" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0xb68ece50" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb68e44c0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb690fac8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0xb690d0d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb68e4368" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb690fac8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0xb690d0d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0xb68dfb40" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0xb68d9250" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0xb68d90f8" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb68d99a0" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb68d9848" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb68dabd8" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb68da738" loc="63:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0xb68da168" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0xb68da010" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0xb68e16f0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0xb68e1c48" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb68e1af0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0xb68de218" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0xb68de0c0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0xb68de7b8" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0xb68de660" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb68deb60" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb68e9b80" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0xb68e79d8" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0xb68e7880" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0xb68e7010" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb68ea308" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0xb68e7408" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb68eab50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0xb68e97d8" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb68ea758" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb68eaf18" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0xb68e9420" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb68e92c8" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0xb68e6010" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0xb68e7e68" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb68c5768" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb69d3cb8" loc="76:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb69bf408" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb6c50f10" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb6c4e838" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb6c4e370" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb6826720" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6826720"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0xb68225d8" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6826720"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6822068" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb6822268" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6826720"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0xb6822470" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0xb6823010" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6826720"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6826c30" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6826720"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0xb6826e38" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb6823b08" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0xb68239b0" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb68213d0" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6821010" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0xb6821270" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0xb6935e20" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0xb680c4c0" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0xb680c4c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0xb680ca50" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0xb680c4c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb6801ac8" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb68011a8" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6806b78" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb6801658" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb68001d8" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb6805440" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6805440"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb6805910" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb6804170" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6805440"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6805db0" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb6804010" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb6805440"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0xb67f5b28" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0xb67fb610" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb67fb4b8" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0xb67fa388" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb67fa010" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0xb67fa228" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0xb67f6878" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb67f7d80" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0xb67f62c8" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb67f64f0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0xb67f6708" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0xb67f3528" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0xb67f3150" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb67f3388" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0xb67f9ad8" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb67f9010" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0xb67f9518" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb67f9750" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0xb67f9968" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0xb67f4338" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb67f41e0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0xb67c31a8" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb67c4820" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb681cef0"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0xb681b1e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb67c8aa0" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb681c750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb681c238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0xb67c8d10" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb681cef0"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0xb681b1e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0xb67c4010" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0xb67c4240" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb67c4488" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0xb67c46a0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb67c3b18" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0xb67c3780" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb67c39b8" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0xb67c7a18" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0xb67c7ee0" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb67ba5a8" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb67baa90" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0xb67af010" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb6810780"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0xb6810d68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0xb67ae3c8" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb681cef0"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0xb681b1e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb67ae270" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0xb67adad8" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
          <long> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0xb67ac5d8" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0xb67ac168" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0xb67ac010" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0xb67af4c8" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb680fab8"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0xb680e010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0xb67afce8" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb681cef0"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0xb681b1e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb67af920" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0xb67afb88" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb681cef0"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0xb681b1e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0xb67acf08" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
          <long>&#10; Starts a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0xb67b1488" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb6810780"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0xb6810d68"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0xb67b1330" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb6810780"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0xb6810d68"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0xb67aea50" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb67ae8f8" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0xb67ad168" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb67ad010" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0xb67ad668" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0xb67aca40" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
          <long>&#10; Stops a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0xb67aa370" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0xb67b1ab0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb680fab8"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0xb680e010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0xb67b1958" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb680fab8"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0xb680e010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb67a4508" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb67a4930" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0xb67a18a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb67a1748" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb67a57d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb67a2168" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0xb67a1e30" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb67a4d18" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb67a40c8" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0xb67a2e10" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0xb67a5c08" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb67a5010" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0xb67a2590" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0xb67a1268" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0xb67a2a10" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb67a53e0" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb67b2010" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb67b2510" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb6709f10" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6706508" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb67031f0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb6707d10" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb66feb68" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6705508"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb66fea10" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6705508"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb67017d8" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb6701e98" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6705508"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6701d40" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6705508"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb66fe480" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb6705508"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb653c828" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb653c828"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb653cd08" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6537990" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6537990"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6537af8" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb6532dd0" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6534aa8" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb6532788" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb6532438" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          </variable>
          <variable name="dt" ref="0xb6532628" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb6534f18" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb6531288" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6534168" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6534010" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6537af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6534648" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb64f88f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb64f88f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb64f8a58" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64f8a58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb64f5010" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64f8a58"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb64f5a38" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb64f5538" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb64f5e60" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0xb639cea8" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb639cb58" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb639cd48" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0xb639b3f0" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0xb639c680" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0xb639d8f0" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0xb6399318" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb63991c0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb63a0e28" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0xb63999a0" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6399848" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0xb639bc70" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb639b930" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb639bb10" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0xb639d400" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb639d2a8" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0xb639c170" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb639dde8" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb639c010" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb636f0c8" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6370c30" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xb6370820" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xb63702b8" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb63749e0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb6374dc8" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb6374250" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb63725c0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6374610" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb63721c8" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6377b00" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb6377e90" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb62fc9d8" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb62fa9d0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb62fc5a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xb62fa508" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xb62fa3b0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xb62fc158" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb62fce70" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb62621a8" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0xb6262b90" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb6265c38" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb62626b8" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb62611a8" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0xb621f5b8" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb621cca0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb62191a8" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb61c93d8" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb61c93d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb61c9540" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb61c9540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb61b8750" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb61c9540"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61b85f8" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb61b9220" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61b90c8" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb61c9bc8" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61c9a70" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb61b9ce8" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb61c9540"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61b9978" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb61b9b88" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb61c9540"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb61b1de0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61b1a48" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb61b1c80" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb61b0980" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61b0828" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb61b1570" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb61b4e00" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb61b4ca8" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb61caf20" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61cadc8" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb61bda38" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61bd8e0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb61bc4e0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61bc388" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb61c1168" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c1010" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb61c7a18" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c78c0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb61cb928" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb61c7010" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61cbe68" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb61c5378" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c5010" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb61c5218" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb61c6668" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c6300" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb61c6508" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb61c4a78" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c4920" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb61c25e8" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c22b8" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb61c2488" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb697d4e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb61c5f20" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c5dc8" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb61c1df0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb61c1a90" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb61c1c90" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb61c0788" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0xb6197010" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6198e68" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0xb619ae80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb619ad28" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0xb619a010" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb619be88" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0xb619b900" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb619b7a8" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0xb619a608" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0xb619a4b0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0xb6198790" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6198638" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb619d9d0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb619d658" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb619d870" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0xb61a1bd0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb61a1878" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0xb61a1a70" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0xb619ebd8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb619e858" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0xb619ea78" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0xb61a02b8" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb6dcd800"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb61a0160" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0xb619e258" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb619e100" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0xb61a13b0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb61a1258" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0xb61a0980" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb61a0828" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb6194968" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6194810" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb61a2d48" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61a29b0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb61a2be8" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb6194010" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6193e78" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb6193958" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61935c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb61937f8" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb61922e0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6192188" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb619c370" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb619c218" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb618ddf8" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb618dab8" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb618dc98" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6189a28" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61896c8" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb61898a8" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6189168" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb618ab40" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb618a9e8" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6187828" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61874d0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb61876c8" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6179cb8" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6179970" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0xb6179b58" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb61727f8" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0xb6171f10" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb6171710" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb6171bc8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6171da8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6171220" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6172eb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb61710c0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0xb6172320" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0xb61721c8" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb6178c10" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6178768" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0xb616b9c8" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb616b850" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb616b388" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb69a36e8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0xb69a1768"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb616b1f0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0xb61694e0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xb69a1e38"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0xb69a0dc8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6169348" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0xb6177ca0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0xb6174010" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0xb6176af8" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0xb617ae10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0xb61777c8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0xb61761c8" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0xb6176688" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0xb6177338" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0xb6167c88" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0xb6168df0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0xb6167820" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0xb61676c8" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0xb6167250" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0xb6168300" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb61681a8" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0xb6168968" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb6168810" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0xb61317f8" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0xb6131490" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0xb6131698" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0xb6132a58" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0xb6132478" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0xb6132088" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0xb6132318" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xb6136848" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb61366f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0xb6131010" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0xb6134168" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb6134010" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6135228" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb61350d0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0xb6130308" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0xb6134b58" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb6134a00" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0xb6131e18" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0xb6135670" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb61b3ce8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb61ad1c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0xb6135b00" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb6136240" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6136c58" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0xb61345a8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb6121a58" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6121900" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb611a168" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb611a010" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0xb6129db0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb61b3ce8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb61ad1c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb6120510" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb6120d80" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb6120980" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb6120020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb6123ca0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb697d738"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb6123ea8" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb697d998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0xb6117478" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb611e540" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb6122cd8" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb611e1d8" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb611e3d8" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb611c378" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb611eae8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb611c010" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb611c210" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6083b98" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb607f5b0" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb607f168" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb607f010" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6083690" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0xb6064210" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0xb6064700" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0xb6064be0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0xb604d390" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb604d030" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb604d230" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb604aaf0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb604a590" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb604a790" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb604a988" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb604cd30" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb604c9d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb604cbd0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0xb604e778" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69a83c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb604e418" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb604e618" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb604c178" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb604dbe8" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb604dde8" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb604c010" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6039718" loc="70:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb60391a8" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb60393c0" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb60395b0" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6037d88" loc="82:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb6037608" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb6037820" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6037a10" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb6037c18" loc="83:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb603a358" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb603a200" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0xb5fb3bd0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0xb5fd6500"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0xb5fd6748"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb5fb13f8" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5fb12a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb5fb0010" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5fb1e88" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb5fb1908" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb5fb0658" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5fb0500" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0xb5fa9e50" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5fa9cf8" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb5fa9870" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb5f91610" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0xb5f974b0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0xb5fa1978" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe65a8"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0xb5fe6a60"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb5fa1820" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe65a8"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0xb5fe6a60"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0xb5f98318" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Enables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0xb5f9ee70" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe4978"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0xb5fe4e30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb5f9ed18" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe4978"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0xb5fe4e30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb5f934b8" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0xb5f929b0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0xb5f9e888" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe5718"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0xb5fe5b68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0xb5f9c318" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe4978"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0xb5fe4e30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0xb5f9bc88" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0xb5f9bb30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0xb5f9b710" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0xb5f930c8" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0xb5f9e3f0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe5718"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0xb5fe5b68"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb5f9e298" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe5718"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0xb5fe5b68"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0xb5f9ccd8" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb5f938a8" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0xb5f9b2c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0xb5f9b168" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0xb5f9aaa8" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0xb5f9aed0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb5f958d0" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0xb5f965e0" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0xb5f98bd0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb5f95cc8" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0xb5f97938" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
          <long>&#10; Disables the Uart RX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0xb5f93c80" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0xb5f9a138" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0xb5feb8b0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0xb5fe7730"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0xb5f920f8" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0xb5f911c8" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0xb5f9c888" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0xb5f9c730" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb5f91b78" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f91a20" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0xb5fa1df0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5fe65a8"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0xb5fe6a60"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0xb5f98768" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb5f97d58" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
          <long>&#10; Enables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0xb5f95418" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5fcb800"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0xb5fcba48"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb5f952c0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5fcb800"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0xb5fcba48"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0xb5f96c60" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
          <long>&#10; Switches USART to Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0xb5fd6500"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0xb5fd6748"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb5f96b08" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0xb5fd6500"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0xb5fd6748"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb5f8f0f8" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0xb5f92588" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0xb5f9a5e8" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0xb5f92db8" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0xb5f961a8" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
          <long>&#10; Disables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0xb5f97070" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
          <long>&#10; Disables the Uart TX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb5f575f0" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0xb5f3d6e0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0xb5f486c0" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0xb5f41860" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb5f41708" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0xb5f4dba0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0xb5f40d80" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0xb5f44488" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0xb5f49e88" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0xb5f48eb8" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0xb5f49580" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0xb5f49428" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0xb5f4a590" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0xb5f46eb8" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0xb5f400f8" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0xb5f3d2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0xb5f412c8" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0xb5f3b680" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0xb5f385c8" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0xb5f4c3e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0xb5f46aa8" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0xb5f458b0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0xb5f49a80" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0xb5f4d158" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0xb5f42e38" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb5f42ce0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0xb5f51d48" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0xb5f40940" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0xb5f3daf8" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0xb5f39480" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0xb5f381c8" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0xb5f3f5f8" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0xb5f3dee8" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0xb5f41c98" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0xb5f3cd78" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0xb5f4c7b8" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0xb5f44e98" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0xb5f3c730" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0xb5f3fe48" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0xb5f44010" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0xb5f45e20" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0xb5f398e0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0xb5f428b0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0xb5f3f1c8" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0xb5f4d798" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5fc0bf0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0xb5fc0e38"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb5f4d640" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5fc0bf0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0xb5fc0e38"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0xb5f466c8" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0xb5f4a168" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb5f4a010" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0xb5f45418" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f452c0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0xb5f3b210" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0xb5f49010" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0xb5f4cbd8" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0xb5f42450" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0xb5f422f8" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0xb5f4c010" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0xb5f3c2e0" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0xb5f3fa20" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0xb5f40520" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0xb5f44a38" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0xb5f448e0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0xb5f462b8" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0xb5f482a0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0xb5f39d10" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0xb5f4aaf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb5f4a998" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0xb5f3bb00" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0xb5f48ab0" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0xb5f39010" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb5de6c50" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb5de6af8" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb5dd8770" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb5dd8228" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb5dd8428" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5dd8608" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb5dd8ed8" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb5dd8b98" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5dd8d78" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb5dc73f0" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb5dc73f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb5dc7558" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5dc7558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb5dc7b70" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5dc7558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb5dc7a18" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5dc7558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0xb5d95648" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb5d76758" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb5d761d0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0xb5d765f8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0xb5d79cf0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0xb5d79870" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb5d79718" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6dcc550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0xb5d83920" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d837c8" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb5d83010" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6c51388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d87e78" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb5d81b10" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d819b8" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb5d81220" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d810c8" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb5c477a0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb5c477a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb5c47df0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb5c477a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb5c47c98" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb5c477a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb5ac09b0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5ac0620" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb5ac0850" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb5ac36c0" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb5ac0010" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5ac3c18" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6975e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6974c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb5ac3e30" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb5abb938" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb5abb500" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb5ab5010" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb5ab5c70" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb5ab4d60" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5ab4c08" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb5ab41a8" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb5ab5740" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5ab55e8" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb5ab2278" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb5ab4708" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb5aba038" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb5aba600" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb5abda08" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb5abd8b0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb5abad38" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb5ababe0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb5ab8eb8" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb5ab76c8" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5ab7570" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb5ab7d60" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb5ab7c08" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb5a02170" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb5a05d80" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5a02010" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb59ff518" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb59ff3c0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb59ffd20" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb59ff9d0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb59ffbc0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb5a00970" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb59fdbb8" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb59fd668" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb59fd858" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb59fda50" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb5a00ef8" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb5a00010" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb5a02a90" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5a02c80" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6dcc310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb5a02e78" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb59eee98" loc="46:../../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb59eed40" loc="46:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb59ea7a8" loc="56:../../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6c4b220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb59ea440" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb59ea648" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6dcc0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0xb59e7a10" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5fcb800"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0xb5fcba48"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
