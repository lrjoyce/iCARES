<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:DemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb694eba0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb68d8aa8"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb68d8aa8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb68d5840"/></to>
    </wire>
    <wire loc="18:DemoAppC.nc">
      <from><interface-ref name="Photo" scoped="" ref="0xb69483c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb68cc100"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb68cc100"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb57c9ae8"/></to>
    </wire>
    <wire loc="19:DemoAppC.nc">
      <from><interface-ref name="IntTemp" scoped="" ref="0xb694a0f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6361df0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb6361df0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb552fb20"/></to>
    </wire>
    <wire loc="20:DemoAppC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0xb694add0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0xb634e978"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0xb634e978"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0xb5509468"/></to>
    </wire>
    <wire loc="21:DemoAppC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0xb6949b28"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0xb61743f8"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0xb61743f8"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0xb5479eb0"/></to>
    </wire>
    <wire loc="23:DemoAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb6942a30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6173d40"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6173d40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb61475a8"/></to>
    </wire>
    <wire loc="24:DemoAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb690cb40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5afa938"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5afa938"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb52b9200"/></to>
    </wire>
    <wire loc="25:DemoAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6906e68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb616e458"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb616e458"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6145e90"/></to>
    </wire>
    <wire loc="27:DemoAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb6941658"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5aab668"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5aab668"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5a6c010"/></to>
    </wire>
    <wire loc="28:DemoAppC.nc">
      <from><interface-ref name="SerialAMSend" scoped="" ref="0xb690a4f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5aa8010"/>
      <arguments>
        <value cst="I:150">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:DemoAppC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0xb6941d10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5aa8d28"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5aa8d28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5a715b0"/></to>
    </wire>
    <wire loc="31:DemoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb68fed10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb619b230"/></to>
    </wire>
    <wire loc="32:DemoAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb68f58e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb58a4238"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb58a4238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:DemoP.nc">
      <from><interface-ref name="sendPacket" scoped="" ref="0xb68f29c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:DemoP.nc">
      <from><interface-ref name="sendSerialPacket" scoped="" ref="0xb68f1230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:DemoP.nc">
      <from><interface-ref name="readSensors" scoped="" ref="0xb68f21d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5210128"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5a6fc30"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5ba45c8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5bc2280"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5bd4570"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5be78b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5ca6c98"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5d2f290"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb606c9f0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5378120"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5f9c9e8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60d0d70"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb54b5430"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb63d4010"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb64e47b8"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb57accd8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb675ec68"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb68d5bd8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb6beba78"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb6beba78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb69719f0"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb68bb240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68d3f10"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb68d3f10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68d28f0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb68bb648"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0xb68d2d00"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0xb68bfec8"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0xb68bfec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68be738"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb68cf108"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68cb010"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0xb68cf4e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6187c88"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb68be738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68ac010"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0xb68b6f10"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0xb68ac3e0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb695b600"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb68acde0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0xb68882a8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6817cb8"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0xb687a090"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6813b00"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0xb687f168"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb681a010"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0xb68705f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6805b08"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0xb6883278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb681b8f0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0xb6874a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6805430"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0xb686e090"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb67f8b08"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0xb6877010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb68028f8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0xb6885ac8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb6847010"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0xb6871438"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb680ebe8"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0xb6875a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb680e510"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0xb687ac00"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb680fa20"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0xb687fa08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6816e88"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0xb6870e98"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6801b08"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0xb68798c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb680b8f8"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0xb6883a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb68167b0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0xb688ae98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb686b010"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0xb6873278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6801430"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0xb688d708"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb681ce78"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0xb6877b80"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb67fe8f8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0xb687b8b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb681e190"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0xb6871cd8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6809b08"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0xb68809e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6847a68"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0xb6874278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6809430"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0xb686f788"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb67fdb08"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0xb6878468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb68068f8"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0xb6873a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb67fd430"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0xb6872b38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6812cc8"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0xb6872278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb67f8430"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0xb6875278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb68125f0"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0xb6876708"/></from>
      <to><interface-ref name="Control" scoped="" ref="0xb67f98f8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0xb684e050"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb686bcc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0xb684e3a8"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0xb67f5558"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0xb684e700"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0xb67f59e0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb681e948"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb686b010"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb681d5f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb686bcc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb681a7c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb686b010"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6819430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb686bcc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6815650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb686b010"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6814278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb686bcc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0xb684aad0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0xb684ae28"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0xb67f5e68"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0xb68491d0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0xb67f2300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6811510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6810190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb680d430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb680c080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6808350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6807010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6804350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb6803010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6800350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb67ff010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb67fb350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb67fa010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb67f7350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0xb67f6010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0xb684a768"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6970238"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb6970e90"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb6bea948"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb57c9ae8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb67ab300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb68ccd08"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb57c69d8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb57c69d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb63de8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0xb68d6d20"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0xb6369788"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb57c7800"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb6369d30"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb57c40e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb6369d30"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb67a5ab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb57c7800"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb6795e08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb57c1a50"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb57c1a50"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb6761100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0xb67a8300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb57c13b8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb57c13b8"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb654fea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb57c0cd0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb57c7800"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0xb6785828"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb57c0310"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb6761dc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb57c07e8"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb6760728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb654b9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6764580"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb57b7ab8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb57c0cd0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6549638"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb57b7150"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0xb6761dc0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb67591f8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0xb675e100"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0xb6758310"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0xb6760728"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb6759ae8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb6761100"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb675a4e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6764580"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6676170"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6676170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb57a8030"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0xb6754818"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6676cb8"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6676cb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb57a8b78"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0xb674d538"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0xb66cc0b8"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0xb67420d8"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0xb6644d88"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0xb6644d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb659fd68"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0xb674a268"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0xb6642010"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0xb6642010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb659c5f8"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0xb67493c8"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0xb6641178"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0xb6641178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb659ad68"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0xb6741588"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0xb6640368"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0xb6640368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65975f8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0xb6740748"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0xb663f4c8"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0xb663f4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6595d68"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0xb673f908"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0xb663e688"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0xb663e688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65925f8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0xb673eac8"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0xb663d848"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0xb663d848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658fd68"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0xb673dc88"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0xb663ca08"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0xb663ca08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658c5f8"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0xb6756620"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0xb688ae98"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0xb6755368"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0xb6885ac8"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0xb6755eb8"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0xb688d708"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0xb674ca08"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0xb68809e0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0xb674b258"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0xb6883278"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb66768b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb57a8770"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb57a7068"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6675208"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb57a7490"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0xb57a9030"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb57a7a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0xb666dd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65fb148"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0xb6661010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e2d68"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0xb6638158"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65da5f8"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0xb6624e58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658fd68"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0xb6637280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d8d68"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0xb665f368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ddd68"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0xb66535a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65c3d68"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0xb6648688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65a9d68"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0xb6634760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d3d68"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0xb662a3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb659fd68"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0xb661f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658c5f8"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0xb6669368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f4730"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0xb6633920"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d05f8"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0xb6667688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ef5f8"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0xb665c848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d55f8"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0xb6650ae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65bb5f8"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0xb6645bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65a15f8"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0xb666fa08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6600220"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0xb6664bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e7de8"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0xb6659d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65cdd68"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0xb6639010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65da5f8"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0xb6627918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65975f8"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0xb6620280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658c5f8"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0xb662e010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ab5f8"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0xb6655178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65c8e68"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0xb664a368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65aed68"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0xb6626ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6595d68"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0xb6632ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65b4d68"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0xb666b010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f98a0"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0xb6660178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65df5f8"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0xb665e4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65da5f8"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0xb6652768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65c05f8"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0xb6647848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65a65f8"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0xb6630e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65aed68"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0xb66736a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb661b3a8"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0xb6666848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ecd68"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0xb665ba08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d3d68"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0xb664fca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65b9d68"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0xb662c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65cdd68"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0xb6629598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb659c5f8"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0xb6622010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658c5f8"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0xb664c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65b4d68"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0xb662b288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ca5f8"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0xb666ebc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65fe948"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0xb6663d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e45f8"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0xb6657010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ca5f8"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0xb6631ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65b15f8"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0xb6625c98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65925f8"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0xb66543e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65c55f8"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0xb66494c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ab5f8"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0xb666a178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f6030"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0xb66684c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65f2e50"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0xb665d688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d8d68"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0xb6651928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65bed68"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0xb6646a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65a4d68"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0xb6670848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6603aa0"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0xb6665a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0xb665abc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d05f8"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0xb664ee68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65b65f8"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0xb6635588"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d55f8"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0xb6628758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb659ad68"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0xb66363e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65d55f8"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0xb664b178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65b15f8"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0xb6621168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb658fd68"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0xb661e5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65a15f8"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0xb663bbe8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65ddd68"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0xb654fea0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb6547df8"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb650d8f0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0xb654b9a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb650b378"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6549638"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb650c0e0"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb6548598"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb650c7b8"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb6548c70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0xb6542468"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb64ed0a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb64ed0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0xb6540888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb63fee80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb63fee80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0xb653dc40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb63fac90"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb63fac90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0xb65432d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0xb66cc0b8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0xb650a940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64e1010"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb64e1010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6435390"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb64e47b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb64da090"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb64dd040"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6401d80"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb64da090"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb55da788"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb640c6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6450010"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6439360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb64da4e8"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb64da4e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55d66b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6407730"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6496260"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6496260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6487490"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb55da788"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb55bf060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb55d23b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55dabe0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb55dabe0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55bf4d8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb55d3180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6496260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb55bee48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb55c2480"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb55c2480"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55bca70"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55c1090"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55c1090"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb55bb4f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb55c1ac8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb55c1ac8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0xb687a090"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0xb6875278"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0xb68798c8"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0xb6874278"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0xb6878468"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0xb6874a38"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0xb6877010"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0xb6873278"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0xb6877b80"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0xb6873a38"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0xb6876708"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0xb6872278"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb64866f8"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb6499d30"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb6499d30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6491768"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb6490870"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb6438d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb640a948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb5571140"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb57c40e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb63da518"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb57c40e0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb63d9d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5574860"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5574860"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb654fea0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb63d91b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5574ef8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5574ef8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb6761100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb63de8b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb6391010"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb63d0100"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb63da518"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6375ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb63d9d70"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0xb63767d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb63d4780"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb63d1280"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb63d91b8"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb63d0b48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6395690"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6395690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb55687d0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0xb63b84d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0xb63c0448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0xb63bdc88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6395238"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb556c8f8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb556c8f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb555c2f8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb55644c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb556cd50"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb556cd50"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb555c770"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5565278"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6496260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5559108"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb5560690"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5560690"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5559d00"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb555e330"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb555e330"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb5558790"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb555ed68"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb555ed68"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5572760"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb6761dc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5572c38"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb6760728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb654b9a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6764580"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb55349f8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb5571140"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6549638"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb5534090"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb552fb20"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb67ab300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb6360a28"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb552c9d8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0xb552c9d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0xb63de8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb552d800"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb6356990"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb55290e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb6356990"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb67a5ab8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb552d800"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0xb6795e08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55277b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55277b0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb6761100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0xb67a8300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5527118"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5527118"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb654fea0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb55269f0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb552d800"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5526030"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb6761dc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5526508"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb6760728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb654b9a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6764580"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb551ed90"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55269f0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6549638"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb551e428"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb55167f8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55290e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0xb63da518"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55290e0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb63d9d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb551ae70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb551ae70"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0xb654fea0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb63d91b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5518530"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5518530"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0xb6761100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5518d88"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0xb6761dc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5516310"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0xb6760728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0xb654b9a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6764580"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0xb550e010"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0xb55167f8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6549638"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0xb550f668"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0xb6176580"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0xb5507030"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0xb6177968"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0xb5507418"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0xb6177580"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0xb5509080"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0xb5506010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6321b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0xb5506dc0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb631e5e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0xb55066e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6321b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0xb5505970"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb631e5e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0xb631e5e8"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb631bd68"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6321b18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb62ca8e8"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb62ca8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb62099e8"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0xb62d2970"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0xb62c7090"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0xb62c7090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb62c42d0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0xb62d1350"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0xb62c7a88"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb62c7a88"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb62b9a58"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0xb62d1cc8"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0xb62c6540"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0xb62c6540"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb62152c8"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb62d03c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb61a5dc0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb61a5dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb62ce5d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0xb62cd6a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0xb62cd270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb62099e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb54b48d0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb62c4c48"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0xb666b010"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb62b8430"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0xb666a178"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb62b6c18"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0xb6669368"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0xb62aee28"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb62b62a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0xb62ad880"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb62c42d0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb62ac2f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb62b9a58"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb62b3b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb62a6238"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb62a6238"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0xb62158c0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0xb629eeb8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0xb629eeb8"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0xb628f608"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb61c6ca0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb62b3440"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb61c5cc0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb61c9c88"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb61c9c88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb54b3ad0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb61c5628"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb61c95f0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb61c95f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb54b3438"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0xb62ab170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0xb629e608"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0xb6290cf8"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0xb6295010"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0xb628a6e8"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0xb6299070"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0xb628e798"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0xb6298288"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0xb628d920"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0xb629f448"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0xb6291b38"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0xb6297cf8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0xb628b448"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0xb62958c0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0xb6289010"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0xb629c250"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0xb62949a0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0xb6298b38"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0xb628c288"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0xb629fcf8"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0xb6290448"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0xb62966e8"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0xb628bd78"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0xb629a798"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0xb628feb8"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0xb6299920"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0xb628d070"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0xb629cb00"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0xb6291288"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0xb6297448"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0xb628cb38"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb61c91e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb54b3030"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb54b1010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb61c8208"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb54b1438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb54b5768"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb54b06d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb54962e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb61c6ca0"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5496898"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb61c5310"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5496bb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb61c5628"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5495310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb61c5cc0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0xb5495748"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0xb5495b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6187c88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb619eeb0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb619bef8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb619dd58"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb619dd58"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb61869b8"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb619a8f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb6188840"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb6188840"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb61831a8"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb61992e8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb6187300"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb6187300"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6181990"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6185350"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0xb6648688"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6183b20"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0xb6647848"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6180350"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0xb6646a08"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0xb6173010"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0xb5479ac8"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0xb6174010"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0xb547aaf8"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0xb6175450"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0xb547aee0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0xb5478a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6321b18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0xb5476868"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb631e5e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0xb5476190"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6321b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0xb5475430"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0xb631e5e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb61475a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6136cd0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb616f630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6147e80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6147e80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5b54c80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb616e100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6146ef0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6146ef0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb5b51db0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6145e90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5b50dc0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb6169010"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c57860"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c57860"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c4e260"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb614f988"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6142660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6142660"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6125c68"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb616aa38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6146858"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6146858"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5b51718"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb615d648"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb613ef00"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb613ef00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6125310"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb61603b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6145278"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6145278"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5b501a8"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb615e9e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5c54288"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5c54288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5c4cc50"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6136cd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5b6c1d0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb6138df0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb5b4fea8"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6130ab8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb5b4f830"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb613e6a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb612ca50"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb612ca50"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6125c68"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb5b6dae8"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6125310"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5c586e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6137010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb61242a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb61242a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb5b6ea20"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb613b310"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb61258a0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb61258a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5c57208"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0xb5b49108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb612e688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5b4d738"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb612df18"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb612df18"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb5ba9b40"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5b4dea0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb612c6b8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb612c6b8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb5ba8320"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5b4a130"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5d99720"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5b4c280"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c527e0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5b4caa0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c4f630"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb5b4b010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb60d1df8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb60d1df8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb60cc900"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb5b4a870"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb61200f0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb61200f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb611ce20"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5b497d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5b6c1d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb5b6bc30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5c57208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5c4fbc0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb5b6ea20"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb5b60ec0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb5ba9b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb5ba2118"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb5b6dae8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb5b6a888"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb612d3e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5ba9770"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5ba9770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0xb5ba3d28"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5c586e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5c4f0b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb612e688"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5bab9a0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5bab9a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5ba6e50"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6127c58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5ba9090"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5ba9090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb5ba35b8"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb612d7c8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb5ba8700"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb5ba8700"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb5ba2c80"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb5ba8320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb5ba28a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb5b6bc30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6121010"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6121010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb611c0e0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5ba7298"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5bda7f0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5bda7f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5bd7e90"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5bd7010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5b6e320"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5b6e320"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5b60228"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5b60228"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5b6d040"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5b6d040"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5b6b0a8"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5b6b0a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6121618"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6121618"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb611c6e8"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5ba8ea8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5b6d720"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5b6d720"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb5b6b810"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5b6b810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5bd8628"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5bd8628"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5bc5af8"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5bd8e78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6121d18"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6121d18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5ca8b60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5ca8b60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5ca3a40"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb611b628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb60dcba8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb60dcba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb60cc1c8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb61157e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb60d8ea0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb60d8ea0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb60cba40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb611a260"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d3ac00"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb611a260"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5ca8180"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb5ca8180"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5ca3060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb5d3ac00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d2f630"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb6110888"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0xb5d370f0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb5d370f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5d2fb28"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb6119098"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb5d37808"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb5d37808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb5d2e2d0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb6114650"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb610ae18"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb610e4e8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb5be5c40"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb5be5c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb5be36e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0xb61076e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5bea970"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5bea970"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5f9f938"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb610e930"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0xb6105980"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0xb6105170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0xb6109890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xb60d79d0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xb60ca5a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0xb60c8010"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb6069010"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb6069010"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb60676d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb60c7a28"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb60443d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb60443d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb603c348"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb60c54c0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb6042300"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6042300"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6035b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb60c5ec8"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0xb6041760"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb6041760"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6030b40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb60c4968"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0xb6022198"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb6022198"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb60103c0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb60b9298"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5de5e28"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5de5e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb60b70e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0xb5de24e8"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5de24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb60b74f8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0xb5de2ef0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5de2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb60b7e48"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0xb5de4da0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5de4da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb60b7928"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0xb5de1260"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5de1260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb60bbce0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0xb5ddc190"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5ddc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb60bf260"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0xb5ddb2b0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5ddb2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb60bf768"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0xb5ddb6e8"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5ddb6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb60bfc88"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0xb5ddf270"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5ddf270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb60bc278"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb5ddf6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5ddf6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb60c1580"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0xb5dd48c0"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5dd48c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb60c1030"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0xb5dd4488"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5dd4488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb60bc788"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0xb5dddbd8"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5dddbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb60bcc80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0xb5ddfae0"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5ddfae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb60ba260"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb5ddd368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5ddd368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0xb60b6268"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5dcae88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5dcae88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0xb60b9a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5db2980"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5db2980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb60c08e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5d99720"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb60c99a8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5d98ae0"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5d98ae0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5d871d8"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0xb60b1b48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0xb60b1368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb606c9f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6067258"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6067258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb54575c8"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb60676d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb5457a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb54575c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5454788"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb5457a20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb54506b8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb5454788"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5444240"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb544c3b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb5454be0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb5454be0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb54446b8"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb544d180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb605a778"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb605a778"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6054010"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5441060"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb5447588"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5447588"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5441c58"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5446250"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5446250"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb54406b0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb5446c88"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0xb5446c88"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6053268"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb6499d30"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb6044dd8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb603ab40"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb6043848"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6037358"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb606b978"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6040b10"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb6042cf8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb6032348"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb603e510"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0xb666dd88"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb603ccc0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0xb66535a8"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6039510"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0xb666ebc8"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6037cd0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0xb66736a0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6034510"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0xb664fca8"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb6032cc0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0xb66543e8"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb602f510"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0xb6650ae8"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb6020a80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb601fd38"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb60228a8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb600fd20"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6014330"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0xb687ac00"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0xb6014d68"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0xb6871438"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0xb60135f0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0xb66543e8"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0xb60109b8"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0xb629e608"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0xb600e350"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0xb629c250"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5de2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5ddca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5dd72b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5ddce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5dd1b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5dd3a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5de2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5dd5190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5dd3190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5dd95c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5dda880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5de4530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe49e8"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5de1910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5de1c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5dd5c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5de0080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5dd35c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5dd6cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5ddff18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5dd6448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5dd76e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5dd6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5dd16e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5dd3e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5ddacb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5dd7b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5dd4cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5ddbb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5dd0010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5de4a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5de0de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5ddd7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5dd9a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5dd9e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5ddc5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5de03d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5de0a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5de15b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5dd4050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5dd12b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5dd9190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5dd6010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5de2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5dda010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5de0730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5dda448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5dd55c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5dd06e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe1c68"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe06a8"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe0e50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe1238"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fde630"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0xb5fdc308"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5fa16f0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5fa16f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5f9f938"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb5fdea70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5f9b1d0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5f9b1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb53cf3b8"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb5fdda78"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5f9b888"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb5f9b888"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb53cfe88"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb5fd7de8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb5f9bbc0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb5f9bbc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb53ce7a8"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5fdcab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0xb5fd58a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5f9f938"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5f99028"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb53ce7a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb5f4b100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb53cfe88"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5f4c398"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb53cf3b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5f4e4e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb53cfa70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb53ca898"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb53ca898"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5e786c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb5f4c398"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb5f06438"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb53ce1d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb5f4c740"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb5f4c740"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb5f06770"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f4a3f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb53cebc0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb53c2b50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f4ef28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb5f4b8f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb53ca1e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb53ca1e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5e7ac48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f476b0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb53c7870"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb53c7870"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5e7dcb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f4ef28"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f06010"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb5f4b100"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb5f06de0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5f4e4e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5f48868"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f05a68"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f4a3f8"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb5f05308"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0xb5f4b8f8"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f015f0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f476b0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0xb5f05dd0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5efdab8"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5efdab8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0xb5ef5e10"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5f01a08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0xb5f006d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5ef5068"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ef2cf0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5ef8428"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5ef2750"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0xb5ed8d38"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0xb6639010"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0xb5ed7e58"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0xb6637280"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0xb5ed5010"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0xb66363e0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0xb5ed4168"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0xb6633920"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0xb5ed3280"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0xb6634760"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0xb5ed91e8"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0xb5e5e9f8"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb53c7c88"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0xb5e7a5d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0xb53c6010"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0xb5e64578"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0xb5e64578"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0xb5e5e9f8"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb53c9170"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5efdab8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb53cacb0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e78b48"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e78b48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e68510"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5e77320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb53c2b50"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5e786c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5e6aa48"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5e6aa48"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5377cf8"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0xb5e7dcb8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5e76af8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5e7ac48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5e6a308"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5e6a308"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb53775b8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0xb5e7a5d8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0xb5e75010"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e68510"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb53767e8"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5e689c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5e77320"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e75ae8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e68510"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0xb5e75378"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5ef8428"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0xb5e757b0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5ef5068"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5e6ae50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5376150"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5376ca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5e689c0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5375170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb5378458"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5374358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0xb5e586d8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0xb5ef5e10"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0xb5e55010"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0xb6639010"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0xb5e54168"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0xb66363e0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5dc3bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5dc8190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5dc4270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5dc2a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5dbd2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5dc2e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5db7b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5db8a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5dc8b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5dbb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5db8190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5dc4ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5dc3368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5dbe5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5dbf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5dc12b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5dc9550"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5dc7910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5dc7c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5dbbc00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5dc5080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5db85c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5dc7260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5dbccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5dc4f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5dc46a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5dc9dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5dbc448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5dbd6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5dbc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5db76e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5db8e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5dbfcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5dbdb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5db9cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5dc1b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5db6010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5dc9a68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5dc5de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5dc37a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5dbea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5dc16e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5dbee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5dc2190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5dc84e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5dc25c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5dc53d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5dc5a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5db98c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5db9488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5dc75b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5db9050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5db72b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5dbe190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5dbc010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5dc8840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5dc8ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5dbf010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5dc5730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5dbf448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5dbb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5db66e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5daa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5db1c28"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5dade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5da96a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5da6e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5da9ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5d9e6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5da05c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5daf6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5da3cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5da1cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5dac6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5daa010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5da6190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5da7468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5da9f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5db1060"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5dae4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5dae840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5da27c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5daec18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5da0190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5dafd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5da3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5dacb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5dac2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5db18d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5da3010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5da42b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5da3448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5d9e2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5da0a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5da78a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5da46e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5da18c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5da87a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5d9eb20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5db1578"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5dada18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5daa448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5da65c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5da8368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5da6a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5daadb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5daf010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5da9270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5dad010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5dad6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5da1488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5da1050"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5dae190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5da2c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5da0e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5da7cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5da4b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5daf368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5dafa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5da8bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5dad368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5da7030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5da2190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5d9d270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0xb5d87db8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0xb5d80b08"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0xb5d80b08"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0xb5d7c888"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0xb5d770e0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0xb5d6f010"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0xb5d6f010"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0xb5d6e4e8"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0xb5d775e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb5d7d590"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0xb5d6f4e8"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0xb5d7e640"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0xb5d7e640"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0xb5d48940"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb5d6a010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb5d57d50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb5d57d50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb5d54888"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0xb5d6e9c0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0xb5d6f4e8"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5d4b388"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0xb5d47160"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0xb5d47160"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb5d46eb8"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0xb5d43010"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0xb688ae98"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0xb5d41350"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0xb6664bc8"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d368d8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d2ebc8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0xb5d36d40"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0xb5d2d0b8"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0xb5d2d680"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb6069010"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb5d26d88"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb606b978"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb5d25830"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb60443d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb5d212f0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0xb6042cf8"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb5d26710"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0xb6020a80"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb5d21d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5cc5d88"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5cc5d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d204a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5cc44f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5cc44f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5d1fc48"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb5cc4a08"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5cc4a08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5d1e098"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0xb5cc3840"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5cc3840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5d1e4c8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0xb5cc3b98"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5cc3b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d1e8f8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0xb5cc2910"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5cc2910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5d1f760"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb5cbe368"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5cbe368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5d20a68"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0xb5cb16e8"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5cb16e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d1f258"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5cb3190"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5cb3190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d1ed38"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb5cbf6a8"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5cbf6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5d1d7b0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb5cbd5c8"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5cbd5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5d1dcd0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb5cbda00"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5cbda00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5d1d370"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0xb5cc0730"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5cc0730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5d1cbc8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0xb5cb26e8"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5cb26e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5d1c220"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb5cb3a00"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5cb3a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5d1c6e8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb5cb3e38"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5cb3e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb5d17978"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb5ca8620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb5ca8620"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb5ca3500"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5d2a0e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5d2a920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5d29088"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c57860"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5d26040"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5c53a00"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5c53a00"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5c49400"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5d17ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5cbebd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5cc3190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5cbf270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5cb82b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5cbde38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5cb2b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5cb5190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5cbfae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5cb95c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5cba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5cbb2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5cc2c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5cb5c00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5cc0080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5cb35c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5cc2260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5cb7cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5cbff18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5cc4d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5cb7448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5cb86e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5cb7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5cbacb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5cb8b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5cb4cf8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5cbbb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5cb1010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5cc0de0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5cbe7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5cb9a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5cbb6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5cb9e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5cbd190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5cc34e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5cc03d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5cc0a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5cb48c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5cb4488"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5cc25b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5cb4050"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5cb22b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5cb9190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5cb7010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5cc3ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5cba010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5cba448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5cb55c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0xb5ca6010"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0xb5ca3ed8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5c971a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb5ca22c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb60443d0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb5ca2cc8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0xb6044dd8"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb5ca1768"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0xb6043848"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb5ca02a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0xb60228a8"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb5ca0968"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5c59438"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5c59438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5c9f128"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0xb5bff5c8"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb5bff5c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c9fce0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c10b98"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c10b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5c9f8b0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0xb5c0e260"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb5c0e260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5c9e1f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c9ea30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5c9c2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c57860"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb5c9d010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb60d1df8"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5c9be98"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb5c0bbe0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb5c0bbe0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5c99408"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb5c09030"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb5c09030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5c9ba58"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0xb5c0e990"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb5c0e990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5c98318"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0xb5bff190"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb5bff190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5c998d0"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb5c00010"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb5c00010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5c99d98"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb5c00448"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb5c00448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c98818"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c01b20"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c01b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5c98d00"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb5c11030"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb5c11030"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0xb5c90378"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5c18550"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb605a778"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0xb5c48350"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb5c50b78"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb5c48da8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb64dd040"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb5c168b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb5c0b270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb5c116e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb5c0d810"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0xb5c06880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb5c09468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb5c10190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0xb5c036e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5c016e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb5c0c0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb5c0c920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0xb5c07b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb5c08e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb5c098a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb5c59af0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb5c10ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5c02190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb5c0e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb5c10840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0xb5c032b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb5c0c4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb5c0dc48"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb5c11388"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0xb5c05a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0xb5c06cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0xb5c05e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb5c00cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb5c072b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0xb5c05190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb5c012b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb5c08190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb5c0d3d8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb5c0cd58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0xb5c06010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb5c09cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0xb5c06448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb5c0b7a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb5c11a38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb5c0d080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb5c02e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb5c02a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5c025c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb5c00880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb5c076e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0xb5c055c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb5c11d90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb5c104e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb5c085c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb5c0ece8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb5c08a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0xb5c03b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb5bffca0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb5be5380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb5be7dd0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb5be8060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5be78b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5bd4960"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5bd7010"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5bd3060"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5bd6f10"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5bd6f10"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5f9f938"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb5bd3818"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb5be5c40"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5bd3cb8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0xb5bd8a50"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0xb5bc5f20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5bc26a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb5bd8e78"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5bc2a68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5ba14c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb5ba7298"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5ba1c30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb5ba8ea8"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb5ba0010"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5ba0830"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5ba0de8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb5ba4900"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0xb5b85cc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0xb5b6c840"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5b698f0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb5b698f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb5f9f938"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5b5d6a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6125310"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb52b9200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb52b4d88"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5af9010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb52b9898"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb52b9898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb616e458"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5af96a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb52b8010"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb52b8010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61603b8"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5aac330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb52b8c08"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb52b8c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb615d648"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb52b1500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5ae4678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb52b1b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61603b8"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5ae4678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5ade908"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5ab60a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb616f630"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5ab6750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61603b8"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5ab53f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb616e458"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb5ab5ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb5ab5f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5a6c010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb5a64010"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5aa8010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5aa4f18"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5aa89d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5aa3670"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5aa6140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5a71c48"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5aa7448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5aa3998"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb5a6fc30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5a6ac10"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5a66af0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5aa6678"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb5a701a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5a6ced8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb5a70858"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb5a6c8d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb5a665e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb58ada30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5a6ced8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb59ec988"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb5a6c8d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb59ec5c8"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb59b2138"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb5a665e8"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb5a625e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5a66af0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb59b1150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5a66af0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb59aa260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb5a66af0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb59b2620"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb5a5d948"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb59b2af8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb5a60758"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb5a5aca0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb59ae668"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb5a5c340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb59ad330"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb59ad330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb58b72a0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb59a49a0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb59ad7b0"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb59ad7b0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb58b9478"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb5a29be8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb5a49a18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb5a2a400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb5a26880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb59b1d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb59af270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb59915e0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb58b9cf0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb58b9cf0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb59884a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb58b9478"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb5989860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb58b8170"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb58b7778"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb58b7b08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5992988"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb5992988"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb598d630"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb58b9060"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5249ba8"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb5249ba8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb58dab48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59877b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb58b8170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5245030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5989100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb5988ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb52494f0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb52494f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb58da100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb5985010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5246bf0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5246bf0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb58de8d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5989100"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5983770"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb59884a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb594a588"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb5989860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb5983c30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb598d630"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5983010"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb5948208"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59877b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0xb594aa68"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0xb5988ca0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0xb5946d88"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0xb5985010"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0xb5948570"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb593e5a0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb593e5a0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0xb5938010"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb5945370"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb58eb648"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb58eb648"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb6499d30"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb59444b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb593cea8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb5936910"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb593e0f8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb593bac8"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0xb5936e30"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0xb6631ca0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0xb5934010"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0xb6630e60"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0xb5933168"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0xb662e010"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0xb5932280"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0xb662b288"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0xb59313d8"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0xb662c170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5248428"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0xb593e5a0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5248010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d9010"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d9010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d3030"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb58d97b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb5245030"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb58dab48"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb58d4568"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb58d4568"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb520fd18"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0xb58de8d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0xb58d8458"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb58da100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb58d5d80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb58d5d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb520f5d8"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d3030"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb520e7e8"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0xb58d8ca0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb593cea8"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb58d34e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb58d97b8"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d74c8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d3030"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb58d0548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb58d4970"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb58d4970"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb520e150"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb58d1da8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb593e0f8"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb520eca8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb58d34e0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb520d170"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb5210460"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb520b358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb51f39d0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb58d1da8"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb51f3dc8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb58d0230"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb51f1150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb58d0548"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb51f17e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d0be0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="DemoP" loc="1:DemoP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC" loc="40(DemoAppC.PhotoC):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadClientC" loc="47(DemoAppC.PhotoC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadStreamClientC" loc="47(DemoAppC.PhotoC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC" loc="44(DemoAppC.InternalTempC):../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC" loc="47(DemoAppC.InternalTempC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC" loc="47(DemoAppC.InternalTempC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient" loc="43(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <module/>
    </component>
    <component qname="DemoAppC.TempC" loc="45(DemoAppC.TempC):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.TempC.SensirionSht11ReaderP" loc="45(DemoAppC.TempC.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="DemoAppC.HumidityC" loc="45(DemoAppC.HumidityC):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.HumidityC.SensirionSht11ReaderP" loc="45(DemoAppC.HumidityC.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="1">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
        <long>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.AMSenderC" loc="47(DemoAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:150">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.AMSenderC.SenderC" loc="47(DemoAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(DemoAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DemoAppC.TimerMilliC" loc="44(DemoAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0xb686d9c8" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0xb686dc00" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0xb686de48" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0xb6869088" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0xb68692a0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0xb68694b0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0xb68696d8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0xb6869900" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0xb6869b70" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0xb68462d8" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0xb6846538" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb66cea90" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb66a98b8" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0xb661a7b8" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0xb661a9e8" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0xb661ac18" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0xb661ae48" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0xb6619068" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb64b7d40" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb64b7d40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6492860" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6492860"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb6495a68" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb6495a68"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb6495ed0" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb6495ed0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb6485168" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb6485168"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb64855e0" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb64855e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6485848" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb6485cd8" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb6485cd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb649c650" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb649c650"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb649cab8" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb649cab8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb649cd20" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb649cd20"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb64721c0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb64721c0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6472428" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6453a10" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6453a10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb64343a8" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb64343a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb6434588" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6408cd0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6408cd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0xb638e2f0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0xb638e4c8" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb638e4c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InternalTemperatureC" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
        <short>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.</short>
        <long>&#10; Msp430InternalTemperatureC is the temperature sensor available on&#10; the msp430-based platforms.&#10;&#10; To convert from ADC counts to temperature, convert to voltage by&#10; dividing by 4096 and multiplying by Vref (1.5V). Then subtract&#10; 0.986 from voltage and divide by 0.00355 to get degrees C.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb620b768" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0xb62068c0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0xb62018c8" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb5d52320" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb5d52320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb5d52758" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5d52758"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb5afbdb8" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb5af68e8" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb5af0398" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb5ae0ba0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0xb694eba0" loc="3:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0xb694eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb694ed78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Photo" ref="0xb69483c8" loc="5:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Photo" scoped="" ref="0xb69483c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb69489f0"/>
        <function-ref name="readDone" scoped="" ref="0xb6948c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6906e68" loc="12:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb6906e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6941050"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6941130"/>
        <function-ref name="getPayload" scoped="" ref="0xb6941210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb69412f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb69413d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb690cb40" loc="11:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb690cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb690cd18"/>
        <function-ref name="getPayload" scoped="" ref="0xb690cdf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb690ced8"/>
        <function-ref name="cancel" scoped="" ref="0xb6944010"/>
        <function-ref name="sendDone" scoped="" ref="0xb69440f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb6941658" loc="14:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0xb6941658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6941830"/>
        <function-ref name="stopDone" scoped="" ref="0xb6941910"/>
        <function-ref name="start" scoped="" ref="0xb69419f0"/>
        <function-ref name="stop" scoped="" ref="0xb6941ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb6942a30" loc="10:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0xb6942a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6942c08"/>
        <function-ref name="stopDone" scoped="" ref="0xb6942ce8"/>
        <function-ref name="start" scoped="" ref="0xb6942dc8"/>
        <function-ref name="stop" scoped="" ref="0xb6942ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0xb6949b28" loc="8:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb6949b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb69461e0"/>
        <function-ref name="readDone" scoped="" ref="0xb6946438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0xb6941d10" loc="15:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacket" scoped="" ref="0xb6941d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6941ee8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb690a010"/>
        <function-ref name="getPayload" scoped="" ref="0xb690a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb690a1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb690a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPacket" ref="0xb68f29c0" loc="33:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendPacket" scoped="" ref="0xb68f29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb68f2b98"/>
        <function-ref name="runTask" scoped="" ref="0xb68f2c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialPacket" ref="0xb68f1230" loc="34:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendSerialPacket" scoped="" ref="0xb68f1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb68f1408"/>
        <function-ref name="runTask" scoped="" ref="0xb68f14e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntTemp" ref="0xb694a0f0" loc="6:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IntTemp" scoped="" ref="0xb694a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb694a718"/>
        <function-ref name="readDone" scoped="" ref="0xb694a970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb68fed10" loc="19:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb68fed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb68feee8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6905010"/>
        <function-ref name="led1On" scoped="" ref="0xb69050f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69051d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb69052b0"/>
        <function-ref name="get" scoped="" ref="0xb6905390"/>
        <function-ref name="led1Off" scoped="" ref="0xb6905470"/>
        <function-ref name="led2Off" scoped="" ref="0xb69057f0"/>
        <function-ref name="set" scoped="" ref="0xb6905550"/>
        <function-ref name="led0On" scoped="" ref="0xb6905630"/>
        <function-ref name="led2On" scoped="" ref="0xb6905710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0xb694add0" loc="7:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temp" scoped="" ref="0xb694add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6949448"/>
        <function-ref name="readDone" scoped="" ref="0xb69496a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensors" ref="0xb68f21d0" loc="32:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensors" scoped="" ref="0xb68f21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb68f23a8"/>
        <function-ref name="runTask" scoped="" ref="0xb68f2488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSend" ref="0xb690a4f0" loc="16:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialAMSend" scoped="" ref="0xb690a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb690a6c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb690a7a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb690a888"/>
        <function-ref name="cancel" scoped="" ref="0xb690a968"/>
        <function-ref name="sendDone" scoped="" ref="0xb690aa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb68f58e0" loc="20:DemoP.nc">
      <component-ref qname="DemoP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb68f58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb68fd4c8"/>
        <function-ref name="fired" scoped="" ref="0xb6904768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6904e70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6904c18"/>
        <function-ref name="getdt" scoped="" ref="0xb68fd978"/>
        <function-ref name="gett0" scoped="" ref="0xb68fd720"/>
        <function-ref name="isRunning" scoped="" ref="0xb69049c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6904010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb68fd1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6904290"/>
        <function-ref name="stop" scoped="" ref="0xb6904510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb68d36d8" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0xb68d36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68d38b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb68d8aa8" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0xb68d8aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb68d8c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68d3f10" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb68d3f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68d2108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb68cf108" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0xb68cf108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68cf2e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68d28f0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb68d28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68d2ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0xb68d2d00" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0xb68d2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68d2ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0xb68cf4e8" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0xb68cf4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68cf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68cb010" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb68cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68cb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0xb68bfec8" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0xb68bfec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68be0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0xb68b6f10" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0xb68b6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0xb68ba728"/>
        <function-ref name="initTimerB" scoped="" ref="0xb68ba1e8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0xb68ba2c8"/>
        <function-ref name="initTimerA" scoped="" ref="0xb68ba3a8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0xb68ba108"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0xb68ba488"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0xb68ba568"/>
        <function-ref name="initClocks" scoped="" ref="0xb68ba648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68be738" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb68be738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68be910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0xb68ac3e0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0xb68ac3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0xb68acbd8"/>
        <function-ref name="initTimerB" scoped="" ref="0xb68ac698"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0xb68ac778"/>
        <function-ref name="initTimerA" scoped="" ref="0xb68ac858"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0xb68ac5b8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0xb68ac938"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0xb68aca18"/>
        <function-ref name="initClocks" scoped="" ref="0xb68acaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb68acde0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0xb68acde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb68ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68ac010" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb68ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68ac1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0xb68882a8" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0xb68882a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6888480"/>
        <function-ref name="getControl" scoped="" ref="0xb6888560"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6888640"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6888720"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6888800"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68888e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68889c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6888aa0"/>
        <function-ref name="setControl" scoped="" ref="0xb6888b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0xb687a090" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0xb687a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb687a268"/>
        <function-ref name="getControl" scoped="" ref="0xb687a348"/>
        <function-ref name="enableEvents" scoped="" ref="0xb687a428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb687a508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb687a5e8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb687a6c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb687a7a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb687a888"/>
        <function-ref name="setControl" scoped="" ref="0xb687a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0xb687f168" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0xb687f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb687f340"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb687f420"/>
        <function-ref name="captured" scoped="" ref="0xb687f500"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb687f5e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb687f6c0"/>
        <function-ref name="setEdge" scoped="" ref="0xb687f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0xb68705f8" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0xb68705f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68707d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68708b0"/>
        <function-ref name="captured" scoped="" ref="0xb6870990"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6870a70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6870b50"/>
        <function-ref name="setEdge" scoped="" ref="0xb6870c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0xb6883278" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0xb6883278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6883450"/>
        <function-ref name="setEvent" scoped="" ref="0xb6883530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6883610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68836f0"/>
        <function-ref name="fired" scoped="" ref="0xb68837d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0xb6874a38" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0xb6874a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6874c10"/>
        <function-ref name="setEvent" scoped="" ref="0xb6874cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6874dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6874eb0"/>
        <function-ref name="fired" scoped="" ref="0xb6873010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0xb686e090" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0xb686e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb686e268"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb686e348"/>
        <function-ref name="captured" scoped="" ref="0xb686e428"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686e508"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686e5e8"/>
        <function-ref name="setEdge" scoped="" ref="0xb686e6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0xb6877010" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0xb6877010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68771e8"/>
        <function-ref name="getControl" scoped="" ref="0xb68772c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68773a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6877488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6877568"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6877648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6877728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6877808"/>
        <function-ref name="setControl" scoped="" ref="0xb68778e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0xb6885ac8" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0xb6885ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6885ca0"/>
        <function-ref name="getControl" scoped="" ref="0xb6885d80"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6885e60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb688d010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb688d0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb688d1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb688d2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb688d390"/>
        <function-ref name="setControl" scoped="" ref="0xb688d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0xb6871438" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0xb6871438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6871610"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb68716f0"/>
        <function-ref name="captured" scoped="" ref="0xb68717d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68718b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6871990"/>
        <function-ref name="setEdge" scoped="" ref="0xb6871a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0xb6875a38" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0xb6875a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6875c10"/>
        <function-ref name="setEvent" scoped="" ref="0xb6875cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6875dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6875eb0"/>
        <function-ref name="fired" scoped="" ref="0xb6874010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0xb687ac00" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0xb687ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb687ae58"/>
        <function-ref name="getControl" scoped="" ref="0xb6879010"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68790f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68791d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68792b0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6879390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6879470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6879550"/>
        <function-ref name="setControl" scoped="" ref="0xb6879630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0xb687fa08" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0xb687fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb687fbe0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb687fcc0"/>
        <function-ref name="captured" scoped="" ref="0xb687fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb687fe80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb687e010"/>
        <function-ref name="setEdge" scoped="" ref="0xb687e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0xb6870e98" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0xb6870e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb686f0c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb686f1a0"/>
        <function-ref name="captured" scoped="" ref="0xb686f280"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686f360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686f440"/>
        <function-ref name="setEdge" scoped="" ref="0xb686f520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0xb68798c8" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0xb68798c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6879aa0"/>
        <function-ref name="getControl" scoped="" ref="0xb6879b80"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6879c60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6879d40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6879e20"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6879f00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6878010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68780f0"/>
        <function-ref name="setControl" scoped="" ref="0xb68781d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0xb6883a38" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0xb6883a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6883c10"/>
        <function-ref name="setEvent" scoped="" ref="0xb6883cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6883dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6883eb0"/>
        <function-ref name="fired" scoped="" ref="0xb6882010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0xb688ae98" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0xb688ae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb688e0c0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb688e1a0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb688e280"/>
        <function-ref name="get" scoped="" ref="0xb688e360"/>
        <function-ref name="disableEvents" scoped="" ref="0xb688e440"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb688e520"/>
        <function-ref name="getMode" scoped="" ref="0xb688e600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb688e6e0"/>
        <function-ref name="overflow" scoped="" ref="0xb688e7c0"/>
        <function-ref name="setMode" scoped="" ref="0xb688e8a0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb688e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0xb6873278" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0xb6873278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6873450"/>
        <function-ref name="setEvent" scoped="" ref="0xb6873530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6873610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68736f0"/>
        <function-ref name="fired" scoped="" ref="0xb68737d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0xb688d708" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0xb688d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb688d8e0"/>
        <function-ref name="getControl" scoped="" ref="0xb688d9c0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb688daa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb688db80"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb688dc60"/>
        <function-ref name="disableEvents" scoped="" ref="0xb688dd40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb688de20"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb688df00"/>
        <function-ref name="setControl" scoped="" ref="0xb6888010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0xb6877b80" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0xb6877b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6877d58"/>
        <function-ref name="getControl" scoped="" ref="0xb6877e38"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6877f18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6876010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68760f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68761d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68762b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6876390"/>
        <function-ref name="setControl" scoped="" ref="0xb6876470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0xb687b8b0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0xb687b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb687ba88"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb687bb68"/>
        <function-ref name="captured" scoped="" ref="0xb687bc48"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb687bd28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb687be08"/>
        <function-ref name="setEdge" scoped="" ref="0xb687bee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0xb6871cd8" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0xb6871cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6871eb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6870010"/>
        <function-ref name="captured" scoped="" ref="0xb68700f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68701d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68702b0"/>
        <function-ref name="setEdge" scoped="" ref="0xb6870390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0xb68809e0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0xb68809e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6880bb8"/>
        <function-ref name="setEvent" scoped="" ref="0xb6880c98"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6880d78"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6880e58"/>
        <function-ref name="fired" scoped="" ref="0xb6883010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0xb6874278" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0xb6874278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6874450"/>
        <function-ref name="setEvent" scoped="" ref="0xb6874530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6874610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68746f0"/>
        <function-ref name="fired" scoped="" ref="0xb68747d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0xb686f788" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0xb686f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb686f960"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb686fa40"/>
        <function-ref name="captured" scoped="" ref="0xb686fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686fc00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686fce0"/>
        <function-ref name="setEdge" scoped="" ref="0xb686fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0xb6878468" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0xb6878468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6878640"/>
        <function-ref name="getControl" scoped="" ref="0xb6878720"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6878800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68788e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68789c0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6878aa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6878b80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6878c60"/>
        <function-ref name="setControl" scoped="" ref="0xb6878d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0xb687e320" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0xb687e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb687e4f8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb687e5d8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb687e6b8"/>
        <function-ref name="get" scoped="" ref="0xb687e798"/>
        <function-ref name="disableEvents" scoped="" ref="0xb687e878"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb687e958"/>
        <function-ref name="getMode" scoped="" ref="0xb687ea38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb687eb18"/>
        <function-ref name="overflow" scoped="" ref="0xb687ebf8"/>
        <function-ref name="setMode" scoped="" ref="0xb687ecd8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb687edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0xb6873a38" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0xb6873a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6873c10"/>
        <function-ref name="setEvent" scoped="" ref="0xb6873cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6873dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6873eb0"/>
        <function-ref name="fired" scoped="" ref="0xb6872010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0xb6872b38" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0xb6872b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6872d10"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6872df0"/>
        <function-ref name="captured" scoped="" ref="0xb6872ed0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6871010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68710f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68711d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0xb6872278" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0xb6872278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6872550"/>
        <function-ref name="setEvent" scoped="" ref="0xb6872630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6872710"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68727f0"/>
        <function-ref name="fired" scoped="" ref="0xb68728d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0xb6875278" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0xb6875278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6875450"/>
        <function-ref name="setEvent" scoped="" ref="0xb6875530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6875610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68756f0"/>
        <function-ref name="fired" scoped="" ref="0xb68757d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0xb6876708" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0xb6876708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68768e0"/>
        <function-ref name="getControl" scoped="" ref="0xb68769c0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6876aa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6876b80"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6876c60"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6876d40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6876e20"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6876f00"/>
        <function-ref name="setControl" scoped="" ref="0xb6875010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0xb684e3a8" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0xb684e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684e580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0xb684e050" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb684e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684e228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0xb684e700" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0xb684e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684e8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0xb686bcc0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb686bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb686bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb686b010" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb686b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb686b1e8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb686b2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb686b3a8"/>
        <function-ref name="get" scoped="" ref="0xb686b488"/>
        <function-ref name="disableEvents" scoped="" ref="0xb686b568"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb686b648"/>
        <function-ref name="getMode" scoped="" ref="0xb686b728"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb686b808"/>
        <function-ref name="overflow" scoped="" ref="0xb686b8e8"/>
        <function-ref name="setMode" scoped="" ref="0xb686b9c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb686baa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0xb684ae28" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0xb684ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6849050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0xb684aad0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb684aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684aca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0xb68491d0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0xb68491d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68493a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0xb684a768" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb684a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb684a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb684b9f8" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb684b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb684bbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb684bcb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb684bd90"/>
        <function-ref name="get" scoped="" ref="0xb684be70"/>
        <function-ref name="disableEvents" scoped="" ref="0xb684a010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb684a0f0"/>
        <function-ref name="getMode" scoped="" ref="0xb684a1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb684a2b0"/>
        <function-ref name="overflow" scoped="" ref="0xb684a390"/>
        <function-ref name="setMode" scoped="" ref="0xb684a470"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb684a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb681e190" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb681e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb681e368"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb681e448"/>
        <function-ref name="captured" scoped="" ref="0xb681e528"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb681e608"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb681e6e8"/>
        <function-ref name="setEdge" scoped="" ref="0xb681e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6847010" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6847010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb68471e8"/>
        <function-ref name="getControl" scoped="" ref="0xb68472c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68473a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6847488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6847568"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6847648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6847728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6847808"/>
        <function-ref name="setControl" scoped="" ref="0xb68478e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb681d5f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb681d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb681d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6847a68" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6847a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6847c40"/>
        <function-ref name="setEvent" scoped="" ref="0xb6847d20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6847e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6847ee0"/>
        <function-ref name="fired" scoped="" ref="0xb681e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb681e948" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb681e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb681eb20"/>
        <function-ref name="setClockSource" scoped="" ref="0xb681ec00"/>
        <function-ref name="enableEvents" scoped="" ref="0xb681ece0"/>
        <function-ref name="get" scoped="" ref="0xb681edc0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb681eea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb681d010"/>
        <function-ref name="getMode" scoped="" ref="0xb681d0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb681d1d0"/>
        <function-ref name="overflow" scoped="" ref="0xb681d2b0"/>
        <function-ref name="setMode" scoped="" ref="0xb681d390"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb681d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb681a010" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb681a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb681a1e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb681a2c8"/>
        <function-ref name="captured" scoped="" ref="0xb681a3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb681a488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb681a568"/>
        <function-ref name="setEdge" scoped="" ref="0xb681a648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb681ce78" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb681ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb681b070"/>
        <function-ref name="getControl" scoped="" ref="0xb681b150"/>
        <function-ref name="enableEvents" scoped="" ref="0xb681b230"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb681b310"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb681b3f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb681b4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb681b5b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb681b690"/>
        <function-ref name="setControl" scoped="" ref="0xb681b770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6819430" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6819430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6819608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb681b8f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb681b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb681bac8"/>
        <function-ref name="setEvent" scoped="" ref="0xb681bba8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb681bc88"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb681bd68"/>
        <function-ref name="fired" scoped="" ref="0xb681be48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb681a7c8" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb681a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb681a9a0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb681aa80"/>
        <function-ref name="enableEvents" scoped="" ref="0xb681ab60"/>
        <function-ref name="get" scoped="" ref="0xb681ac40"/>
        <function-ref name="disableEvents" scoped="" ref="0xb681ad20"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb681ae00"/>
        <function-ref name="getMode" scoped="" ref="0xb681aee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6819010"/>
        <function-ref name="overflow" scoped="" ref="0xb68190f0"/>
        <function-ref name="setMode" scoped="" ref="0xb68191d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6816e88" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6816e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6815070"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6815150"/>
        <function-ref name="captured" scoped="" ref="0xb6815230"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6815310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68153f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6817cb8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6817cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6817e90"/>
        <function-ref name="getControl" scoped="" ref="0xb6816010"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68160f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb68161d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68162b0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6816390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6816470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6816550"/>
        <function-ref name="setControl" scoped="" ref="0xb6816630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6814278" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6814278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6814450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68167b0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb68167b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6816988"/>
        <function-ref name="setEvent" scoped="" ref="0xb6816a68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6816b48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6816c28"/>
        <function-ref name="fired" scoped="" ref="0xb6816d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6815650" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6815650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6815828"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6815908"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68159e8"/>
        <function-ref name="get" scoped="" ref="0xb6815ac8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6815ba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6815c88"/>
        <function-ref name="getMode" scoped="" ref="0xb6815d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6815e48"/>
        <function-ref name="overflow" scoped="" ref="0xb6815f28"/>
        <function-ref name="setMode" scoped="" ref="0xb6814018"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb68140f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6812cc8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6812cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6812ea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6811010"/>
        <function-ref name="captured" scoped="" ref="0xb68110f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68111d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68112b0"/>
        <function-ref name="setEdge" scoped="" ref="0xb6811390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb6813b00" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb6813b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6813cd8"/>
        <function-ref name="getControl" scoped="" ref="0xb6813db8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6813e98"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6812010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb68120f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68121d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68122b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6812390"/>
        <function-ref name="setControl" scoped="" ref="0xb6812470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6810190" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6810190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6810368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68125f0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb68125f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb68127c8"/>
        <function-ref name="setEvent" scoped="" ref="0xb68128a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb6812988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb6812a68"/>
        <function-ref name="fired" scoped="" ref="0xb6812b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6811510" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6811510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68116e8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb68117c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68118a8"/>
        <function-ref name="get" scoped="" ref="0xb6811988"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6811a68"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6811b48"/>
        <function-ref name="getMode" scoped="" ref="0xb6811c28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6811d08"/>
        <function-ref name="overflow" scoped="" ref="0xb6811de8"/>
        <function-ref name="setMode" scoped="" ref="0xb6811ec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6810010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb680ebe8" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb680ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb680edc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb680eea0"/>
        <function-ref name="captured" scoped="" ref="0xb680d010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb680d0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb680d1d0"/>
        <function-ref name="setEdge" scoped="" ref="0xb680d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb680fa20" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb680fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb680fbf8"/>
        <function-ref name="getControl" scoped="" ref="0xb680fcd8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb680fdb8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb680fe98"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb680e010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb680e0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb680e1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb680e2b0"/>
        <function-ref name="setControl" scoped="" ref="0xb680e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb680c080" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb680c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb680c258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb680e510" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb680e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb680e6e8"/>
        <function-ref name="setEvent" scoped="" ref="0xb680e7c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb680e8a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb680e988"/>
        <function-ref name="fired" scoped="" ref="0xb680ea68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb680d430" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb680d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb680d608"/>
        <function-ref name="setClockSource" scoped="" ref="0xb680d6e8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb680d7c8"/>
        <function-ref name="get" scoped="" ref="0xb680d8a8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb680d988"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb680da68"/>
        <function-ref name="getMode" scoped="" ref="0xb680db48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb680dc28"/>
        <function-ref name="overflow" scoped="" ref="0xb680dd08"/>
        <function-ref name="setMode" scoped="" ref="0xb680dde8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb680dec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6809b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6809b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6809ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6809dc0"/>
        <function-ref name="captured" scoped="" ref="0xb6809ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6808010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68080f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68081d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb680b8f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb680b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb680bad0"/>
        <function-ref name="getControl" scoped="" ref="0xb680bbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb680bc90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb680bd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb680be50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6809010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68090f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68091d0"/>
        <function-ref name="setControl" scoped="" ref="0xb68092b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6807010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6807010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68071e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6809430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6809430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6809608"/>
        <function-ref name="setEvent" scoped="" ref="0xb68096e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68097c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68098a8"/>
        <function-ref name="fired" scoped="" ref="0xb6809988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6808350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6808350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6808528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6808608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68086e8"/>
        <function-ref name="get" scoped="" ref="0xb68087c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68088a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6808988"/>
        <function-ref name="getMode" scoped="" ref="0xb6808a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6808b48"/>
        <function-ref name="overflow" scoped="" ref="0xb6808c28"/>
        <function-ref name="setMode" scoped="" ref="0xb6808d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6808de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6805b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6805b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6805ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6805dc0"/>
        <function-ref name="captured" scoped="" ref="0xb6805ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6804010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68040f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68041d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb68068f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb68068f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6806ad0"/>
        <function-ref name="getControl" scoped="" ref="0xb6806bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6806c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6806d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6806e50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6805010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68050f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68051d0"/>
        <function-ref name="setControl" scoped="" ref="0xb68052b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb6803010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb6803010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb68031e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6805430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6805430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6805608"/>
        <function-ref name="setEvent" scoped="" ref="0xb68056e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68057c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68058a8"/>
        <function-ref name="fired" scoped="" ref="0xb6805988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6804350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6804350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6804528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6804608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68046e8"/>
        <function-ref name="get" scoped="" ref="0xb68047c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68048a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6804988"/>
        <function-ref name="getMode" scoped="" ref="0xb6804a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6804b48"/>
        <function-ref name="overflow" scoped="" ref="0xb6804c28"/>
        <function-ref name="setMode" scoped="" ref="0xb6804d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6804de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6801b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb6801b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6801ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb6801dc0"/>
        <function-ref name="captured" scoped="" ref="0xb6801ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6800010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68000f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb68001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb68028f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb68028f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6802ad0"/>
        <function-ref name="getControl" scoped="" ref="0xb6802bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6802c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb6802d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6802e50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6801010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb68010f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb68011d0"/>
        <function-ref name="setControl" scoped="" ref="0xb68012b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb67ff010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb67ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67ff1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6801430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb6801430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6801608"/>
        <function-ref name="setEvent" scoped="" ref="0xb68016e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb68017c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb68018a8"/>
        <function-ref name="fired" scoped="" ref="0xb6801988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6800350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6800350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6800528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6800608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb68006e8"/>
        <function-ref name="get" scoped="" ref="0xb68007c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb68008a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6800988"/>
        <function-ref name="getMode" scoped="" ref="0xb6800a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6800b48"/>
        <function-ref name="overflow" scoped="" ref="0xb6800c28"/>
        <function-ref name="setMode" scoped="" ref="0xb6800d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6800de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb67fdb08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb67fdb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb67fdce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb67fddc0"/>
        <function-ref name="captured" scoped="" ref="0xb67fdea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb67fb010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb67fb0f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb67fb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb67fe8f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb67fe8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb67fead0"/>
        <function-ref name="getControl" scoped="" ref="0xb67febb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67fec90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb67fed70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb67fee50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67fd010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb67fd0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb67fd1d0"/>
        <function-ref name="setControl" scoped="" ref="0xb67fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb67fa010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb67fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67fa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb67fd430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb67fd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb67fd608"/>
        <function-ref name="setEvent" scoped="" ref="0xb67fd6e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb67fd7c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb67fd8a8"/>
        <function-ref name="fired" scoped="" ref="0xb67fd988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb67fb350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb67fb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67fb528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb67fb608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67fb6e8"/>
        <function-ref name="get" scoped="" ref="0xb67fb7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67fb8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb67fb988"/>
        <function-ref name="getMode" scoped="" ref="0xb67fba68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb67fbb48"/>
        <function-ref name="overflow" scoped="" ref="0xb67fbc28"/>
        <function-ref name="setMode" scoped="" ref="0xb67fbd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb67fbde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb67f8b08" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb67f8b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb67f8ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb67f8dc0"/>
        <function-ref name="captured" scoped="" ref="0xb67f8ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb67f7010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb67f70f0"/>
        <function-ref name="setEdge" scoped="" ref="0xb67f71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0xb67f98f8" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0xb67f98f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb67f9ad0"/>
        <function-ref name="getControl" scoped="" ref="0xb67f9bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67f9c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb67f9d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb67f9e50"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67f8010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb67f80f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb67f81d0"/>
        <function-ref name="setControl" scoped="" ref="0xb67f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0xb67f6010" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0xb67f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67f61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb67f8430" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0xb67f8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb67f8608"/>
        <function-ref name="setEvent" scoped="" ref="0xb67f86e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb67f87c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb67f88a8"/>
        <function-ref name="fired" scoped="" ref="0xb67f8988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb67f7350" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb67f7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67f7528"/>
        <function-ref name="setClockSource" scoped="" ref="0xb67f7608"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67f76e8"/>
        <function-ref name="get" scoped="" ref="0xb67f77c8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67f78a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb67f7988"/>
        <function-ref name="getMode" scoped="" ref="0xb67f7a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb67f7b48"/>
        <function-ref name="overflow" scoped="" ref="0xb67f7c28"/>
        <function-ref name="setMode" scoped="" ref="0xb67f7d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb67f7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0xb67f2300" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0xb67f2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67f24d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0xb67f5558" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0xb67f5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67f5730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0xb67f59e0" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0xb67f59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67f5bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0xb67f5e68" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0xb67f5e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb67f2050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb695b600" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0xb695b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb695b7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb6bea948" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0xb6bea948"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb6beab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb695c680" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0xb695c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb695c858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0xb68bd818" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0xb68bd818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0xb67d50f0"/>
        <function-ref name="initTimerB" scoped="" ref="0xb68bdad0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0xb68bdbb0"/>
        <function-ref name="initTimerA" scoped="" ref="0xb68bdc90"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0xb68bd9f0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0xb68bdd70"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0xb68bde50"/>
        <function-ref name="initClocks" scoped="" ref="0xb67d5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb68bb648" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0xb68bb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68bb820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb68d5840" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0xb68d5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb68d5a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb68bb240" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0xb68bb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68bb418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb68d5bd8" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0xb68d5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68d5db0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb68d5e90"/>
        <function-ref name="runNextTask" scoped="" ref="0xb68bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb6bec2b8" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0xb6bec2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6bec490"/>
        <function-ref name="runTask" scoped="" ref="0xb6bec570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb6beba78" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0xb6beba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6bebc50"/>
        <function-ref name="taskLoop" scoped="" ref="0xb6bebd30"/>
        <function-ref name="runNextTask" scoped="" ref="0xb6bebe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb6970238" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0xb6970238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6970410"/>
        <function-ref name="runTask" scoped="" ref="0xb69704f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb6970e90" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0xb6970e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb696f080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb69719f0" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0xb69719f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6971bc8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb6971ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb6971d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb68cc100" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb68cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb68cc728"/>
        <function-ref name="readDone" scoped="" ref="0xb68cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb68ccd08" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb68ccd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb6367ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0xb6367350"/>
        <function-ref name="read" scoped="" ref="0xb6367830"/>
        <function-ref name="readDone" scoped="" ref="0xb6362048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0xb68d6d20" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="DemoAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0xb68d6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb68d6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb57c9ae8" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb57c9ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb57c71e0"/>
        <function-ref name="readDone" scoped="" ref="0xb57c7438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb57c7800" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb57c7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb57c7e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0xb67a8de0" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0xb67a8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb67a5010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb67a50f0"/>
        <function-ref name="request" scoped="" ref="0xb67a51d0"/>
        <function-ref name="granted" scoped="" ref="0xb67a52b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb67a5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb67ab300" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb67ab300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb67ab928"/>
        <function-ref name="readDone" scoped="" ref="0xb67abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0xb67a67f0" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0xb67a67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb67a6e38"/>
        <function-ref name="readDone" scoped="" ref="0xb67a90d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0xb67a2808" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0xb67a2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb67a29e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb67a2ac0"/>
        <function-ref name="request" scoped="" ref="0xb67a2ba0"/>
        <function-ref name="granted" scoped="" ref="0xb67a2c80"/>
        <function-ref name="isOwner" scoped="" ref="0xb67a2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb67a5ab8" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0xb67a5ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb67a1120"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0xb6795e08" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb6795e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67a0010"/>
        <function-ref name="configureSingle" scoped="" ref="0xb67a00f0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb67a01d0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb67a02b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb67a0390"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb67a0470"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb67a0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0xb67a8300" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0xb67a8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb67a84d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb67a85b8"/>
        <function-ref name="request" scoped="" ref="0xb67a8698"/>
        <function-ref name="granted" scoped="" ref="0xb67a8778"/>
        <function-ref name="isOwner" scoped="" ref="0xb67a8858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0xb6785828" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0xb6785828"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6785a00"/>
        <function-ref name="runTask" scoped="" ref="0xb6785ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb57c0310" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb57c0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb57c04e8"/>
        <function-ref name="configure" scoped="" ref="0xb57c05c8"/>
        <function-ref name="dataReady" scoped="" ref="0xb57c06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb57c1a50" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb57c1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb57c1c28"/>
        <function-ref name="configureSingle" scoped="" ref="0xb57c1d08"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb57c1de8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb57c1ec8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb57c0010"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb57c00f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb57c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb57c07e8" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb57c07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb57c09c0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb57c0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb57c0cd0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb57c0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb57bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb57c13b8" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb57c13b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb57c1590"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb57c1670"/>
        <function-ref name="request" scoped="" ref="0xb57c1750"/>
        <function-ref name="granted" scoped="" ref="0xb57c1830"/>
        <function-ref name="isOwner" scoped="" ref="0xb57c1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0xb6761dc0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0xb6761dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb6760010"/>
        <function-ref name="configure" scoped="" ref="0xb67600f0"/>
        <function-ref name="dataReady" scoped="" ref="0xb67601d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0xb675e100" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0xb675e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb675e2d8"/>
        <function-ref name="stop" scoped="" ref="0xb675e3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0xb6760728" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb6760728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb6760900"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb67609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0xb6761100" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb6761100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67612d8"/>
        <function-ref name="configureSingle" scoped="" ref="0xb67613b8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb6761498"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb6761578"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb6761658"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb6761738"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb6761818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6764580" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6764580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6764758"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6764838"/>
        <function-ref name="request" scoped="" ref="0xb6764918"/>
        <function-ref name="granted" scoped="" ref="0xb67649f8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6764ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0xb67591f8" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0xb67591f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb67593d0"/>
        <function-ref name="configure" scoped="" ref="0xb67594b0"/>
        <function-ref name="dataReady" scoped="" ref="0xb6759590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0xb674d538" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0xb674d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0xb674d710"/>
        <function-ref name="getMCtl" scoped="" ref="0xb674d7f0"/>
        <function-ref name="resetIFGs" scoped="" ref="0xb674d8d0"/>
        <function-ref name="isBusy" scoped="" ref="0xb674d9b0"/>
        <function-ref name="conversionDone" scoped="" ref="0xb674da90"/>
        <function-ref name="getCtl1" scoped="" ref="0xb674db70"/>
        <function-ref name="setMCtl" scoped="" ref="0xb674dc50"/>
        <function-ref name="startConversion" scoped="" ref="0xb674dd30"/>
        <function-ref name="setCtl0" scoped="" ref="0xb674de10"/>
        <function-ref name="getMem" scoped="" ref="0xb674def0"/>
        <function-ref name="setIEFlags" scoped="" ref="0xb6756010"/>
        <function-ref name="getIEFlags" scoped="" ref="0xb67560f0"/>
        <function-ref name="stopConversion" scoped="" ref="0xb67561d0"/>
        <function-ref name="enableConversion" scoped="" ref="0xb6756330"/>
        <function-ref name="setCtl1" scoped="" ref="0xb6756410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0xb6740748" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0xb6740748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6740920"/>
        <function-ref name="isInput" scoped="" ref="0xb6740a00"/>
        <function-ref name="setResistor" scoped="" ref="0xb6740ae0"/>
        <function-ref name="toggle" scoped="" ref="0xb6740bc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6740ca0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6740d80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6740e60"/>
        <function-ref name="get" scoped="" ref="0xb673f010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb673f0f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb673f1d0"/>
        <function-ref name="set" scoped="" ref="0xb673f2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb673f390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb673f470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb673f5d0"/>
        <function-ref name="clr" scoped="" ref="0xb673f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0xb674b258" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0xb674b258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb674b430"/>
        <function-ref name="setEvent" scoped="" ref="0xb674b510"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb674b5f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb674b6d0"/>
        <function-ref name="fired" scoped="" ref="0xb674b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0xb6755368" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0xb6755368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6755540"/>
        <function-ref name="getControl" scoped="" ref="0xb6755620"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6755700"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb67557e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb67558c0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb67559a0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6755a80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6755b60"/>
        <function-ref name="setControl" scoped="" ref="0xb6755c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0xb6758310" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0xb6758310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb67584e8"/>
        <function-ref name="stop" scoped="" ref="0xb67585c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0xb67493c8" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0xb67493c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb67495a0"/>
        <function-ref name="isInput" scoped="" ref="0xb6749680"/>
        <function-ref name="setResistor" scoped="" ref="0xb6749760"/>
        <function-ref name="toggle" scoped="" ref="0xb6749840"/>
        <function-ref name="isOutput" scoped="" ref="0xb6749920"/>
        <function-ref name="getResistor" scoped="" ref="0xb6749a00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6749ae0"/>
        <function-ref name="get" scoped="" ref="0xb6749bc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6749ca0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6749d80"/>
        <function-ref name="set" scoped="" ref="0xb6749e60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6741010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb67410f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6741250"/>
        <function-ref name="clr" scoped="" ref="0xb6741330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0xb6759ae8" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0xb6759ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb6759cc0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb6759da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0xb673dc88" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0xb673dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb673de60"/>
        <function-ref name="isInput" scoped="" ref="0xb673c010"/>
        <function-ref name="setResistor" scoped="" ref="0xb673c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb673c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb673c2b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb673c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb673c470"/>
        <function-ref name="get" scoped="" ref="0xb673c550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb673c630"/>
        <function-ref name="getRaw" scoped="" ref="0xb673c710"/>
        <function-ref name="set" scoped="" ref="0xb673c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb673c8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb673c9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb673cb10"/>
        <function-ref name="clr" scoped="" ref="0xb673cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0xb67420d8" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0xb67420d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6742330"/>
        <function-ref name="isInput" scoped="" ref="0xb6742410"/>
        <function-ref name="setResistor" scoped="" ref="0xb67424f0"/>
        <function-ref name="toggle" scoped="" ref="0xb67425d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb67426b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6742790"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6742870"/>
        <function-ref name="get" scoped="" ref="0xb6742950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6742a30"/>
        <function-ref name="getRaw" scoped="" ref="0xb6742b10"/>
        <function-ref name="set" scoped="" ref="0xb6742bf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6742cd0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6742db0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6742f10"/>
        <function-ref name="clr" scoped="" ref="0xb674a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb675ec68" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb675ec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb675ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0xb673f908" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0xb673f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb673fae0"/>
        <function-ref name="isInput" scoped="" ref="0xb673fbc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb673fca0"/>
        <function-ref name="toggle" scoped="" ref="0xb673fd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb673fe60"/>
        <function-ref name="getResistor" scoped="" ref="0xb673e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb673e0f0"/>
        <function-ref name="get" scoped="" ref="0xb673e1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb673e2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb673e390"/>
        <function-ref name="set" scoped="" ref="0xb673e470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb673e550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb673e630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb673e790"/>
        <function-ref name="clr" scoped="" ref="0xb673e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0xb6756620" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0xb6756620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67567f8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb67568d8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb67569b8"/>
        <function-ref name="get" scoped="" ref="0xb6756a98"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6756b78"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6756c58"/>
        <function-ref name="getMode" scoped="" ref="0xb6756d38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6756e18"/>
        <function-ref name="overflow" scoped="" ref="0xb6756ef8"/>
        <function-ref name="setMode" scoped="" ref="0xb6755010"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb67550f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0xb6754818" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0xb6754818"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb67549f0"/>
        <function-ref name="userId" scoped="" ref="0xb6754ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0xb6755eb8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0xb6755eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb674c0c0"/>
        <function-ref name="getControl" scoped="" ref="0xb674c1a0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb674c280"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb674c360"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb674c440"/>
        <function-ref name="disableEvents" scoped="" ref="0xb674c520"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb674c600"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb674c6e0"/>
        <function-ref name="setControl" scoped="" ref="0xb674c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0xb675a4e0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb675a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb675a6b8"/>
        <function-ref name="configureSingle" scoped="" ref="0xb675a798"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb675a878"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb675a958"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb675aa38"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb675ab18"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb675abf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0xb6741588" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0xb6741588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6741760"/>
        <function-ref name="isInput" scoped="" ref="0xb6741840"/>
        <function-ref name="setResistor" scoped="" ref="0xb6741920"/>
        <function-ref name="toggle" scoped="" ref="0xb6741a00"/>
        <function-ref name="isOutput" scoped="" ref="0xb6741ae0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6741bc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6741ca0"/>
        <function-ref name="get" scoped="" ref="0xb6741d80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6741e60"/>
        <function-ref name="getRaw" scoped="" ref="0xb6740010"/>
        <function-ref name="set" scoped="" ref="0xb67400f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb67401d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb67402b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6740410"/>
        <function-ref name="clr" scoped="" ref="0xb67404f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0xb674ca08" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0xb674ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb674cbe0"/>
        <function-ref name="setEvent" scoped="" ref="0xb674ccc0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb674cda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb674ce80"/>
        <function-ref name="fired" scoped="" ref="0xb674b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0xb674a268" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0xb674a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb674a440"/>
        <function-ref name="isInput" scoped="" ref="0xb674a520"/>
        <function-ref name="setResistor" scoped="" ref="0xb674a600"/>
        <function-ref name="toggle" scoped="" ref="0xb674a6e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb674a7c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb674a8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb674a980"/>
        <function-ref name="get" scoped="" ref="0xb674aa60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb674ab40"/>
        <function-ref name="getRaw" scoped="" ref="0xb674ac20"/>
        <function-ref name="set" scoped="" ref="0xb674ad00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb674ade0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb674aec0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6749090"/>
        <function-ref name="clr" scoped="" ref="0xb6749170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0xb673eac8" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0xb673eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb673eca0"/>
        <function-ref name="isInput" scoped="" ref="0xb673ed80"/>
        <function-ref name="setResistor" scoped="" ref="0xb673ee60"/>
        <function-ref name="toggle" scoped="" ref="0xb673d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb673d0f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb673d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb673d2b0"/>
        <function-ref name="get" scoped="" ref="0xb673d390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb673d470"/>
        <function-ref name="getRaw" scoped="" ref="0xb673d550"/>
        <function-ref name="set" scoped="" ref="0xb673d630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb673d710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb673d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb673d950"/>
        <function-ref name="clr" scoped="" ref="0xb673da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0xb66cc0b8" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0xb66cc0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0xb66cc290"/>
        <function-ref name="getMCtl" scoped="" ref="0xb66cc370"/>
        <function-ref name="resetIFGs" scoped="" ref="0xb66cc450"/>
        <function-ref name="isBusy" scoped="" ref="0xb66cc530"/>
        <function-ref name="conversionDone" scoped="" ref="0xb66cc610"/>
        <function-ref name="getCtl1" scoped="" ref="0xb66cc6f0"/>
        <function-ref name="setMCtl" scoped="" ref="0xb66cc7d0"/>
        <function-ref name="startConversion" scoped="" ref="0xb66cc8b0"/>
        <function-ref name="setCtl0" scoped="" ref="0xb66cc990"/>
        <function-ref name="getMem" scoped="" ref="0xb66cca70"/>
        <function-ref name="setIEFlags" scoped="" ref="0xb66ccb50"/>
        <function-ref name="getIEFlags" scoped="" ref="0xb66ccc30"/>
        <function-ref name="stopConversion" scoped="" ref="0xb66ccd10"/>
        <function-ref name="enableConversion" scoped="" ref="0xb66cce70"/>
        <function-ref name="setCtl1" scoped="" ref="0xb66cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb66768b0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb66768b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6676a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6676b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6675208" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6675208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb66753f0"/>
        <function-ref name="configure" scoped="" ref="0xb66754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6676170" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6676170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6676358"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6676438"/>
        <function-ref name="request" scoped="" ref="0xb6676518"/>
        <function-ref name="granted" scoped="" ref="0xb66765f8"/>
        <function-ref name="isOwner" scoped="" ref="0xb66766d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6676cb8" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6676cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6676e90"/>
        <function-ref name="userId" scoped="" ref="0xb6675010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb57accd8" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb57accd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb57aceb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0xb57a9030" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0xb57a9030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb57a9208"/>
        <function-ref name="isEmpty" scoped="" ref="0xb57a92e8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb57a93c8"/>
        <function-ref name="dequeue" scoped="" ref="0xb57a94a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb57a8770" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb57a8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb57a8958"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb57a8a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb57a7068" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb57a7068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb57a7250"/>
        <function-ref name="configure" scoped="" ref="0xb57a7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb57a7490" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb57a7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb57a7668"/>
        <function-ref name="isEmpty" scoped="" ref="0xb57a7748"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb57a7828"/>
        <function-ref name="dequeue" scoped="" ref="0xb57a7908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb57a8030" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb57a8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb57a8218"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb57a82f8"/>
        <function-ref name="request" scoped="" ref="0xb57a83d8"/>
        <function-ref name="granted" scoped="" ref="0xb57a84b8"/>
        <function-ref name="isOwner" scoped="" ref="0xb57a8598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb57a8b78" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb57a8b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb57a8d50"/>
        <function-ref name="userId" scoped="" ref="0xb57a8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb57a7a88" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb57a7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb57a7c60"/>
        <function-ref name="runTask" scoped="" ref="0xb57a7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0xb666dd88" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0xb666dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb666c010"/>
        <function-ref name="isInput" scoped="" ref="0xb666c0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb666c1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb666c2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb666c390"/>
        <function-ref name="getResistor" scoped="" ref="0xb666c470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb666c550"/>
        <function-ref name="get" scoped="" ref="0xb666c630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb666c710"/>
        <function-ref name="getRaw" scoped="" ref="0xb666c7f0"/>
        <function-ref name="set" scoped="" ref="0xb666c8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb666c9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb666ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb666cbf0"/>
        <function-ref name="clr" scoped="" ref="0xb666ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0xb6661010" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0xb6661010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66611e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66612c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66613a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6661488"/>
        <function-ref name="isOutput" scoped="" ref="0xb6661568"/>
        <function-ref name="getResistor" scoped="" ref="0xb6661648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6661728"/>
        <function-ref name="get" scoped="" ref="0xb6661808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66618e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66619c8"/>
        <function-ref name="set" scoped="" ref="0xb6661aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6661b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6661c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6661dc8"/>
        <function-ref name="clr" scoped="" ref="0xb6661ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0xb6638158" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0xb6638158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6638330"/>
        <function-ref name="isInput" scoped="" ref="0xb6638410"/>
        <function-ref name="setResistor" scoped="" ref="0xb66384f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66385d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66386b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6638790"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6638870"/>
        <function-ref name="get" scoped="" ref="0xb6638950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6638a30"/>
        <function-ref name="getRaw" scoped="" ref="0xb6638b10"/>
        <function-ref name="set" scoped="" ref="0xb6638bf0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6638cd0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6638db0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6638f10"/>
        <function-ref name="clr" scoped="" ref="0xb6637010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0xb6624e58" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0xb6624e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6623050"/>
        <function-ref name="isInput" scoped="" ref="0xb6623130"/>
        <function-ref name="setResistor" scoped="" ref="0xb6623210"/>
        <function-ref name="toggle" scoped="" ref="0xb66232f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66233d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66234b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6623590"/>
        <function-ref name="get" scoped="" ref="0xb6623670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6623750"/>
        <function-ref name="getRaw" scoped="" ref="0xb6623830"/>
        <function-ref name="set" scoped="" ref="0xb6623910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66239f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6623ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6623c30"/>
        <function-ref name="clr" scoped="" ref="0xb6623d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0xb6637280" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0xb6637280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6637458"/>
        <function-ref name="isInput" scoped="" ref="0xb6637538"/>
        <function-ref name="setResistor" scoped="" ref="0xb6637618"/>
        <function-ref name="toggle" scoped="" ref="0xb66376f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb66377d8"/>
        <function-ref name="getResistor" scoped="" ref="0xb66378b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6637998"/>
        <function-ref name="get" scoped="" ref="0xb6637a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6637b58"/>
        <function-ref name="getRaw" scoped="" ref="0xb6637c38"/>
        <function-ref name="set" scoped="" ref="0xb6637d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6637df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6637ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6636090"/>
        <function-ref name="clr" scoped="" ref="0xb6636170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0xb665f368" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0xb665f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665f540"/>
        <function-ref name="isInput" scoped="" ref="0xb665f620"/>
        <function-ref name="setResistor" scoped="" ref="0xb665f700"/>
        <function-ref name="toggle" scoped="" ref="0xb665f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb665f8c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb665f9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665fa80"/>
        <function-ref name="get" scoped="" ref="0xb665fb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665fc40"/>
        <function-ref name="getRaw" scoped="" ref="0xb665fd20"/>
        <function-ref name="set" scoped="" ref="0xb665fe00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665fee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665e010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665e170"/>
        <function-ref name="clr" scoped="" ref="0xb665e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0xb66535a8" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0xb66535a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6653780"/>
        <function-ref name="isInput" scoped="" ref="0xb6653860"/>
        <function-ref name="setResistor" scoped="" ref="0xb6653940"/>
        <function-ref name="toggle" scoped="" ref="0xb6653a20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6653b00"/>
        <function-ref name="getResistor" scoped="" ref="0xb6653be0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6653cc0"/>
        <function-ref name="get" scoped="" ref="0xb6653da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6653e80"/>
        <function-ref name="getRaw" scoped="" ref="0xb6652010"/>
        <function-ref name="set" scoped="" ref="0xb66520f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66521d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66522b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6652410"/>
        <function-ref name="clr" scoped="" ref="0xb66524f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0xb6648688" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0xb6648688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6648860"/>
        <function-ref name="isInput" scoped="" ref="0xb6648940"/>
        <function-ref name="setResistor" scoped="" ref="0xb6648a20"/>
        <function-ref name="toggle" scoped="" ref="0xb6648b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb6648be0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6648cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6648da0"/>
        <function-ref name="get" scoped="" ref="0xb6648e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6647010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66470f0"/>
        <function-ref name="set" scoped="" ref="0xb66471d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66472b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6647390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66474f0"/>
        <function-ref name="clr" scoped="" ref="0xb66475d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0xb663f4c8" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0xb663f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663f6a0"/>
        <function-ref name="isInput" scoped="" ref="0xb663f780"/>
        <function-ref name="setResistor" scoped="" ref="0xb663f860"/>
        <function-ref name="toggle" scoped="" ref="0xb663f940"/>
        <function-ref name="isOutput" scoped="" ref="0xb663fa20"/>
        <function-ref name="getResistor" scoped="" ref="0xb663fb00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663fbe0"/>
        <function-ref name="get" scoped="" ref="0xb663fcc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663fda0"/>
        <function-ref name="getRaw" scoped="" ref="0xb663fe80"/>
        <function-ref name="set" scoped="" ref="0xb663e010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663e0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663e1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663e330"/>
        <function-ref name="clr" scoped="" ref="0xb663e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0xb6634760" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0xb6634760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6634938"/>
        <function-ref name="isInput" scoped="" ref="0xb6634a18"/>
        <function-ref name="setResistor" scoped="" ref="0xb6634af8"/>
        <function-ref name="toggle" scoped="" ref="0xb6634bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6634cb8"/>
        <function-ref name="getResistor" scoped="" ref="0xb6634d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6634e78"/>
        <function-ref name="get" scoped="" ref="0xb6633010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66330f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66331d0"/>
        <function-ref name="set" scoped="" ref="0xb66332b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6633390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6633470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66335d0"/>
        <function-ref name="clr" scoped="" ref="0xb66336b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0xb662a3d8" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0xb662a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662a5b0"/>
        <function-ref name="isInput" scoped="" ref="0xb662a690"/>
        <function-ref name="setResistor" scoped="" ref="0xb662a770"/>
        <function-ref name="toggle" scoped="" ref="0xb662a850"/>
        <function-ref name="isOutput" scoped="" ref="0xb662a930"/>
        <function-ref name="getResistor" scoped="" ref="0xb662aa10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662aaf0"/>
        <function-ref name="get" scoped="" ref="0xb662abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662acb0"/>
        <function-ref name="getRaw" scoped="" ref="0xb662ad90"/>
        <function-ref name="set" scoped="" ref="0xb662ae70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6629010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66290f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6629250"/>
        <function-ref name="clr" scoped="" ref="0xb6629330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0xb661f3e0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0xb661f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb661f5b8"/>
        <function-ref name="isInput" scoped="" ref="0xb661f698"/>
        <function-ref name="setResistor" scoped="" ref="0xb661f778"/>
        <function-ref name="toggle" scoped="" ref="0xb661f858"/>
        <function-ref name="isOutput" scoped="" ref="0xb661f938"/>
        <function-ref name="getResistor" scoped="" ref="0xb661fa18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb661faf8"/>
        <function-ref name="get" scoped="" ref="0xb661fbd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb661fcb8"/>
        <function-ref name="getRaw" scoped="" ref="0xb661fd98"/>
        <function-ref name="set" scoped="" ref="0xb661fe78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb661e010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb661e0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb661e250"/>
        <function-ref name="clr" scoped="" ref="0xb661e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0xb6669368" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0xb6669368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6669540"/>
        <function-ref name="isInput" scoped="" ref="0xb6669620"/>
        <function-ref name="setResistor" scoped="" ref="0xb6669700"/>
        <function-ref name="toggle" scoped="" ref="0xb66697e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66698c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66699a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6669a80"/>
        <function-ref name="get" scoped="" ref="0xb6669b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6669c40"/>
        <function-ref name="getRaw" scoped="" ref="0xb6669d20"/>
        <function-ref name="set" scoped="" ref="0xb6669e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6669ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6668010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6668170"/>
        <function-ref name="clr" scoped="" ref="0xb6668250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0xb6633920" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0xb6633920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6633af8"/>
        <function-ref name="isInput" scoped="" ref="0xb6633bd8"/>
        <function-ref name="setResistor" scoped="" ref="0xb6633cb8"/>
        <function-ref name="toggle" scoped="" ref="0xb6633d98"/>
        <function-ref name="isOutput" scoped="" ref="0xb6633e78"/>
        <function-ref name="getResistor" scoped="" ref="0xb6632010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66320f0"/>
        <function-ref name="get" scoped="" ref="0xb66321d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66322b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6632390"/>
        <function-ref name="set" scoped="" ref="0xb6632470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6632550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6632630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6632790"/>
        <function-ref name="clr" scoped="" ref="0xb6632870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0xb6667688" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0xb6667688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6667860"/>
        <function-ref name="isInput" scoped="" ref="0xb6667940"/>
        <function-ref name="setResistor" scoped="" ref="0xb6667a20"/>
        <function-ref name="toggle" scoped="" ref="0xb6667b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb6667be0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6667cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6667da0"/>
        <function-ref name="get" scoped="" ref="0xb6667e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6666010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66660f0"/>
        <function-ref name="set" scoped="" ref="0xb66661d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66662b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6666390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66664f0"/>
        <function-ref name="clr" scoped="" ref="0xb66665d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0xb665c848" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0xb665c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665ca20"/>
        <function-ref name="isInput" scoped="" ref="0xb665cb00"/>
        <function-ref name="setResistor" scoped="" ref="0xb665cbe0"/>
        <function-ref name="toggle" scoped="" ref="0xb665ccc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb665cda0"/>
        <function-ref name="getResistor" scoped="" ref="0xb665ce80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665b010"/>
        <function-ref name="get" scoped="" ref="0xb665b0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665b1d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb665b2b0"/>
        <function-ref name="set" scoped="" ref="0xb665b390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665b470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665b550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665b6b0"/>
        <function-ref name="clr" scoped="" ref="0xb665b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0xb6650ae8" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0xb6650ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6650cc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6650da0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6650e80"/>
        <function-ref name="toggle" scoped="" ref="0xb664f010"/>
        <function-ref name="isOutput" scoped="" ref="0xb664f0f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb664f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664f2b0"/>
        <function-ref name="get" scoped="" ref="0xb664f390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664f470"/>
        <function-ref name="getRaw" scoped="" ref="0xb664f550"/>
        <function-ref name="set" scoped="" ref="0xb664f630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664f710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664f950"/>
        <function-ref name="clr" scoped="" ref="0xb664fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0xb6645bc8" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0xb6645bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6645da0"/>
        <function-ref name="isInput" scoped="" ref="0xb6645e80"/>
        <function-ref name="setResistor" scoped="" ref="0xb6644010"/>
        <function-ref name="toggle" scoped="" ref="0xb66440f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66441d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66442b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6644390"/>
        <function-ref name="get" scoped="" ref="0xb6644470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6644550"/>
        <function-ref name="getRaw" scoped="" ref="0xb6644630"/>
        <function-ref name="set" scoped="" ref="0xb6644710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66447f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66448d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6644a30"/>
        <function-ref name="clr" scoped="" ref="0xb6644b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0xb663ca08" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0xb663ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663cbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb663ccc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb663cda0"/>
        <function-ref name="toggle" scoped="" ref="0xb663ce80"/>
        <function-ref name="isOutput" scoped="" ref="0xb663b010"/>
        <function-ref name="getResistor" scoped="" ref="0xb663b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663b1d0"/>
        <function-ref name="get" scoped="" ref="0xb663b2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663b390"/>
        <function-ref name="getRaw" scoped="" ref="0xb663b470"/>
        <function-ref name="set" scoped="" ref="0xb663b550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663b630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663b710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663b870"/>
        <function-ref name="clr" scoped="" ref="0xb663b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0xb666fa08" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0xb666fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb666fbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb666fcc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb666fda0"/>
        <function-ref name="toggle" scoped="" ref="0xb666fe80"/>
        <function-ref name="isOutput" scoped="" ref="0xb666e010"/>
        <function-ref name="getResistor" scoped="" ref="0xb666e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb666e1d0"/>
        <function-ref name="get" scoped="" ref="0xb666e2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb666e390"/>
        <function-ref name="getRaw" scoped="" ref="0xb666e470"/>
        <function-ref name="set" scoped="" ref="0xb666e550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb666e630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb666e710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb666e870"/>
        <function-ref name="clr" scoped="" ref="0xb666e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0xb6664bc8" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0xb6664bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6664e20"/>
        <function-ref name="isInput" scoped="" ref="0xb6664f00"/>
        <function-ref name="setResistor" scoped="" ref="0xb6663010"/>
        <function-ref name="toggle" scoped="" ref="0xb66630f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66631d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66632b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6663390"/>
        <function-ref name="get" scoped="" ref="0xb6663470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6663550"/>
        <function-ref name="getRaw" scoped="" ref="0xb6663630"/>
        <function-ref name="set" scoped="" ref="0xb6663710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66637f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66638d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6663a30"/>
        <function-ref name="clr" scoped="" ref="0xb6663b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0xb6659d88" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0xb6659d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6658010"/>
        <function-ref name="isInput" scoped="" ref="0xb66580f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66581d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66582b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6658390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6658470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6658550"/>
        <function-ref name="get" scoped="" ref="0xb6658630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6658710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66587f0"/>
        <function-ref name="set" scoped="" ref="0xb66588d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66589b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6658a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6658bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6658cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0xb6639010" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0xb6639010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66391e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66392c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66393a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6639488"/>
        <function-ref name="isOutput" scoped="" ref="0xb6639568"/>
        <function-ref name="getResistor" scoped="" ref="0xb6639648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6639728"/>
        <function-ref name="get" scoped="" ref="0xb6639808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66398e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66399c8"/>
        <function-ref name="set" scoped="" ref="0xb6639aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6639b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6639c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6639dc8"/>
        <function-ref name="clr" scoped="" ref="0xb6639ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0xb6627918" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0xb6627918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6627af0"/>
        <function-ref name="isInput" scoped="" ref="0xb6627bd0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6627cb0"/>
        <function-ref name="toggle" scoped="" ref="0xb6627d90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6627e70"/>
        <function-ref name="getResistor" scoped="" ref="0xb6626010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66260f0"/>
        <function-ref name="get" scoped="" ref="0xb66261d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66262b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6626390"/>
        <function-ref name="set" scoped="" ref="0xb6626470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6626550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6626630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6626790"/>
        <function-ref name="clr" scoped="" ref="0xb6626870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0xb6620280" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0xb6620280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6620458"/>
        <function-ref name="isInput" scoped="" ref="0xb6620538"/>
        <function-ref name="setResistor" scoped="" ref="0xb6620618"/>
        <function-ref name="toggle" scoped="" ref="0xb66206f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb66207d8"/>
        <function-ref name="getResistor" scoped="" ref="0xb66208b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6620998"/>
        <function-ref name="get" scoped="" ref="0xb6620a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6620b58"/>
        <function-ref name="getRaw" scoped="" ref="0xb6620c38"/>
        <function-ref name="set" scoped="" ref="0xb6620d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6620df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6620ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb661f090"/>
        <function-ref name="clr" scoped="" ref="0xb661f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0xb662e010" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0xb662e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662e1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb662e2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb662e3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb662e488"/>
        <function-ref name="isOutput" scoped="" ref="0xb662e568"/>
        <function-ref name="getResistor" scoped="" ref="0xb662e648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662e728"/>
        <function-ref name="get" scoped="" ref="0xb662e808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662e8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb662e9c8"/>
        <function-ref name="set" scoped="" ref="0xb662eaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb662eb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb662ec68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb662edc8"/>
        <function-ref name="clr" scoped="" ref="0xb662eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0xb6655178" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0xb6655178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6655450"/>
        <function-ref name="isInput" scoped="" ref="0xb6655530"/>
        <function-ref name="setResistor" scoped="" ref="0xb6655610"/>
        <function-ref name="toggle" scoped="" ref="0xb66556f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66557d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6655990"/>
        <function-ref name="get" scoped="" ref="0xb6655a70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6655b50"/>
        <function-ref name="getRaw" scoped="" ref="0xb6655c30"/>
        <function-ref name="set" scoped="" ref="0xb6655d10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6655df0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6655ed0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6654090"/>
        <function-ref name="clr" scoped="" ref="0xb6654170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0xb664a368" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0xb664a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664a540"/>
        <function-ref name="isInput" scoped="" ref="0xb664a620"/>
        <function-ref name="setResistor" scoped="" ref="0xb664a700"/>
        <function-ref name="toggle" scoped="" ref="0xb664a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb664a8c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb664a9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664aa80"/>
        <function-ref name="get" scoped="" ref="0xb664ab60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664ac40"/>
        <function-ref name="getRaw" scoped="" ref="0xb664ad20"/>
        <function-ref name="set" scoped="" ref="0xb664ae00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664aee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6649010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6649170"/>
        <function-ref name="clr" scoped="" ref="0xb6649250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0xb6641178" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0xb6641178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6641350"/>
        <function-ref name="isInput" scoped="" ref="0xb6641430"/>
        <function-ref name="setResistor" scoped="" ref="0xb6641510"/>
        <function-ref name="toggle" scoped="" ref="0xb66415f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66416d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66417b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6641890"/>
        <function-ref name="get" scoped="" ref="0xb6641970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6641a50"/>
        <function-ref name="getRaw" scoped="" ref="0xb6641b30"/>
        <function-ref name="set" scoped="" ref="0xb6641c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6641cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6641dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6640010"/>
        <function-ref name="clr" scoped="" ref="0xb66400f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0xb6626ad8" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0xb6626ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6626cb0"/>
        <function-ref name="isInput" scoped="" ref="0xb6626d90"/>
        <function-ref name="setResistor" scoped="" ref="0xb6626e70"/>
        <function-ref name="toggle" scoped="" ref="0xb6625010"/>
        <function-ref name="isOutput" scoped="" ref="0xb66250f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66251d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66252b0"/>
        <function-ref name="get" scoped="" ref="0xb6625390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6625470"/>
        <function-ref name="getRaw" scoped="" ref="0xb6625550"/>
        <function-ref name="set" scoped="" ref="0xb6625630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6625710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66257f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6625950"/>
        <function-ref name="clr" scoped="" ref="0xb6625a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0xb6632ad8" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0xb6632ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6632cb0"/>
        <function-ref name="isInput" scoped="" ref="0xb6632d90"/>
        <function-ref name="setResistor" scoped="" ref="0xb6632e70"/>
        <function-ref name="toggle" scoped="" ref="0xb6631010"/>
        <function-ref name="isOutput" scoped="" ref="0xb66310f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66311d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66312b0"/>
        <function-ref name="get" scoped="" ref="0xb6631390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6631470"/>
        <function-ref name="getRaw" scoped="" ref="0xb6631550"/>
        <function-ref name="set" scoped="" ref="0xb6631630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6631710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6631950"/>
        <function-ref name="clr" scoped="" ref="0xb6631a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0xb666b010" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0xb666b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb666b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb666b2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb666b3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb666b488"/>
        <function-ref name="isOutput" scoped="" ref="0xb666b568"/>
        <function-ref name="getResistor" scoped="" ref="0xb666b648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb666b728"/>
        <function-ref name="get" scoped="" ref="0xb666b808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb666b8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb666b9c8"/>
        <function-ref name="set" scoped="" ref="0xb666baa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb666bb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb666bc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb666bdc8"/>
        <function-ref name="clr" scoped="" ref="0xb666bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0xb6660178" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0xb6660178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6660350"/>
        <function-ref name="isInput" scoped="" ref="0xb6660430"/>
        <function-ref name="setResistor" scoped="" ref="0xb6660510"/>
        <function-ref name="toggle" scoped="" ref="0xb66605f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66606d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66607b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6660890"/>
        <function-ref name="get" scoped="" ref="0xb6660970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6660a50"/>
        <function-ref name="getRaw" scoped="" ref="0xb6660b30"/>
        <function-ref name="set" scoped="" ref="0xb6660c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6660cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6660dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665f010"/>
        <function-ref name="clr" scoped="" ref="0xb665f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0xb6644d88" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0xb6644d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6643010"/>
        <function-ref name="isInput" scoped="" ref="0xb66430f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66431d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66432b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6643390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6643470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6643550"/>
        <function-ref name="get" scoped="" ref="0xb6643630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6643710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66437f0"/>
        <function-ref name="set" scoped="" ref="0xb66438d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66439b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6643a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6643bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6643cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0xb665e4c8" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0xb665e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665e6a0"/>
        <function-ref name="isInput" scoped="" ref="0xb665e780"/>
        <function-ref name="setResistor" scoped="" ref="0xb665e860"/>
        <function-ref name="toggle" scoped="" ref="0xb665e940"/>
        <function-ref name="isOutput" scoped="" ref="0xb665ea20"/>
        <function-ref name="getResistor" scoped="" ref="0xb665eb00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665ebe0"/>
        <function-ref name="get" scoped="" ref="0xb665ecc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665eda0"/>
        <function-ref name="getRaw" scoped="" ref="0xb665ee80"/>
        <function-ref name="set" scoped="" ref="0xb665d010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665d0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665d1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665d330"/>
        <function-ref name="clr" scoped="" ref="0xb665d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0xb6652768" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0xb6652768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6652940"/>
        <function-ref name="isInput" scoped="" ref="0xb6652a20"/>
        <function-ref name="setResistor" scoped="" ref="0xb6652b00"/>
        <function-ref name="toggle" scoped="" ref="0xb6652be0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6652cc0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6652da0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6652e80"/>
        <function-ref name="get" scoped="" ref="0xb6651010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66510f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66511d0"/>
        <function-ref name="set" scoped="" ref="0xb66512b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6651390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6651470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66515d0"/>
        <function-ref name="clr" scoped="" ref="0xb66516b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0xb6647848" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0xb6647848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6647a20"/>
        <function-ref name="isInput" scoped="" ref="0xb6647b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb6647be0"/>
        <function-ref name="toggle" scoped="" ref="0xb6647cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6647da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6647e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6646010"/>
        <function-ref name="get" scoped="" ref="0xb66460f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66461d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66462b0"/>
        <function-ref name="set" scoped="" ref="0xb6646390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6646470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6646550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66466b0"/>
        <function-ref name="clr" scoped="" ref="0xb6646790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0xb663e688" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0xb663e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663e860"/>
        <function-ref name="isInput" scoped="" ref="0xb663e940"/>
        <function-ref name="setResistor" scoped="" ref="0xb663ea20"/>
        <function-ref name="toggle" scoped="" ref="0xb663eb00"/>
        <function-ref name="isOutput" scoped="" ref="0xb663ebe0"/>
        <function-ref name="getResistor" scoped="" ref="0xb663ecc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663eda0"/>
        <function-ref name="get" scoped="" ref="0xb663ee80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663d010"/>
        <function-ref name="getRaw" scoped="" ref="0xb663d0f0"/>
        <function-ref name="set" scoped="" ref="0xb663d1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663d2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663d390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663d4f0"/>
        <function-ref name="clr" scoped="" ref="0xb663d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0xb6630e60" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0xb6630e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662f050"/>
        <function-ref name="isInput" scoped="" ref="0xb662f130"/>
        <function-ref name="setResistor" scoped="" ref="0xb662f210"/>
        <function-ref name="toggle" scoped="" ref="0xb662f2f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb662f3d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb662f4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662f590"/>
        <function-ref name="get" scoped="" ref="0xb662f670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662f750"/>
        <function-ref name="getRaw" scoped="" ref="0xb662f830"/>
        <function-ref name="set" scoped="" ref="0xb662f910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb662f9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb662fad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb662fc30"/>
        <function-ref name="clr" scoped="" ref="0xb662fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0xb66736a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0xb66736a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6673878"/>
        <function-ref name="isInput" scoped="" ref="0xb6673958"/>
        <function-ref name="setResistor" scoped="" ref="0xb6673a38"/>
        <function-ref name="toggle" scoped="" ref="0xb6673b18"/>
        <function-ref name="isOutput" scoped="" ref="0xb6673bf8"/>
        <function-ref name="getResistor" scoped="" ref="0xb6673cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6673db8"/>
        <function-ref name="get" scoped="" ref="0xb6673e98"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6670010"/>
        <function-ref name="getRaw" scoped="" ref="0xb66700f0"/>
        <function-ref name="set" scoped="" ref="0xb66701d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66702b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6670390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66704f0"/>
        <function-ref name="clr" scoped="" ref="0xb66705d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0xb6666848" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0xb6666848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6666a20"/>
        <function-ref name="isInput" scoped="" ref="0xb6666b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb6666be0"/>
        <function-ref name="toggle" scoped="" ref="0xb6666cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6666da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6666e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6665010"/>
        <function-ref name="get" scoped="" ref="0xb66650f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66651d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66652b0"/>
        <function-ref name="set" scoped="" ref="0xb6665390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6665470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6665550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66656b0"/>
        <function-ref name="clr" scoped="" ref="0xb6665790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0xb665ba08" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0xb665ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665bbe0"/>
        <function-ref name="isInput" scoped="" ref="0xb665bcc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb665bda0"/>
        <function-ref name="toggle" scoped="" ref="0xb665be80"/>
        <function-ref name="isOutput" scoped="" ref="0xb665a010"/>
        <function-ref name="getResistor" scoped="" ref="0xb665a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665a1d0"/>
        <function-ref name="get" scoped="" ref="0xb665a2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665a390"/>
        <function-ref name="getRaw" scoped="" ref="0xb665a470"/>
        <function-ref name="set" scoped="" ref="0xb665a550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665a630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665a710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665a870"/>
        <function-ref name="clr" scoped="" ref="0xb665a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0xb664fca8" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0xb664fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664fe80"/>
        <function-ref name="isInput" scoped="" ref="0xb664e010"/>
        <function-ref name="setResistor" scoped="" ref="0xb664e0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb664e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb664e2b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb664e390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664e470"/>
        <function-ref name="get" scoped="" ref="0xb664e550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664e630"/>
        <function-ref name="getRaw" scoped="" ref="0xb664e710"/>
        <function-ref name="set" scoped="" ref="0xb664e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664e8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664e9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664eb10"/>
        <function-ref name="clr" scoped="" ref="0xb664ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0xb662c170" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0xb662c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662c348"/>
        <function-ref name="isInput" scoped="" ref="0xb662c428"/>
        <function-ref name="setResistor" scoped="" ref="0xb662c508"/>
        <function-ref name="toggle" scoped="" ref="0xb662c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb662c6c8"/>
        <function-ref name="getResistor" scoped="" ref="0xb662c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662c888"/>
        <function-ref name="get" scoped="" ref="0xb662c968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662ca48"/>
        <function-ref name="getRaw" scoped="" ref="0xb662cb28"/>
        <function-ref name="set" scoped="" ref="0xb662cc08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb662cce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb662cdc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb662cf28"/>
        <function-ref name="clr" scoped="" ref="0xb662b018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0xb6629598" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0xb6629598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6629770"/>
        <function-ref name="isInput" scoped="" ref="0xb6629850"/>
        <function-ref name="setResistor" scoped="" ref="0xb6629930"/>
        <function-ref name="toggle" scoped="" ref="0xb6629a10"/>
        <function-ref name="isOutput" scoped="" ref="0xb6629af0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6629bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6629cb0"/>
        <function-ref name="get" scoped="" ref="0xb6629d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6629e70"/>
        <function-ref name="getRaw" scoped="" ref="0xb6628010"/>
        <function-ref name="set" scoped="" ref="0xb66280f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66281d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66282b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6628410"/>
        <function-ref name="clr" scoped="" ref="0xb66284f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0xb6622010" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0xb6622010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66221e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66222c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66223a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6622488"/>
        <function-ref name="isOutput" scoped="" ref="0xb6622568"/>
        <function-ref name="getResistor" scoped="" ref="0xb6622648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6622728"/>
        <function-ref name="get" scoped="" ref="0xb6622808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66228e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66229c8"/>
        <function-ref name="set" scoped="" ref="0xb6622aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6622b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6622c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6622dc8"/>
        <function-ref name="clr" scoped="" ref="0xb6622ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0xb664c010" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0xb664c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb664c2c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb664c3a8"/>
        <function-ref name="toggle" scoped="" ref="0xb664c488"/>
        <function-ref name="isOutput" scoped="" ref="0xb664c568"/>
        <function-ref name="getResistor" scoped="" ref="0xb664c648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664c728"/>
        <function-ref name="get" scoped="" ref="0xb664c808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664c8e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb664c9c8"/>
        <function-ref name="set" scoped="" ref="0xb664caa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664cb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664cc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664cdc8"/>
        <function-ref name="clr" scoped="" ref="0xb664cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0xb662b288" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0xb662b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb662b460"/>
        <function-ref name="isInput" scoped="" ref="0xb662b540"/>
        <function-ref name="setResistor" scoped="" ref="0xb662b620"/>
        <function-ref name="toggle" scoped="" ref="0xb662b700"/>
        <function-ref name="isOutput" scoped="" ref="0xb662b7e0"/>
        <function-ref name="getResistor" scoped="" ref="0xb662b8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb662b9a0"/>
        <function-ref name="get" scoped="" ref="0xb662ba80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb662bb60"/>
        <function-ref name="getRaw" scoped="" ref="0xb662bc40"/>
        <function-ref name="set" scoped="" ref="0xb662bd20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb662be00"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb662bee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb662a090"/>
        <function-ref name="clr" scoped="" ref="0xb662a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0xb666ebc8" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0xb666ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb666eda0"/>
        <function-ref name="isInput" scoped="" ref="0xb666ee80"/>
        <function-ref name="setResistor" scoped="" ref="0xb666d010"/>
        <function-ref name="toggle" scoped="" ref="0xb666d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb666d1d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb666d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb666d390"/>
        <function-ref name="get" scoped="" ref="0xb666d470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb666d550"/>
        <function-ref name="getRaw" scoped="" ref="0xb666d630"/>
        <function-ref name="set" scoped="" ref="0xb666d710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb666d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb666d8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb666da30"/>
        <function-ref name="clr" scoped="" ref="0xb666db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0xb6663d88" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0xb6663d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6662010"/>
        <function-ref name="isInput" scoped="" ref="0xb66620f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb66621d0"/>
        <function-ref name="toggle" scoped="" ref="0xb66622b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6662390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6662470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6662550"/>
        <function-ref name="get" scoped="" ref="0xb6662630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6662710"/>
        <function-ref name="getRaw" scoped="" ref="0xb66627f0"/>
        <function-ref name="set" scoped="" ref="0xb66628d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66629b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6662a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6662bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6662cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0xb6657010" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0xb6657010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66571e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66572c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66573a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6657488"/>
        <function-ref name="isOutput" scoped="" ref="0xb6657568"/>
        <function-ref name="getResistor" scoped="" ref="0xb6657648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6657728"/>
        <function-ref name="get" scoped="" ref="0xb6657808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66578e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66579c8"/>
        <function-ref name="set" scoped="" ref="0xb6657aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6657b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6657c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6657dc8"/>
        <function-ref name="clr" scoped="" ref="0xb6657ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0xb6631ca0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0xb6631ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6631e78"/>
        <function-ref name="isInput" scoped="" ref="0xb6630010"/>
        <function-ref name="setResistor" scoped="" ref="0xb66300f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66301d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66302b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6630390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6630470"/>
        <function-ref name="get" scoped="" ref="0xb6630550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6630630"/>
        <function-ref name="getRaw" scoped="" ref="0xb6630710"/>
        <function-ref name="set" scoped="" ref="0xb66307f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66308d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66309b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6630b10"/>
        <function-ref name="clr" scoped="" ref="0xb6630bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0xb6625c98" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0xb6625c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6625e70"/>
        <function-ref name="isInput" scoped="" ref="0xb6624010"/>
        <function-ref name="setResistor" scoped="" ref="0xb66240f0"/>
        <function-ref name="toggle" scoped="" ref="0xb66241d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66242b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6624390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6624470"/>
        <function-ref name="get" scoped="" ref="0xb6624550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6624630"/>
        <function-ref name="getRaw" scoped="" ref="0xb6624710"/>
        <function-ref name="set" scoped="" ref="0xb66247f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66248d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66249b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6624b10"/>
        <function-ref name="clr" scoped="" ref="0xb6624bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0xb66543e8" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0xb66543e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66545c0"/>
        <function-ref name="isInput" scoped="" ref="0xb66546a0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6654780"/>
        <function-ref name="toggle" scoped="" ref="0xb6654860"/>
        <function-ref name="isOutput" scoped="" ref="0xb6654940"/>
        <function-ref name="getResistor" scoped="" ref="0xb6654a20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6654b00"/>
        <function-ref name="get" scoped="" ref="0xb6654be0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6654cc0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6654da0"/>
        <function-ref name="set" scoped="" ref="0xb6654e80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6653010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66530f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6653250"/>
        <function-ref name="clr" scoped="" ref="0xb6653330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0xb66494c8" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0xb66494c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66496a0"/>
        <function-ref name="isInput" scoped="" ref="0xb6649780"/>
        <function-ref name="setResistor" scoped="" ref="0xb6649860"/>
        <function-ref name="toggle" scoped="" ref="0xb6649940"/>
        <function-ref name="isOutput" scoped="" ref="0xb6649a20"/>
        <function-ref name="getResistor" scoped="" ref="0xb6649b00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6649be0"/>
        <function-ref name="get" scoped="" ref="0xb6649cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6649da0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6649e80"/>
        <function-ref name="set" scoped="" ref="0xb6648010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66480f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66481d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6648330"/>
        <function-ref name="clr" scoped="" ref="0xb6648410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0xb6640368" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0xb6640368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6640540"/>
        <function-ref name="isInput" scoped="" ref="0xb6640620"/>
        <function-ref name="setResistor" scoped="" ref="0xb6640700"/>
        <function-ref name="toggle" scoped="" ref="0xb66407e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66408c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66409a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6640a80"/>
        <function-ref name="get" scoped="" ref="0xb6640b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6640c40"/>
        <function-ref name="getRaw" scoped="" ref="0xb6640d20"/>
        <function-ref name="set" scoped="" ref="0xb6640e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6640ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663f010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663f170"/>
        <function-ref name="clr" scoped="" ref="0xb663f250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0xb666a178" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0xb666a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb666a350"/>
        <function-ref name="isInput" scoped="" ref="0xb666a430"/>
        <function-ref name="setResistor" scoped="" ref="0xb666a510"/>
        <function-ref name="toggle" scoped="" ref="0xb666a5f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb666a6d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb666a7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb666a890"/>
        <function-ref name="get" scoped="" ref="0xb666a970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb666aa50"/>
        <function-ref name="getRaw" scoped="" ref="0xb666ab30"/>
        <function-ref name="set" scoped="" ref="0xb666ac10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb666acf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb666add0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6669010"/>
        <function-ref name="clr" scoped="" ref="0xb66690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0xb6642010" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0xb6642010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66421e8"/>
        <function-ref name="isInput" scoped="" ref="0xb66422c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66423a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6642488"/>
        <function-ref name="isOutput" scoped="" ref="0xb6642568"/>
        <function-ref name="getResistor" scoped="" ref="0xb6642648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6642728"/>
        <function-ref name="get" scoped="" ref="0xb6642808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66428e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb66429c8"/>
        <function-ref name="set" scoped="" ref="0xb6642aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6642b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6642c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6642dc8"/>
        <function-ref name="clr" scoped="" ref="0xb6642ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0xb66684c8" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0xb66684c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66686a0"/>
        <function-ref name="isInput" scoped="" ref="0xb6668780"/>
        <function-ref name="setResistor" scoped="" ref="0xb6668860"/>
        <function-ref name="toggle" scoped="" ref="0xb6668940"/>
        <function-ref name="isOutput" scoped="" ref="0xb6668a20"/>
        <function-ref name="getResistor" scoped="" ref="0xb6668b00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6668be0"/>
        <function-ref name="get" scoped="" ref="0xb6668cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6668da0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6668e80"/>
        <function-ref name="set" scoped="" ref="0xb6667010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66670f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66671d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6667330"/>
        <function-ref name="clr" scoped="" ref="0xb6667410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0xb665d688" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0xb665d688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665d860"/>
        <function-ref name="isInput" scoped="" ref="0xb665d940"/>
        <function-ref name="setResistor" scoped="" ref="0xb665da20"/>
        <function-ref name="toggle" scoped="" ref="0xb665db00"/>
        <function-ref name="isOutput" scoped="" ref="0xb665dbe0"/>
        <function-ref name="getResistor" scoped="" ref="0xb665dcc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb665dda0"/>
        <function-ref name="get" scoped="" ref="0xb665de80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb665c010"/>
        <function-ref name="getRaw" scoped="" ref="0xb665c0f0"/>
        <function-ref name="set" scoped="" ref="0xb665c1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb665c2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb665c390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb665c4f0"/>
        <function-ref name="clr" scoped="" ref="0xb665c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0xb6651928" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0xb6651928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6651b00"/>
        <function-ref name="isInput" scoped="" ref="0xb6651be0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6651cc0"/>
        <function-ref name="toggle" scoped="" ref="0xb6651da0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6651e80"/>
        <function-ref name="getResistor" scoped="" ref="0xb6650010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66500f0"/>
        <function-ref name="get" scoped="" ref="0xb66501d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66502b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6650390"/>
        <function-ref name="set" scoped="" ref="0xb6650470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6650550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6650630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6650790"/>
        <function-ref name="clr" scoped="" ref="0xb6650870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0xb6646a08" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0xb6646a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6646be0"/>
        <function-ref name="isInput" scoped="" ref="0xb6646cc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6646da0"/>
        <function-ref name="toggle" scoped="" ref="0xb6646e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6645010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66450f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66451d0"/>
        <function-ref name="get" scoped="" ref="0xb66452b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6645390"/>
        <function-ref name="getRaw" scoped="" ref="0xb6645470"/>
        <function-ref name="set" scoped="" ref="0xb6645550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6645630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6645710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6645870"/>
        <function-ref name="clr" scoped="" ref="0xb6645950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0xb663d848" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0xb663d848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663da20"/>
        <function-ref name="isInput" scoped="" ref="0xb663db00"/>
        <function-ref name="setResistor" scoped="" ref="0xb663dbe0"/>
        <function-ref name="toggle" scoped="" ref="0xb663dcc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb663dda0"/>
        <function-ref name="getResistor" scoped="" ref="0xb663de80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663c010"/>
        <function-ref name="get" scoped="" ref="0xb663c0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663c1d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb663c2b0"/>
        <function-ref name="set" scoped="" ref="0xb663c390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663c470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663c550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663c6b0"/>
        <function-ref name="clr" scoped="" ref="0xb663c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0xb6670848" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0xb6670848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6670a20"/>
        <function-ref name="isInput" scoped="" ref="0xb6670b00"/>
        <function-ref name="setResistor" scoped="" ref="0xb6670be0"/>
        <function-ref name="toggle" scoped="" ref="0xb6670cc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6670da0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6670e80"/>
        <function-ref name="makeOutput" scoped="" ref="0xb666f010"/>
        <function-ref name="get" scoped="" ref="0xb666f0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb666f1d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb666f2b0"/>
        <function-ref name="set" scoped="" ref="0xb666f390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb666f470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb666f550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb666f6b0"/>
        <function-ref name="clr" scoped="" ref="0xb666f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0xb6665a08" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0xb6665a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6665be0"/>
        <function-ref name="isInput" scoped="" ref="0xb6665cc0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6665da0"/>
        <function-ref name="toggle" scoped="" ref="0xb6665e80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6664010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66640f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66641d0"/>
        <function-ref name="get" scoped="" ref="0xb66642b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6664390"/>
        <function-ref name="getRaw" scoped="" ref="0xb6664470"/>
        <function-ref name="set" scoped="" ref="0xb6664550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6664630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6664710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6664870"/>
        <function-ref name="clr" scoped="" ref="0xb6664950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0xb665abc8" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0xb665abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb665ada0"/>
        <function-ref name="isInput" scoped="" ref="0xb665ae80"/>
        <function-ref name="setResistor" scoped="" ref="0xb6659010"/>
        <function-ref name="toggle" scoped="" ref="0xb66590f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66591d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6659390"/>
        <function-ref name="get" scoped="" ref="0xb6659470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6659550"/>
        <function-ref name="getRaw" scoped="" ref="0xb6659630"/>
        <function-ref name="set" scoped="" ref="0xb6659710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66597f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66598d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6659a30"/>
        <function-ref name="clr" scoped="" ref="0xb6659b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0xb664ee68" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0xb664ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664d050"/>
        <function-ref name="isInput" scoped="" ref="0xb664d130"/>
        <function-ref name="setResistor" scoped="" ref="0xb664d210"/>
        <function-ref name="toggle" scoped="" ref="0xb664d2f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb664d3d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb664d4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664d590"/>
        <function-ref name="get" scoped="" ref="0xb664d670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664d750"/>
        <function-ref name="getRaw" scoped="" ref="0xb664d830"/>
        <function-ref name="set" scoped="" ref="0xb664d910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664d9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664dad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664dc30"/>
        <function-ref name="clr" scoped="" ref="0xb664dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0xb6635588" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0xb6635588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6635760"/>
        <function-ref name="isInput" scoped="" ref="0xb6635840"/>
        <function-ref name="setResistor" scoped="" ref="0xb6635920"/>
        <function-ref name="toggle" scoped="" ref="0xb6635a00"/>
        <function-ref name="isOutput" scoped="" ref="0xb6635ae0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6635bc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6635ca0"/>
        <function-ref name="get" scoped="" ref="0xb6635d80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6635e60"/>
        <function-ref name="getRaw" scoped="" ref="0xb6634010"/>
        <function-ref name="set" scoped="" ref="0xb66340f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb66341d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66342b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6634410"/>
        <function-ref name="clr" scoped="" ref="0xb66344f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0xb6628758" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0xb6628758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6628930"/>
        <function-ref name="isInput" scoped="" ref="0xb6628a10"/>
        <function-ref name="setResistor" scoped="" ref="0xb6628af0"/>
        <function-ref name="toggle" scoped="" ref="0xb6628bd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6628cb0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6628d90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6628e70"/>
        <function-ref name="get" scoped="" ref="0xb6627010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb66270f0"/>
        <function-ref name="getRaw" scoped="" ref="0xb66271d0"/>
        <function-ref name="set" scoped="" ref="0xb66272b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6627390"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6627470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb66275d0"/>
        <function-ref name="clr" scoped="" ref="0xb66276b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0xb66363e0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0xb66363e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66365b8"/>
        <function-ref name="isInput" scoped="" ref="0xb6636698"/>
        <function-ref name="setResistor" scoped="" ref="0xb6636778"/>
        <function-ref name="toggle" scoped="" ref="0xb6636858"/>
        <function-ref name="isOutput" scoped="" ref="0xb6636938"/>
        <function-ref name="getResistor" scoped="" ref="0xb6636a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6636af8"/>
        <function-ref name="get" scoped="" ref="0xb6636bd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6636cb8"/>
        <function-ref name="getRaw" scoped="" ref="0xb6636d98"/>
        <function-ref name="set" scoped="" ref="0xb6636e78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6635010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb66350f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6635250"/>
        <function-ref name="clr" scoped="" ref="0xb6635330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0xb664b178" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0xb664b178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb664b350"/>
        <function-ref name="isInput" scoped="" ref="0xb664b430"/>
        <function-ref name="setResistor" scoped="" ref="0xb664b510"/>
        <function-ref name="toggle" scoped="" ref="0xb664b5f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb664b6d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb664b7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb664b890"/>
        <function-ref name="get" scoped="" ref="0xb664b970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb664ba50"/>
        <function-ref name="getRaw" scoped="" ref="0xb664bb30"/>
        <function-ref name="set" scoped="" ref="0xb664bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb664bcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb664bdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb664a010"/>
        <function-ref name="clr" scoped="" ref="0xb664a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0xb6621168" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0xb6621168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6621340"/>
        <function-ref name="isInput" scoped="" ref="0xb6621420"/>
        <function-ref name="setResistor" scoped="" ref="0xb6621500"/>
        <function-ref name="toggle" scoped="" ref="0xb66215e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb66216c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb66217a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6621880"/>
        <function-ref name="get" scoped="" ref="0xb6621960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6621a40"/>
        <function-ref name="getRaw" scoped="" ref="0xb6621b20"/>
        <function-ref name="set" scoped="" ref="0xb6621c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6621ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6621dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6621f20"/>
        <function-ref name="clr" scoped="" ref="0xb6620018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0xb661e5a8" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0xb661e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb661e780"/>
        <function-ref name="isInput" scoped="" ref="0xb661e860"/>
        <function-ref name="setResistor" scoped="" ref="0xb661e940"/>
        <function-ref name="toggle" scoped="" ref="0xb661ea20"/>
        <function-ref name="isOutput" scoped="" ref="0xb661eb00"/>
        <function-ref name="getResistor" scoped="" ref="0xb661ebe0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb661ecc0"/>
        <function-ref name="get" scoped="" ref="0xb661eda0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb661ee80"/>
        <function-ref name="getRaw" scoped="" ref="0xb661d010"/>
        <function-ref name="set" scoped="" ref="0xb661d0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb661d1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb661d2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb661d410"/>
        <function-ref name="clr" scoped="" ref="0xb661d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0xb663bbe8" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0xb663bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb663a010"/>
        <function-ref name="isInput" scoped="" ref="0xb663a0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb663a1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb663a2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb663a390"/>
        <function-ref name="getResistor" scoped="" ref="0xb663a470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb663a550"/>
        <function-ref name="get" scoped="" ref="0xb663a630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb663a710"/>
        <function-ref name="getRaw" scoped="" ref="0xb663a7f0"/>
        <function-ref name="set" scoped="" ref="0xb663a8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb663a9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb663aa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb663abf0"/>
        <function-ref name="clr" scoped="" ref="0xb663acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb661b3a8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb661b3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb661b580"/>
        <function-ref name="isInput" scoped="" ref="0xb661b660"/>
        <function-ref name="setResistor" scoped="" ref="0xb661b740"/>
        <function-ref name="toggle" scoped="" ref="0xb661b820"/>
        <function-ref name="isOutput" scoped="" ref="0xb661b900"/>
        <function-ref name="getResistor" scoped="" ref="0xb661b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb661bac0"/>
        <function-ref name="get" scoped="" ref="0xb661bba0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb661bc80"/>
        <function-ref name="getRaw" scoped="" ref="0xb661bd60"/>
        <function-ref name="set" scoped="" ref="0xb661be40"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb661bf20"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6604018"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6604178"/>
        <function-ref name="clr" scoped="" ref="0xb6604258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6603aa0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6603aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6603c78"/>
        <function-ref name="isInput" scoped="" ref="0xb6603d58"/>
        <function-ref name="setResistor" scoped="" ref="0xb6603e38"/>
        <function-ref name="toggle" scoped="" ref="0xb6603f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb6602010"/>
        <function-ref name="getResistor" scoped="" ref="0xb66020f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb66021d0"/>
        <function-ref name="get" scoped="" ref="0xb66022b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6602390"/>
        <function-ref name="getRaw" scoped="" ref="0xb6602470"/>
        <function-ref name="set" scoped="" ref="0xb6602550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6602630"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6602710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6602870"/>
        <function-ref name="clr" scoped="" ref="0xb6602950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6600220" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6600220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb66003f8"/>
        <function-ref name="isInput" scoped="" ref="0xb66004d8"/>
        <function-ref name="setResistor" scoped="" ref="0xb66005b8"/>
        <function-ref name="toggle" scoped="" ref="0xb6600698"/>
        <function-ref name="isOutput" scoped="" ref="0xb6600778"/>
        <function-ref name="getResistor" scoped="" ref="0xb6600858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6600938"/>
        <function-ref name="get" scoped="" ref="0xb6600a18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6600af8"/>
        <function-ref name="getRaw" scoped="" ref="0xb6600bd8"/>
        <function-ref name="set" scoped="" ref="0xb6600cb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6600d98"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6600e78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ff010"/>
        <function-ref name="clr" scoped="" ref="0xb65ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65fe948" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65fe948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65feb20"/>
        <function-ref name="isInput" scoped="" ref="0xb65fec00"/>
        <function-ref name="setResistor" scoped="" ref="0xb65fece0"/>
        <function-ref name="toggle" scoped="" ref="0xb65fedc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65feea0"/>
        <function-ref name="getResistor" scoped="" ref="0xb65fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65fd0f0"/>
        <function-ref name="get" scoped="" ref="0xb65fd1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65fd2b0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65fd390"/>
        <function-ref name="set" scoped="" ref="0xb65fd470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65fd550"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65fd630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65fd790"/>
        <function-ref name="clr" scoped="" ref="0xb65fd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65fb148" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65fb148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65fb320"/>
        <function-ref name="isInput" scoped="" ref="0xb65fb400"/>
        <function-ref name="setResistor" scoped="" ref="0xb65fb4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb65fb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65fb6a0"/>
        <function-ref name="getResistor" scoped="" ref="0xb65fb780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65fb860"/>
        <function-ref name="get" scoped="" ref="0xb65fb940"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65fba20"/>
        <function-ref name="getRaw" scoped="" ref="0xb65fbb00"/>
        <function-ref name="set" scoped="" ref="0xb65fbbe0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65fbcc0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65fbda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65fbf00"/>
        <function-ref name="clr" scoped="" ref="0xb65fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f98a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f9a78"/>
        <function-ref name="isInput" scoped="" ref="0xb65f9b58"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f9c38"/>
        <function-ref name="toggle" scoped="" ref="0xb65f9d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f9df8"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f9ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f8010"/>
        <function-ref name="get" scoped="" ref="0xb65f80f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f81d0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f82b0"/>
        <function-ref name="set" scoped="" ref="0xb65f8390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f8470"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f8550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f86b0"/>
        <function-ref name="clr" scoped="" ref="0xb65f8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f6030" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f6208"/>
        <function-ref name="isInput" scoped="" ref="0xb65f62e8"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f63c8"/>
        <function-ref name="toggle" scoped="" ref="0xb65f64a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f6588"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f6668"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f6748"/>
        <function-ref name="get" scoped="" ref="0xb65f6828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f6908"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f69e8"/>
        <function-ref name="set" scoped="" ref="0xb65f6ac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f6ba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f6c88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f6de8"/>
        <function-ref name="clr" scoped="" ref="0xb65f6ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f4730" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f4730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f4908"/>
        <function-ref name="isInput" scoped="" ref="0xb65f49e8"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f4ac8"/>
        <function-ref name="toggle" scoped="" ref="0xb65f4ba8"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f4c88"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f4d68"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f4e48"/>
        <function-ref name="get" scoped="" ref="0xb65f4f28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f3018"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f30f8"/>
        <function-ref name="set" scoped="" ref="0xb65f31d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f32b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f3398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f34f8"/>
        <function-ref name="clr" scoped="" ref="0xb65f35d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65f2e50" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65f1050"/>
        <function-ref name="isInput" scoped="" ref="0xb65f1130"/>
        <function-ref name="setResistor" scoped="" ref="0xb65f1210"/>
        <function-ref name="toggle" scoped="" ref="0xb65f12f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65f13d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb65f14b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65f1590"/>
        <function-ref name="get" scoped="" ref="0xb65f1670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65f1750"/>
        <function-ref name="getRaw" scoped="" ref="0xb65f1830"/>
        <function-ref name="set" scoped="" ref="0xb65f1910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65f19f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65f1ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65f1c30"/>
        <function-ref name="clr" scoped="" ref="0xb65f1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ef5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ef5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65ef7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65ef8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65ef990"/>
        <function-ref name="toggle" scoped="" ref="0xb65efa70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65efb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65efc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65efd10"/>
        <function-ref name="get" scoped="" ref="0xb65efdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65efed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65ed010"/>
        <function-ref name="set" scoped="" ref="0xb65ed0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65ed1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65ed2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ed410"/>
        <function-ref name="clr" scoped="" ref="0xb65ed4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ecd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ecd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65eb010"/>
        <function-ref name="isInput" scoped="" ref="0xb65eb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65eb1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65eb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65eb390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65eb470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65eb550"/>
        <function-ref name="get" scoped="" ref="0xb65eb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65eb710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65eb7f0"/>
        <function-ref name="set" scoped="" ref="0xb65eb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65eb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65eba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ebbf0"/>
        <function-ref name="clr" scoped="" ref="0xb65ebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65e95f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65e95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65e97d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65e98b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65e9990"/>
        <function-ref name="toggle" scoped="" ref="0xb65e9a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65e9b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65e9c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65e9d10"/>
        <function-ref name="get" scoped="" ref="0xb65e9df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65e9ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65e8010"/>
        <function-ref name="set" scoped="" ref="0xb65e80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65e81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65e82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65e8410"/>
        <function-ref name="clr" scoped="" ref="0xb65e84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65e7de8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65e7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65e6010"/>
        <function-ref name="isInput" scoped="" ref="0xb65e60f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65e61d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65e62b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65e6390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65e6470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65e6550"/>
        <function-ref name="get" scoped="" ref="0xb65e6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65e6710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65e67f0"/>
        <function-ref name="set" scoped="" ref="0xb65e68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65e69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65e6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65e6bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65e6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65e45f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65e45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65e47d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65e48b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65e4990"/>
        <function-ref name="toggle" scoped="" ref="0xb65e4a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65e4b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65e4c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65e4d10"/>
        <function-ref name="get" scoped="" ref="0xb65e4df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65e4ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65e3010"/>
        <function-ref name="set" scoped="" ref="0xb65e30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65e31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65e32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65e3410"/>
        <function-ref name="clr" scoped="" ref="0xb65e34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65e2d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65e2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65e1010"/>
        <function-ref name="isInput" scoped="" ref="0xb65e10f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65e11d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65e12b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65e1390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65e1470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65e1550"/>
        <function-ref name="get" scoped="" ref="0xb65e1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65e1710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65e17f0"/>
        <function-ref name="set" scoped="" ref="0xb65e18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65e19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65e1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65e1bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65e1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65df5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65df5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65df7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65df8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65df990"/>
        <function-ref name="toggle" scoped="" ref="0xb65dfa70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65dfb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65dfc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65dfd10"/>
        <function-ref name="get" scoped="" ref="0xb65dfdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65dfed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65de010"/>
        <function-ref name="set" scoped="" ref="0xb65de0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65de1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65de2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65de410"/>
        <function-ref name="clr" scoped="" ref="0xb65de4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ddd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ddd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65dc010"/>
        <function-ref name="isInput" scoped="" ref="0xb65dc0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65dc1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65dc2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65dc390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65dc470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65dc550"/>
        <function-ref name="get" scoped="" ref="0xb65dc630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65dc710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65dc7f0"/>
        <function-ref name="set" scoped="" ref="0xb65dc8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65dc9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65dca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65dcbf0"/>
        <function-ref name="clr" scoped="" ref="0xb65dccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65da5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65da5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65da7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65da8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65da990"/>
        <function-ref name="toggle" scoped="" ref="0xb65daa70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65dab50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65dac30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65dad10"/>
        <function-ref name="get" scoped="" ref="0xb65dadf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65daed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65d9010"/>
        <function-ref name="set" scoped="" ref="0xb65d90f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65d91d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65d92b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65d9410"/>
        <function-ref name="clr" scoped="" ref="0xb65d94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65d8d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65d8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65d7010"/>
        <function-ref name="isInput" scoped="" ref="0xb65d70f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65d71d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65d72b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65d7390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65d7470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65d7550"/>
        <function-ref name="get" scoped="" ref="0xb65d7630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65d7710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65d77f0"/>
        <function-ref name="set" scoped="" ref="0xb65d78d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65d79b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65d7a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65d7bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65d7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65d55f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65d55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65d57d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65d58b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65d5990"/>
        <function-ref name="toggle" scoped="" ref="0xb65d5a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65d5b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65d5c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65d5d10"/>
        <function-ref name="get" scoped="" ref="0xb65d5df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65d5ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65d4010"/>
        <function-ref name="set" scoped="" ref="0xb65d40f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65d41d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65d42b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65d4410"/>
        <function-ref name="clr" scoped="" ref="0xb65d44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65d3d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65d3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65d2010"/>
        <function-ref name="isInput" scoped="" ref="0xb65d20f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65d21d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65d22b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65d2390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65d2470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65d2550"/>
        <function-ref name="get" scoped="" ref="0xb65d2630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65d2710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65d27f0"/>
        <function-ref name="set" scoped="" ref="0xb65d28d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65d29b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65d2a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65d2bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65d2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65d05f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65d05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65d07d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65d08b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65d0990"/>
        <function-ref name="toggle" scoped="" ref="0xb65d0a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65d0b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65d0c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65d0d10"/>
        <function-ref name="get" scoped="" ref="0xb65d0df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65d0ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65ce010"/>
        <function-ref name="set" scoped="" ref="0xb65ce0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65ce1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65ce2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ce410"/>
        <function-ref name="clr" scoped="" ref="0xb65ce4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65cdd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65cdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65cc010"/>
        <function-ref name="isInput" scoped="" ref="0xb65cc0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65cc1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65cc2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65cc390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65cc470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65cc550"/>
        <function-ref name="get" scoped="" ref="0xb65cc630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65cc710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65cc7f0"/>
        <function-ref name="set" scoped="" ref="0xb65cc8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65cc9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65cca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ccbf0"/>
        <function-ref name="clr" scoped="" ref="0xb65cccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ca5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ca5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65ca7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65ca8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65ca990"/>
        <function-ref name="toggle" scoped="" ref="0xb65caa70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65cab50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65cac30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65cad10"/>
        <function-ref name="get" scoped="" ref="0xb65cadf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65caed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65c9010"/>
        <function-ref name="set" scoped="" ref="0xb65c90f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65c91d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65c92b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65c9410"/>
        <function-ref name="clr" scoped="" ref="0xb65c94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65c8e68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65c8e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65c7050"/>
        <function-ref name="isInput" scoped="" ref="0xb65c7130"/>
        <function-ref name="setResistor" scoped="" ref="0xb65c7210"/>
        <function-ref name="toggle" scoped="" ref="0xb65c72f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65c73d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb65c74b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65c7590"/>
        <function-ref name="get" scoped="" ref="0xb65c7670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65c7750"/>
        <function-ref name="getRaw" scoped="" ref="0xb65c7830"/>
        <function-ref name="set" scoped="" ref="0xb65c7910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65c79f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65c7ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65c7c30"/>
        <function-ref name="clr" scoped="" ref="0xb65c7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65c55f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65c55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65c57d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65c58b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65c5990"/>
        <function-ref name="toggle" scoped="" ref="0xb65c5a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65c5b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65c5c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65c5d10"/>
        <function-ref name="get" scoped="" ref="0xb65c5df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65c5ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65c4010"/>
        <function-ref name="set" scoped="" ref="0xb65c40f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65c41d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65c42b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65c4410"/>
        <function-ref name="clr" scoped="" ref="0xb65c44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65c3d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65c3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65c2010"/>
        <function-ref name="isInput" scoped="" ref="0xb65c20f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65c21d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65c22b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65c2390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65c2470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65c2550"/>
        <function-ref name="get" scoped="" ref="0xb65c2630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65c2710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65c27f0"/>
        <function-ref name="set" scoped="" ref="0xb65c28d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65c29b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65c2a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65c2bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65c2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65c05f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65c05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65c07d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65c08b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65c0990"/>
        <function-ref name="toggle" scoped="" ref="0xb65c0a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65c0b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65c0c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65c0d10"/>
        <function-ref name="get" scoped="" ref="0xb65c0df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65c0ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65bf010"/>
        <function-ref name="set" scoped="" ref="0xb65bf0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65bf1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65bf2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65bf410"/>
        <function-ref name="clr" scoped="" ref="0xb65bf4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65bed68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65bed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65bd010"/>
        <function-ref name="isInput" scoped="" ref="0xb65bd0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65bd1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65bd2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65bd390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65bd470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65bd550"/>
        <function-ref name="get" scoped="" ref="0xb65bd630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65bd710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65bd7f0"/>
        <function-ref name="set" scoped="" ref="0xb65bd8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65bd9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65bda90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65bdbf0"/>
        <function-ref name="clr" scoped="" ref="0xb65bdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65bb5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65bb5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65bb7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65bb8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65bb990"/>
        <function-ref name="toggle" scoped="" ref="0xb65bba70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65bbb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65bbc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65bbd10"/>
        <function-ref name="get" scoped="" ref="0xb65bbdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65bbed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65ba010"/>
        <function-ref name="set" scoped="" ref="0xb65ba0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65ba1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65ba2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65ba410"/>
        <function-ref name="clr" scoped="" ref="0xb65ba4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65b9d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65b9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65b8010"/>
        <function-ref name="isInput" scoped="" ref="0xb65b80f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65b81d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65b82b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65b8390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65b8470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65b8550"/>
        <function-ref name="get" scoped="" ref="0xb65b8630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65b8710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65b87f0"/>
        <function-ref name="set" scoped="" ref="0xb65b88d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65b89b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65b8a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65b8bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65b8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65b65f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65b65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65b67d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65b68b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65b6990"/>
        <function-ref name="toggle" scoped="" ref="0xb65b6a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65b6b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65b6c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65b6d10"/>
        <function-ref name="get" scoped="" ref="0xb65b6df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65b6ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65b5010"/>
        <function-ref name="set" scoped="" ref="0xb65b50f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65b51d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65b52b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65b5410"/>
        <function-ref name="clr" scoped="" ref="0xb65b54f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65b4d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65b4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65b3010"/>
        <function-ref name="isInput" scoped="" ref="0xb65b30f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65b31d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65b32b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65b3390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65b3470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65b3550"/>
        <function-ref name="get" scoped="" ref="0xb65b3630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65b3710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65b37f0"/>
        <function-ref name="set" scoped="" ref="0xb65b38d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65b39b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65b3a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65b3bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65b3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65b15f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65b15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65b17d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65b18b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65b1990"/>
        <function-ref name="toggle" scoped="" ref="0xb65b1a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65b1b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65b1c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65b1d10"/>
        <function-ref name="get" scoped="" ref="0xb65b1df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65b1ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65af010"/>
        <function-ref name="set" scoped="" ref="0xb65af0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65af1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65af2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65af410"/>
        <function-ref name="clr" scoped="" ref="0xb65af4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65aed68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65aed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65ad010"/>
        <function-ref name="isInput" scoped="" ref="0xb65ad0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65ad1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65ad2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65ad390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65ad470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65ad550"/>
        <function-ref name="get" scoped="" ref="0xb65ad630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65ad710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65ad7f0"/>
        <function-ref name="set" scoped="" ref="0xb65ad8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65ad9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65ada90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65adbf0"/>
        <function-ref name="clr" scoped="" ref="0xb65adcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65ab5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65ab5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65ab7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65ab8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65ab990"/>
        <function-ref name="toggle" scoped="" ref="0xb65aba70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65abb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65abc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65abd10"/>
        <function-ref name="get" scoped="" ref="0xb65abdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65abed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65aa010"/>
        <function-ref name="set" scoped="" ref="0xb65aa0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65aa1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65aa2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65aa410"/>
        <function-ref name="clr" scoped="" ref="0xb65aa4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65a9d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65a9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65a8010"/>
        <function-ref name="isInput" scoped="" ref="0xb65a80f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65a81d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65a82b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65a8390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65a8470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65a8550"/>
        <function-ref name="get" scoped="" ref="0xb65a8630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65a8710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65a87f0"/>
        <function-ref name="set" scoped="" ref="0xb65a88d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65a89b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65a8a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65a8bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65a8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65a65f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65a65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65a67d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65a68b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65a6990"/>
        <function-ref name="toggle" scoped="" ref="0xb65a6a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65a6b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65a6c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65a6d10"/>
        <function-ref name="get" scoped="" ref="0xb65a6df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65a6ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65a5010"/>
        <function-ref name="set" scoped="" ref="0xb65a50f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65a51d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65a52b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65a5410"/>
        <function-ref name="clr" scoped="" ref="0xb65a54f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65a4d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65a4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65a3010"/>
        <function-ref name="isInput" scoped="" ref="0xb65a30f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65a31d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65a32b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65a3390"/>
        <function-ref name="getResistor" scoped="" ref="0xb65a3470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65a3550"/>
        <function-ref name="get" scoped="" ref="0xb65a3630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65a3710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65a37f0"/>
        <function-ref name="set" scoped="" ref="0xb65a38d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65a39b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65a3a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65a3bf0"/>
        <function-ref name="clr" scoped="" ref="0xb65a3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65a15f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65a15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65a17d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65a18b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65a1990"/>
        <function-ref name="toggle" scoped="" ref="0xb65a1a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb65a1b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb65a1c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65a1d10"/>
        <function-ref name="get" scoped="" ref="0xb65a1df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb65a1ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb65a0010"/>
        <function-ref name="set" scoped="" ref="0xb65a00f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65a01d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65a02b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb65a0410"/>
        <function-ref name="clr" scoped="" ref="0xb65a04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb659fd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb659fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb659e010"/>
        <function-ref name="isInput" scoped="" ref="0xb659e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb659e1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb659e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb659e390"/>
        <function-ref name="getResistor" scoped="" ref="0xb659e470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb659e550"/>
        <function-ref name="get" scoped="" ref="0xb659e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb659e710"/>
        <function-ref name="getRaw" scoped="" ref="0xb659e7f0"/>
        <function-ref name="set" scoped="" ref="0xb659e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb659e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb659ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb659ebf0"/>
        <function-ref name="clr" scoped="" ref="0xb659ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb659c5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb659c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb659c7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb659c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb659c990"/>
        <function-ref name="toggle" scoped="" ref="0xb659ca70"/>
        <function-ref name="isOutput" scoped="" ref="0xb659cb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb659cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb659cd10"/>
        <function-ref name="get" scoped="" ref="0xb659cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb659ced0"/>
        <function-ref name="getRaw" scoped="" ref="0xb659b010"/>
        <function-ref name="set" scoped="" ref="0xb659b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb659b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb659b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb659b410"/>
        <function-ref name="clr" scoped="" ref="0xb659b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb659ad68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb659ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6599010"/>
        <function-ref name="isInput" scoped="" ref="0xb65990f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65991d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65992b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6599390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6599470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6599550"/>
        <function-ref name="get" scoped="" ref="0xb6599630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6599710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65997f0"/>
        <function-ref name="set" scoped="" ref="0xb65998d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65999b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6599a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6599bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6599cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65975f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65975f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65977d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65978b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6597990"/>
        <function-ref name="toggle" scoped="" ref="0xb6597a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6597b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6597c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6597d10"/>
        <function-ref name="get" scoped="" ref="0xb6597df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6597ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6596010"/>
        <function-ref name="set" scoped="" ref="0xb65960f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65961d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65962b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6596410"/>
        <function-ref name="clr" scoped="" ref="0xb65964f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6595d68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb6595d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6594010"/>
        <function-ref name="isInput" scoped="" ref="0xb65940f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb65941d0"/>
        <function-ref name="toggle" scoped="" ref="0xb65942b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6594390"/>
        <function-ref name="getResistor" scoped="" ref="0xb6594470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6594550"/>
        <function-ref name="get" scoped="" ref="0xb6594630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6594710"/>
        <function-ref name="getRaw" scoped="" ref="0xb65947f0"/>
        <function-ref name="set" scoped="" ref="0xb65948d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65949b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6594a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6594bf0"/>
        <function-ref name="clr" scoped="" ref="0xb6594cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65925f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb65925f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65927d0"/>
        <function-ref name="isInput" scoped="" ref="0xb65928b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb6592990"/>
        <function-ref name="toggle" scoped="" ref="0xb6592a70"/>
        <function-ref name="isOutput" scoped="" ref="0xb6592b50"/>
        <function-ref name="getResistor" scoped="" ref="0xb6592c30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6592d10"/>
        <function-ref name="get" scoped="" ref="0xb6592df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6592ed0"/>
        <function-ref name="getRaw" scoped="" ref="0xb6590010"/>
        <function-ref name="set" scoped="" ref="0xb65900f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb65901d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb65902b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6590410"/>
        <function-ref name="clr" scoped="" ref="0xb65904f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb658fd68" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb658fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb658e010"/>
        <function-ref name="isInput" scoped="" ref="0xb658e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0xb658e1d0"/>
        <function-ref name="toggle" scoped="" ref="0xb658e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb658e390"/>
        <function-ref name="getResistor" scoped="" ref="0xb658e470"/>
        <function-ref name="makeOutput" scoped="" ref="0xb658e550"/>
        <function-ref name="get" scoped="" ref="0xb658e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb658e710"/>
        <function-ref name="getRaw" scoped="" ref="0xb658e7f0"/>
        <function-ref name="set" scoped="" ref="0xb658e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb658e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb658ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb658ebf0"/>
        <function-ref name="clr" scoped="" ref="0xb658ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb658c5f8" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0xb658c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb658c7d0"/>
        <function-ref name="isInput" scoped="" ref="0xb658c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0xb658c990"/>
        <function-ref name="toggle" scoped="" ref="0xb658ca70"/>
        <function-ref name="isOutput" scoped="" ref="0xb658cb50"/>
        <function-ref name="getResistor" scoped="" ref="0xb658cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb658cd10"/>
        <function-ref name="get" scoped="" ref="0xb658cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb658ced0"/>
        <function-ref name="getRaw" scoped="" ref="0xb658b010"/>
        <function-ref name="set" scoped="" ref="0xb658b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb658b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb658b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb658b410"/>
        <function-ref name="clr" scoped="" ref="0xb658b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6549638" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0xb6549638"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb6549c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0xb654b9a0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0xb654b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb654bb78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb654bc58"/>
        <function-ref name="request" scoped="" ref="0xb654bd38"/>
        <function-ref name="granted" scoped="" ref="0xb654be18"/>
        <function-ref name="isOwner" scoped="" ref="0xb654bef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0xb654fea0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0xb654fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb654b0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb654b1a0"/>
        <function-ref name="request" scoped="" ref="0xb654b280"/>
        <function-ref name="granted" scoped="" ref="0xb654b360"/>
        <function-ref name="isOwner" scoped="" ref="0xb654b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0xb65432d0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0xb65432d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0xb65434a8"/>
        <function-ref name="getMCtl" scoped="" ref="0xb6543588"/>
        <function-ref name="resetIFGs" scoped="" ref="0xb6543668"/>
        <function-ref name="isBusy" scoped="" ref="0xb6543748"/>
        <function-ref name="conversionDone" scoped="" ref="0xb6543828"/>
        <function-ref name="getCtl1" scoped="" ref="0xb6543908"/>
        <function-ref name="setMCtl" scoped="" ref="0xb65439e8"/>
        <function-ref name="startConversion" scoped="" ref="0xb6543ac8"/>
        <function-ref name="setCtl0" scoped="" ref="0xb6543ba8"/>
        <function-ref name="getMem" scoped="" ref="0xb6543c88"/>
        <function-ref name="setIEFlags" scoped="" ref="0xb6543d68"/>
        <function-ref name="getIEFlags" scoped="" ref="0xb6543e48"/>
        <function-ref name="stopConversion" scoped="" ref="0xb6543f28"/>
        <function-ref name="enableConversion" scoped="" ref="0xb6542098"/>
        <function-ref name="setCtl1" scoped="" ref="0xb6542178"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0xb6540888" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0xb6540888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb653d388"/>
        <function-ref name="fired" scoped="" ref="0xb653e628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb653ed30"/>
        <function-ref name="isOneShot" scoped="" ref="0xb653ead8"/>
        <function-ref name="getdt" scoped="" ref="0xb653d838"/>
        <function-ref name="gett0" scoped="" ref="0xb653d5e0"/>
        <function-ref name="isRunning" scoped="" ref="0xb653e880"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6540eb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb653d068"/>
        <function-ref name="startOneShot" scoped="" ref="0xb653e150"/>
        <function-ref name="stop" scoped="" ref="0xb653e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0xb6548c70" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb6548c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6548e48"/>
        <function-ref name="stopDone" scoped="" ref="0xb6548f28"/>
        <function-ref name="start" scoped="" ref="0xb6543018"/>
        <function-ref name="stop" scoped="" ref="0xb65430f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0xb653dc40" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0xb653dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb653a730"/>
        <function-ref name="fired" scoped="" ref="0xb653c9d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb653a0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb653ce80"/>
        <function-ref name="getdt" scoped="" ref="0xb653abe0"/>
        <function-ref name="gett0" scoped="" ref="0xb653a988"/>
        <function-ref name="isRunning" scoped="" ref="0xb653cc28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb653c278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb653a410"/>
        <function-ref name="startOneShot" scoped="" ref="0xb653c4f8"/>
        <function-ref name="stop" scoped="" ref="0xb653c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0xb6548598" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb6548598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6548770"/>
        <function-ref name="stopDone" scoped="" ref="0xb6548850"/>
        <function-ref name="start" scoped="" ref="0xb6548930"/>
        <function-ref name="stop" scoped="" ref="0xb6548a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0xb6542468" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0xb6542468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6540010"/>
        <function-ref name="fired" scoped="" ref="0xb6541268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6541970"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6541718"/>
        <function-ref name="getdt" scoped="" ref="0xb65404c0"/>
        <function-ref name="gett0" scoped="" ref="0xb6540268"/>
        <function-ref name="isRunning" scoped="" ref="0xb65414c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6542a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6541c90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6542d10"/>
        <function-ref name="stop" scoped="" ref="0xb6541010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb650b378" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0xb650b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb650b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0xb650c7b8" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0xb650c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb650c990"/>
        <function-ref name="stopDone" scoped="" ref="0xb650ca70"/>
        <function-ref name="start" scoped="" ref="0xb650cb50"/>
        <function-ref name="stop" scoped="" ref="0xb650cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0xb650d8f0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0xb650d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb650dac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb650dba8"/>
        <function-ref name="request" scoped="" ref="0xb650dc88"/>
        <function-ref name="granted" scoped="" ref="0xb650dd68"/>
        <function-ref name="isOwner" scoped="" ref="0xb650de48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0xb6547df8" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0xb6547df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb650d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb650d0f0"/>
        <function-ref name="request" scoped="" ref="0xb650d1d0"/>
        <function-ref name="granted" scoped="" ref="0xb650d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb650d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0xb650a940" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0xb650a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb650ab18"/>
        <function-ref name="runTask" scoped="" ref="0xb650abf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0xb650c0e0" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0xb650c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb650c2b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb650c398"/>
        <function-ref name="start" scoped="" ref="0xb650c478"/>
        <function-ref name="stop" scoped="" ref="0xb650c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb64ed0a0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb64ed0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb64e8b88"/>
        <function-ref name="fired" scoped="" ref="0xb64ede20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb64e8548"/>
        <function-ref name="isOneShot" scoped="" ref="0xb64e82f0"/>
        <function-ref name="getdt" scoped="" ref="0xb63fe048"/>
        <function-ref name="gett0" scoped="" ref="0xb64e8de0"/>
        <function-ref name="isRunning" scoped="" ref="0xb64e8098"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64ed6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb64e8868"/>
        <function-ref name="startOneShot" scoped="" ref="0xb64ed948"/>
        <function-ref name="stop" scoped="" ref="0xb64edbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb64eaf28" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0xb64eaf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb64e5a18"/>
        <function-ref name="fired" scoped="" ref="0xb64e7cb8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb64e53d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb64e5180"/>
        <function-ref name="getdt" scoped="" ref="0xb64e5ec8"/>
        <function-ref name="gett0" scoped="" ref="0xb64e5c70"/>
        <function-ref name="isRunning" scoped="" ref="0xb64e7f10"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64e7560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb64e56f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb64e77e0"/>
        <function-ref name="stop" scoped="" ref="0xb64e7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb64e1010" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0xb64e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb64dfb00"/>
        <function-ref name="fired" scoped="" ref="0xb64e1d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb64df4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb64df268"/>
        <function-ref name="getdt" scoped="" ref="0xb64de010"/>
        <function-ref name="gett0" scoped="" ref="0xb64dfd58"/>
        <function-ref name="isRunning" scoped="" ref="0xb64df010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64e1638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb64df7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb64e18b8"/>
        <function-ref name="stop" scoped="" ref="0xb64e1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb64dd040" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0xb64dd040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64dd688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb64e47b8" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb64e47b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64e4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb64da4e8" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb64da4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb64549a0"/>
        <function-ref name="fired" scoped="" ref="0xb6454170"/>
        <function-ref name="startAt" scoped="" ref="0xb6454660"/>
        <function-ref name="isRunning" scoped="" ref="0xb64543e8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6454c18"/>
        <function-ref name="start" scoped="" ref="0xb64dac38"/>
        <function-ref name="stop" scoped="" ref="0xb64daed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb64da090" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb64da090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb64da268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55dabe0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55dabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55d70f8"/>
        <function-ref name="fired" scoped="" ref="0xb55d8898"/>
        <function-ref name="startAt" scoped="" ref="0xb55d8d88"/>
        <function-ref name="isRunning" scoped="" ref="0xb55d8b10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55d7370"/>
        <function-ref name="start" scoped="" ref="0xb55d8380"/>
        <function-ref name="stop" scoped="" ref="0xb55d8620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb55da788" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb55da788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb55da960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb55c1ac8" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb55c1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb55c1ca0"/>
        <function-ref name="setEvent" scoped="" ref="0xb55c1d80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb55c1e60"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb55c0010"/>
        <function-ref name="fired" scoped="" ref="0xb55c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb55c2480" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb55c2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb55c2658"/>
        <function-ref name="setClockSource" scoped="" ref="0xb55c2738"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55c2818"/>
        <function-ref name="get" scoped="" ref="0xb55c28f8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55c29d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb55c2ab8"/>
        <function-ref name="getMode" scoped="" ref="0xb55c2b98"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb55c2c78"/>
        <function-ref name="overflow" scoped="" ref="0xb55c2d58"/>
        <function-ref name="setMode" scoped="" ref="0xb55c2e38"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb55c2f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb55c1090" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55c1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb55c1268"/>
        <function-ref name="getControl" scoped="" ref="0xb55c1348"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55c1428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb55c1508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb55c15e8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55c16c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb55c17a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb55c1888"/>
        <function-ref name="setControl" scoped="" ref="0xb55c1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb64c5698" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb64c5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb64c5870"/>
        <function-ref name="setEvent" scoped="" ref="0xb64c5950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb64c5a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb64c5b10"/>
        <function-ref name="fired" scoped="" ref="0xb64c5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb64c98e8" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb64c98e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c9ac0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb64c9ba0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb64c9c80"/>
        <function-ref name="get" scoped="" ref="0xb64c9d60"/>
        <function-ref name="disableEvents" scoped="" ref="0xb64c9e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64c9f20"/>
        <function-ref name="getMode" scoped="" ref="0xb64c6018"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64c60f8"/>
        <function-ref name="overflow" scoped="" ref="0xb64c61d8"/>
        <function-ref name="setMode" scoped="" ref="0xb64c62b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb64c6398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb64c6890" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb64c6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb64c6a68"/>
        <function-ref name="getControl" scoped="" ref="0xb64c6b48"/>
        <function-ref name="enableEvents" scoped="" ref="0xb64c6c28"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb64c6d08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb64c6de8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb64c6ec8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb64c5010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb64c50f0"/>
        <function-ref name="setControl" scoped="" ref="0xb64c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0xb55bb4f0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb55bb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb55bb6c8"/>
        <function-ref name="setEvent" scoped="" ref="0xb55bb7a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb55bb888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb55bb968"/>
        <function-ref name="fired" scoped="" ref="0xb55bba48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb55bee48" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb55bee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb55bc050"/>
        <function-ref name="setClockSource" scoped="" ref="0xb55bc130"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55bc210"/>
        <function-ref name="get" scoped="" ref="0xb55bc2f0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55bc3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb55bc4b0"/>
        <function-ref name="getMode" scoped="" ref="0xb55bc590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb55bc670"/>
        <function-ref name="overflow" scoped="" ref="0xb55bc750"/>
        <function-ref name="setMode" scoped="" ref="0xb55bc830"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb55bc910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55bf4d8" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55bf4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55be9a0"/>
        <function-ref name="fired" scoped="" ref="0xb55be170"/>
        <function-ref name="startAt" scoped="" ref="0xb55be660"/>
        <function-ref name="isRunning" scoped="" ref="0xb55be3e8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55bec18"/>
        <function-ref name="start" scoped="" ref="0xb55bfc28"/>
        <function-ref name="stop" scoped="" ref="0xb55bfec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb55bf060" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb55bf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb55bf238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb55bca70" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb55bca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb55bcc48"/>
        <function-ref name="getControl" scoped="" ref="0xb55bcd28"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55bce08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb55bcee8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb55bb010"/>
        <function-ref name="disableEvents" scoped="" ref="0xb55bb0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb55bb1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb55bb2b0"/>
        <function-ref name="setControl" scoped="" ref="0xb55bb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6496260" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb6496260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64969b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6496ea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6496c28"/>
        <function-ref name="overflow" scoped="" ref="0xb6499130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0xb6499d30" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0xb6499d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6494498"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6494988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6494710"/>
        <function-ref name="overflow" scoped="" ref="0xb6494c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb6490870" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb6490870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6490a48"/>
        <function-ref name="setClockSource" scoped="" ref="0xb6490b28"/>
        <function-ref name="enableEvents" scoped="" ref="0xb6490c08"/>
        <function-ref name="get" scoped="" ref="0xb6490ce8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6490dc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6490ea8"/>
        <function-ref name="getMode" scoped="" ref="0xb6488010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64880f0"/>
        <function-ref name="overflow" scoped="" ref="0xb64881d0"/>
        <function-ref name="setMode" scoped="" ref="0xb64882b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb6488390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6491768" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb6491768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6491eb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb64903c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6490150"/>
        <function-ref name="overflow" scoped="" ref="0xb6490640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb64866f8" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0xb64866f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6486e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6475350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb64750d8"/>
        <function-ref name="overflow" scoped="" ref="0xb64755c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6487490" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb6487490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6487be0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6486110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6487e58"/>
        <function-ref name="overflow" scoped="" ref="0xb6486388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55d66b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55d66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55d5b80"/>
        <function-ref name="fired" scoped="" ref="0xb55d5350"/>
        <function-ref name="startAt" scoped="" ref="0xb55d5840"/>
        <function-ref name="isRunning" scoped="" ref="0xb55d55c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55d5df8"/>
        <function-ref name="start" scoped="" ref="0xb55d6e08"/>
        <function-ref name="stop" scoped="" ref="0xb55d50d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb55d23b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0xb55d23b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb55d1878"/>
        <function-ref name="fired" scoped="" ref="0xb55d1048"/>
        <function-ref name="startAt" scoped="" ref="0xb55d1538"/>
        <function-ref name="isRunning" scoped="" ref="0xb55d12c0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55d1af0"/>
        <function-ref name="start" scoped="" ref="0xb55d2b08"/>
        <function-ref name="stop" scoped="" ref="0xb55d2da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb55d3180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb55d3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb55d38d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb55d3dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb55d3b48"/>
        <function-ref name="overflow" scoped="" ref="0xb55d2048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb6438d08" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0xb6438d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6438ee0"/>
        <function-ref name="runTask" scoped="" ref="0xb6437010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6439360" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb6439360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6438840"/>
        <function-ref name="fired" scoped="" ref="0xb6438010"/>
        <function-ref name="startAt" scoped="" ref="0xb6438500"/>
        <function-ref name="isRunning" scoped="" ref="0xb6438288"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6438ab8"/>
        <function-ref name="start" scoped="" ref="0xb6439ab0"/>
        <function-ref name="stop" scoped="" ref="0xb6439d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6450010" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6450010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb643bb00"/>
        <function-ref name="fired" scoped="" ref="0xb6450d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb643b4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb643b268"/>
        <function-ref name="getdt" scoped="" ref="0xb6439010"/>
        <function-ref name="gett0" scoped="" ref="0xb643bd58"/>
        <function-ref name="isRunning" scoped="" ref="0xb643b010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6450638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb643b7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb64508b8"/>
        <function-ref name="stop" scoped="" ref="0xb6450b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb640a948" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0xb640a948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb640ab20"/>
        <function-ref name="runTask" scoped="" ref="0xb640ac00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb640c6f0" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0xb640c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb640a248"/>
        <function-ref name="fired" scoped="" ref="0xb640b4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb640bbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb640b998"/>
        <function-ref name="getdt" scoped="" ref="0xb640a6f8"/>
        <function-ref name="gett0" scoped="" ref="0xb640a4a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb640b740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb640cd18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb640bf10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb640b010"/>
        <function-ref name="stop" scoped="" ref="0xb640b290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6435390" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb6435390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb640ef18"/>
        <function-ref name="fired" scoped="" ref="0xb640e180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb640e8b8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb640e650"/>
        <function-ref name="getdt" scoped="" ref="0xb640c400"/>
        <function-ref name="gett0" scoped="" ref="0xb640c198"/>
        <function-ref name="isRunning" scoped="" ref="0xb640e3e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64359c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb640ebe8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6435c58"/>
        <function-ref name="stop" scoped="" ref="0xb6435ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6401d80" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0xb6401d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb64073e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6407730" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb6407730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6407e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6406388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6406110"/>
        <function-ref name="overflow" scoped="" ref="0xb6406600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb63fee80" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb63fee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63fb988"/>
        <function-ref name="fired" scoped="" ref="0xb63fcc10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb63fb348"/>
        <function-ref name="isOneShot" scoped="" ref="0xb63fb0f0"/>
        <function-ref name="getdt" scoped="" ref="0xb63fbe38"/>
        <function-ref name="gett0" scoped="" ref="0xb63fbbe0"/>
        <function-ref name="isRunning" scoped="" ref="0xb63fce68"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb63fc4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb63fb668"/>
        <function-ref name="startOneShot" scoped="" ref="0xb63fc738"/>
        <function-ref name="stop" scoped="" ref="0xb63fc9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb63fac90" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb63fac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63f7790"/>
        <function-ref name="fired" scoped="" ref="0xb63f9a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb63f7150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb63f9ed0"/>
        <function-ref name="getdt" scoped="" ref="0xb63f7c40"/>
        <function-ref name="gett0" scoped="" ref="0xb63f79e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb63f9c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb63f92c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb63f7470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb63f9548"/>
        <function-ref name="stop" scoped="" ref="0xb63f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb57b7150" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb57b7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb57b7798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb57b7ab8" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb57b7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb57b6120"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb57c40e0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb57c40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb57c4728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb57c69d8" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb57c69d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb57c5770"/>
        <function-ref name="postBuffer" scoped="" ref="0xb57c5010"/>
        <function-ref name="read" scoped="" ref="0xb57c54f0"/>
        <function-ref name="readDone" scoped="" ref="0xb57c5cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0xb63d91b8" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb63d91b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb63d9390"/>
        <function-ref name="configureSingle" scoped="" ref="0xb63d9470"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb63d9550"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb63d9630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb63d9710"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb63d97f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb63d98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb63da518" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb63da518"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb63dab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb63de8b0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb63de8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63db678"/>
        <function-ref name="postBuffer" scoped="" ref="0xb63deed8"/>
        <function-ref name="read" scoped="" ref="0xb63db3f8"/>
        <function-ref name="readDone" scoped="" ref="0xb63dbbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb63d9d70" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb63d9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63d7010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63d70f0"/>
        <function-ref name="request" scoped="" ref="0xb63d71d0"/>
        <function-ref name="granted" scoped="" ref="0xb63d72b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb63d7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0xb63b84d0" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0xb63b84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb63b86a8"/>
        <function-ref name="runTask" scoped="" ref="0xb63b8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0xb63c0448" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0xb63c0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb63c0620"/>
        <function-ref name="runTask" scoped="" ref="0xb63c0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0xb63bdc88" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0xb63bdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb63bde60"/>
        <function-ref name="runTask" scoped="" ref="0xb63bc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb63d0b48" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb63d0b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63cd068"/>
        <function-ref name="fired" scoped="" ref="0xb63cf820"/>
        <function-ref name="startAt" scoped="" ref="0xb63cfd10"/>
        <function-ref name="isRunning" scoped="" ref="0xb63cfa98"/>
        <function-ref name="getAlarm" scoped="" ref="0xb63cd2e0"/>
        <function-ref name="start" scoped="" ref="0xb63cf308"/>
        <function-ref name="stop" scoped="" ref="0xb63cf5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb63d4010" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb63d4010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb6bed160"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb6bed160"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb63d41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb63d0100" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb63d0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb63d0748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0xb63d1280" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0xb63d1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb63d1458"/>
        <function-ref name="configureSingle" scoped="" ref="0xb63d1538"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb63d1618"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb63d16f8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb63d17d8"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb63d18b8"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb63d1998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb63d4780" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb63d4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63d3518"/>
        <function-ref name="postBuffer" scoped="" ref="0xb63d4da8"/>
        <function-ref name="read" scoped="" ref="0xb63d3298"/>
        <function-ref name="readDone" scoped="" ref="0xb63d3a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6395690" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb6395690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6394b50"/>
        <function-ref name="fired" scoped="" ref="0xb6394320"/>
        <function-ref name="startAt" scoped="" ref="0xb6394810"/>
        <function-ref name="isRunning" scoped="" ref="0xb6394598"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6394dc8"/>
        <function-ref name="start" scoped="" ref="0xb6395de0"/>
        <function-ref name="stop" scoped="" ref="0xb63940a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6395238" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6395238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6395410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb556cd50" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb556cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5569258"/>
        <function-ref name="fired" scoped="" ref="0xb556aa00"/>
        <function-ref name="startAt" scoped="" ref="0xb556aef0"/>
        <function-ref name="isRunning" scoped="" ref="0xb556ac78"/>
        <function-ref name="getAlarm" scoped="" ref="0xb55694d0"/>
        <function-ref name="start" scoped="" ref="0xb556a4e8"/>
        <function-ref name="stop" scoped="" ref="0xb556a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb556c8f8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb556c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb556cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb555ed68" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb555ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb555d010"/>
        <function-ref name="setEvent" scoped="" ref="0xb555d0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb555d1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb555d2b0"/>
        <function-ref name="fired" scoped="" ref="0xb555d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb5560690" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5560690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5560868"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5560948"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5560a28"/>
        <function-ref name="get" scoped="" ref="0xb5560b08"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5560be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5560cc8"/>
        <function-ref name="getMode" scoped="" ref="0xb5560da8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5560e88"/>
        <function-ref name="overflow" scoped="" ref="0xb555e010"/>
        <function-ref name="setMode" scoped="" ref="0xb555e0f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb555e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb555e330" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb555e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb555e508"/>
        <function-ref name="getControl" scoped="" ref="0xb555e5e8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb555e6c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb555e7a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb555e888"/>
        <function-ref name="disableEvents" scoped="" ref="0xb555e968"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb555ea48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb555eb28"/>
        <function-ref name="setControl" scoped="" ref="0xb555ec08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0xb5558790" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb5558790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb5558968"/>
        <function-ref name="setEvent" scoped="" ref="0xb5558a48"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb5558b28"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb5558c08"/>
        <function-ref name="fired" scoped="" ref="0xb5558ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb5559108" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5559108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb55592e0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb55593c0"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55594a0"/>
        <function-ref name="get" scoped="" ref="0xb5559580"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5559660"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5559740"/>
        <function-ref name="getMode" scoped="" ref="0xb5559820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5559900"/>
        <function-ref name="overflow" scoped="" ref="0xb55599e0"/>
        <function-ref name="setMode" scoped="" ref="0xb5559ac0"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb5559ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb555c770" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb555c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb555bc38"/>
        <function-ref name="fired" scoped="" ref="0xb555b408"/>
        <function-ref name="startAt" scoped="" ref="0xb555b8f8"/>
        <function-ref name="isRunning" scoped="" ref="0xb555b680"/>
        <function-ref name="getAlarm" scoped="" ref="0xb555beb0"/>
        <function-ref name="start" scoped="" ref="0xb555cec0"/>
        <function-ref name="stop" scoped="" ref="0xb555b190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb555c2f8" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb555c2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb555c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb5559d00" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5559d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb5559ed8"/>
        <function-ref name="getControl" scoped="" ref="0xb5558010"/>
        <function-ref name="enableEvents" scoped="" ref="0xb55580f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb55581d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb55582b0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5558390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb5558470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb5558550"/>
        <function-ref name="setControl" scoped="" ref="0xb5558630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb55687d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb55687d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5567c80"/>
        <function-ref name="fired" scoped="" ref="0xb5567450"/>
        <function-ref name="startAt" scoped="" ref="0xb5567940"/>
        <function-ref name="isRunning" scoped="" ref="0xb55676c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5567ef8"/>
        <function-ref name="start" scoped="" ref="0xb5568f20"/>
        <function-ref name="stop" scoped="" ref="0xb55671d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb55644c0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0xb55644c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5563980"/>
        <function-ref name="fired" scoped="" ref="0xb5563150"/>
        <function-ref name="startAt" scoped="" ref="0xb5563640"/>
        <function-ref name="isRunning" scoped="" ref="0xb55633c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5563bf8"/>
        <function-ref name="start" scoped="" ref="0xb5564c10"/>
        <function-ref name="stop" scoped="" ref="0xb5564eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5565278" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5565278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb55659c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5565eb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5565c40"/>
        <function-ref name="overflow" scoped="" ref="0xb5564150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0xb63767d8" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0xb63767d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63755b0"/>
        <function-ref name="postBuffer" scoped="" ref="0xb6376e10"/>
        <function-ref name="read" scoped="" ref="0xb6375320"/>
        <function-ref name="readDone" scoped="" ref="0xb6375b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb6391010" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb6391010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb6391dc8"/>
        <function-ref name="postBuffer" scoped="" ref="0xb6391648"/>
        <function-ref name="read" scoped="" ref="0xb6391b38"/>
        <function-ref name="readDone" scoped="" ref="0xb6376378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6375ec0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6375ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63730c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63731a0"/>
        <function-ref name="request" scoped="" ref="0xb6373280"/>
        <function-ref name="granted" scoped="" ref="0xb6373360"/>
        <function-ref name="isOwner" scoped="" ref="0xb6373440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb5572760" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5572760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5572938"/>
        <function-ref name="configure" scoped="" ref="0xb5572a18"/>
        <function-ref name="dataReady" scoped="" ref="0xb5572af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb5574ef8" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5574ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb55720e0"/>
        <function-ref name="configureSingle" scoped="" ref="0xb55721c0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb55722a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb5572380"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb5572460"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb5572540"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb5572620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb5572c38" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5572c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb5572e10"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb5572ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb5571140" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb5571140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5571788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5574860" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5574860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5574a38"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5574b18"/>
        <function-ref name="request" scoped="" ref="0xb5574bf8"/>
        <function-ref name="granted" scoped="" ref="0xb5574cd8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5574db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb5534090" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb5534090"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb55346d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb55349f8" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.PhotoC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb55349f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5532068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0xb6369d30" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb6369d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb6366390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0xb6369788" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0xb6369788"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb6369960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb6361df0" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb6361df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6360448"/>
        <function-ref name="readDone" scoped="" ref="0xb63606a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb6360a28" loc="46:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureC.nc">
      <component-ref qname="DemoAppC.InternalTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb6360a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb63557c8"/>
        <function-ref name="postBuffer" scoped="" ref="0xb6355068"/>
        <function-ref name="read" scoped="" ref="0xb6355548"/>
        <function-ref name="readDone" scoped="" ref="0xb6355d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb552fb20" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0xb552fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb552d1e0"/>
        <function-ref name="readDone" scoped="" ref="0xb552d438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb552d800" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb552d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb552de48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb5526030" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5526030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5526208"/>
        <function-ref name="configure" scoped="" ref="0xb55262e8"/>
        <function-ref name="dataReady" scoped="" ref="0xb55263c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb55277b0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb55277b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5527988"/>
        <function-ref name="configureSingle" scoped="" ref="0xb5527a68"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb5527b48"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb5527c28"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb5527d08"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb5527de8"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb5527ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb5526508" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5526508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb55266e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb55267c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb55269f0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb55269f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5524048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5527118" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5527118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55272f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55273d0"/>
        <function-ref name="request" scoped="" ref="0xb55274b0"/>
        <function-ref name="granted" scoped="" ref="0xb5527590"/>
        <function-ref name="isOwner" scoped="" ref="0xb5527670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb551e428" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb551e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb551ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb551ed90" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb551ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb551d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb55290e0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb55290e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5529728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0xb552c9d8" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0xb552c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0xb552b770"/>
        <function-ref name="postBuffer" scoped="" ref="0xb552b010"/>
        <function-ref name="read" scoped="" ref="0xb552b4f0"/>
        <function-ref name="readDone" scoped="" ref="0xb552bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0xb5518d88" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0xb5518d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5516010"/>
        <function-ref name="configure" scoped="" ref="0xb55160f0"/>
        <function-ref name="dataReady" scoped="" ref="0xb55161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0xb5518530" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0xb5518530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb5518708"/>
        <function-ref name="configureSingle" scoped="" ref="0xb55187e8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0xb55188c8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0xb55189a8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0xb5518a88"/>
        <function-ref name="configureMultiple" scoped="" ref="0xb5518b68"/>
        <function-ref name="singleDataReady" scoped="" ref="0xb5518c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0xb5516310" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0xb5516310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0xb55164e8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0xb55165c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0xb55167f8" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb55167f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb5516e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb551ae70" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb551ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5518070"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5518150"/>
        <function-ref name="request" scoped="" ref="0xb5518230"/>
        <function-ref name="granted" scoped="" ref="0xb5518310"/>
        <function-ref name="isOwner" scoped="" ref="0xb55183f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0xb550f668" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0xb550f668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb550fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0xb550e010" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="DemoAppC.InternalTempC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0xb550e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb550e658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0xb6356990" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalTemperatureP.nc">
      <component-ref qname="Msp430InternalTemperatureP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0xb6356990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0xb6353010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb6176580" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb6176580"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb6176758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb6177968" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb6177968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6176010"/>
        <function-ref name="readDone" scoped="" ref="0xb6176268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb6177580" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb6177580"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb6177758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb634e978" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.TempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb634e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6177010"/>
        <function-ref name="readDone" scoped="" ref="0xb6177268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0xb5505970" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0xb5505970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb5505b48"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb5505c28"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb5505d08"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb5505de8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb5505ec8"/>
        <function-ref name="reset" scoped="" ref="0xb5504010"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb55040f0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb55041d0"/>
        <function-ref name="resetDone" scoped="" ref="0xb55042b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb5504390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb5507030" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb5507030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb5507208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb5507418" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb5507418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5507a40"/>
        <function-ref name="readDone" scoped="" ref="0xb5507c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb5509080" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb5509080"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb5509258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0xb5506010" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0xb5506010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55061e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55062c8"/>
        <function-ref name="request" scoped="" ref="0xb55063a8"/>
        <function-ref name="granted" scoped="" ref="0xb5506488"/>
        <function-ref name="isOwner" scoped="" ref="0xb5506568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0xb5506dc0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0xb5506dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb5505010"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb55050f0"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb55051d0"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb55052b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb5505390"/>
        <function-ref name="reset" scoped="" ref="0xb5505470"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb5505550"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb5505630"/>
        <function-ref name="resetDone" scoped="" ref="0xb5505710"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb55057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0xb55066e8" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0xb55066e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb55068c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb55069a0"/>
        <function-ref name="request" scoped="" ref="0xb5506a80"/>
        <function-ref name="granted" scoped="" ref="0xb5506b60"/>
        <function-ref name="isOwner" scoped="" ref="0xb5506c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb5509468" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.TempC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb5509468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5509a90"/>
        <function-ref name="readDone" scoped="" ref="0xb5509ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0xb631e5e8" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0xb631e5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb631e7c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb631e8a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb631e980"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb631ea60"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb631eb40"/>
        <function-ref name="reset" scoped="" ref="0xb631ec20"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb631ed00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb631ede0"/>
        <function-ref name="resetDone" scoped="" ref="0xb631eec0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb631d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6321b18" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb6321b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6321cf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6321dd0"/>
        <function-ref name="request" scoped="" ref="0xb6321eb0"/>
        <function-ref name="granted" scoped="" ref="0xb631e010"/>
        <function-ref name="isOwner" scoped="" ref="0xb631e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0xb62d1cc8" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0xb62d1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb62d1ea0"/>
        <function-ref name="disable" scoped="" ref="0xb62d0010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb62d00f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb62d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0xb62cd6a8" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0xb62cd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb62cd880"/>
        <function-ref name="runTask" scoped="" ref="0xb62cd960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0xb62cd270" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0xb62cd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb62cd448"/>
        <function-ref name="runTask" scoped="" ref="0xb62cd528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0xb62d1350" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0xb62d1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d1528"/>
        <function-ref name="isInput" scoped="" ref="0xb62d1608"/>
        <function-ref name="toggle" scoped="" ref="0xb62d16e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d17c8"/>
        <function-ref name="get" scoped="" ref="0xb62d18a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d1988"/>
        <function-ref name="set" scoped="" ref="0xb62d1a68"/>
        <function-ref name="clr" scoped="" ref="0xb62d1b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0xb631bd68" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0xb631bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb62d2010"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb62d20f0"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb62d21d0"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb62d22b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb62d2390"/>
        <function-ref name="reset" scoped="" ref="0xb62d2470"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb62d2550"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb62d2630"/>
        <function-ref name="resetDone" scoped="" ref="0xb62d2710"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb62d27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0xb62d2970" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0xb62d2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d2b48"/>
        <function-ref name="isInput" scoped="" ref="0xb62d2c28"/>
        <function-ref name="toggle" scoped="" ref="0xb62d2d08"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d2de8"/>
        <function-ref name="get" scoped="" ref="0xb62d2ec8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d1010"/>
        <function-ref name="set" scoped="" ref="0xb62d10f0"/>
        <function-ref name="clr" scoped="" ref="0xb62d11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb62ce5d8" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb62ce5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb62ce7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb62ce890"/>
        <function-ref name="led1On" scoped="" ref="0xb62ce970"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb62cea50"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb62ceb30"/>
        <function-ref name="get" scoped="" ref="0xb62cec10"/>
        <function-ref name="led1Off" scoped="" ref="0xb62cecf0"/>
        <function-ref name="led2On" scoped="" ref="0xb62cd0f0"/>
        <function-ref name="set" scoped="" ref="0xb62ceeb0"/>
        <function-ref name="led2Off" scoped="" ref="0xb62cedd0"/>
        <function-ref name="led0On" scoped="" ref="0xb62cd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb62d03c0" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb62d03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb62cfec8"/>
        <function-ref name="fired" scoped="" ref="0xb62cf180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb62cf888"/>
        <function-ref name="isOneShot" scoped="" ref="0xb62cf630"/>
        <function-ref name="getdt" scoped="" ref="0xb62ce3a8"/>
        <function-ref name="gett0" scoped="" ref="0xb62ce150"/>
        <function-ref name="isRunning" scoped="" ref="0xb62cf3d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb62d09e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb62cfba8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb62d0c68"/>
        <function-ref name="stop" scoped="" ref="0xb62d0ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0xb62c6540" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0xb62c6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb62c6718"/>
        <function-ref name="disable" scoped="" ref="0xb62c67f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb62c68d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb62c69b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0xb62c7a88" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0xb62c7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62c7c60"/>
        <function-ref name="isInput" scoped="" ref="0xb62c7d40"/>
        <function-ref name="toggle" scoped="" ref="0xb62c7e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb62c7f00"/>
        <function-ref name="get" scoped="" ref="0xb62c6010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62c60f0"/>
        <function-ref name="set" scoped="" ref="0xb62c61d0"/>
        <function-ref name="clr" scoped="" ref="0xb62c62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0xb62c7090" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0xb62c7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62c7268"/>
        <function-ref name="isInput" scoped="" ref="0xb62c7348"/>
        <function-ref name="toggle" scoped="" ref="0xb62c7428"/>
        <function-ref name="isOutput" scoped="" ref="0xb62c7508"/>
        <function-ref name="get" scoped="" ref="0xb62c75e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62c76c8"/>
        <function-ref name="set" scoped="" ref="0xb62c77a8"/>
        <function-ref name="clr" scoped="" ref="0xb62c7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb62ca8e8" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb62ca8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb62caac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb62caba0"/>
        <function-ref name="request" scoped="" ref="0xb62cac80"/>
        <function-ref name="granted" scoped="" ref="0xb62cad60"/>
        <function-ref name="isOwner" scoped="" ref="0xb62cae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb62c4c48" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb62c4c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62c4e20"/>
        <function-ref name="isInput" scoped="" ref="0xb62c4f00"/>
        <function-ref name="setResistor" scoped="" ref="0xb62c3010"/>
        <function-ref name="toggle" scoped="" ref="0xb62c30f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62c31d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb62c32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62c3390"/>
        <function-ref name="get" scoped="" ref="0xb62c3470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb62c3550"/>
        <function-ref name="getRaw" scoped="" ref="0xb62c3630"/>
        <function-ref name="set" scoped="" ref="0xb62c3710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb62c37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb62c38d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb62c3a30"/>
        <function-ref name="clr" scoped="" ref="0xb62c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb62c42d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb62c42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62c44a8"/>
        <function-ref name="isInput" scoped="" ref="0xb62c4588"/>
        <function-ref name="toggle" scoped="" ref="0xb62c4668"/>
        <function-ref name="isOutput" scoped="" ref="0xb62c4748"/>
        <function-ref name="get" scoped="" ref="0xb62c4828"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62c4908"/>
        <function-ref name="set" scoped="" ref="0xb62c49e8"/>
        <function-ref name="clr" scoped="" ref="0xb62c4ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb62b8430" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb62b8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62b8608"/>
        <function-ref name="isInput" scoped="" ref="0xb62b86e8"/>
        <function-ref name="setResistor" scoped="" ref="0xb62b87c8"/>
        <function-ref name="toggle" scoped="" ref="0xb62b88a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb62b8988"/>
        <function-ref name="getResistor" scoped="" ref="0xb62b8a68"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62b8b48"/>
        <function-ref name="get" scoped="" ref="0xb62b8c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb62b8d08"/>
        <function-ref name="getRaw" scoped="" ref="0xb62b8de8"/>
        <function-ref name="set" scoped="" ref="0xb62b8ec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb62b7010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb62b70f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb62b7250"/>
        <function-ref name="clr" scoped="" ref="0xb62b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb62b9a58" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb62b9a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62b9c30"/>
        <function-ref name="isInput" scoped="" ref="0xb62b9d10"/>
        <function-ref name="toggle" scoped="" ref="0xb62b9df0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62b9ed0"/>
        <function-ref name="get" scoped="" ref="0xb62b8010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62b80f0"/>
        <function-ref name="set" scoped="" ref="0xb62b81d0"/>
        <function-ref name="clr" scoped="" ref="0xb62b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb62b6c18" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb62b6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62b6df0"/>
        <function-ref name="isInput" scoped="" ref="0xb62b6ed0"/>
        <function-ref name="setResistor" scoped="" ref="0xb62b5010"/>
        <function-ref name="toggle" scoped="" ref="0xb62b50f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62b51d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb62b52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62b5390"/>
        <function-ref name="get" scoped="" ref="0xb62b5470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb62b5550"/>
        <function-ref name="getRaw" scoped="" ref="0xb62b5630"/>
        <function-ref name="set" scoped="" ref="0xb62b5710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb62b57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb62b58d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb62b5a30"/>
        <function-ref name="clr" scoped="" ref="0xb62b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb62b62a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb62b62a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62b6478"/>
        <function-ref name="isInput" scoped="" ref="0xb62b6558"/>
        <function-ref name="toggle" scoped="" ref="0xb62b6638"/>
        <function-ref name="isOutput" scoped="" ref="0xb62b6718"/>
        <function-ref name="get" scoped="" ref="0xb62b67f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62b68d8"/>
        <function-ref name="set" scoped="" ref="0xb62b69b8"/>
        <function-ref name="clr" scoped="" ref="0xb62b6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb62b3440" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb62b3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb62b3618"/>
        <function-ref name="stopDone" scoped="" ref="0xb62b36f8"/>
        <function-ref name="start" scoped="" ref="0xb62b37d8"/>
        <function-ref name="stop" scoped="" ref="0xb62b38b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0xb62ab170" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0xb62ab170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb62ab348"/>
        <function-ref name="runTask" scoped="" ref="0xb62ab428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb62ac2f0" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0xb62ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62ac4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb62ac5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb62ac688"/>
        <function-ref name="isOutput" scoped="" ref="0xb62ac768"/>
        <function-ref name="get" scoped="" ref="0xb62ac848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62ac928"/>
        <function-ref name="set" scoped="" ref="0xb62aca08"/>
        <function-ref name="clr" scoped="" ref="0xb62acae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0xb62aee28" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0xb62aee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62ad050"/>
        <function-ref name="isInput" scoped="" ref="0xb62ad130"/>
        <function-ref name="toggle" scoped="" ref="0xb62ad210"/>
        <function-ref name="isOutput" scoped="" ref="0xb62ad2f0"/>
        <function-ref name="get" scoped="" ref="0xb62ad3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62ad4b0"/>
        <function-ref name="set" scoped="" ref="0xb62ad590"/>
        <function-ref name="clr" scoped="" ref="0xb62ad670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0xb62ad880" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0xb62ad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62ada58"/>
        <function-ref name="isInput" scoped="" ref="0xb62adb38"/>
        <function-ref name="toggle" scoped="" ref="0xb62adc18"/>
        <function-ref name="isOutput" scoped="" ref="0xb62adcf8"/>
        <function-ref name="get" scoped="" ref="0xb62addd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62adeb8"/>
        <function-ref name="set" scoped="" ref="0xb62ac010"/>
        <function-ref name="clr" scoped="" ref="0xb62ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb62b3b20" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb62b3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb62ae6a8"/>
        <function-ref name="fired" scoped="" ref="0xb62b0938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb62ae068"/>
        <function-ref name="isOneShot" scoped="" ref="0xb62b0de8"/>
        <function-ref name="getdt" scoped="" ref="0xb62aeb58"/>
        <function-ref name="gett0" scoped="" ref="0xb62ae900"/>
        <function-ref name="isRunning" scoped="" ref="0xb62b0b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb62b01e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb62ae388"/>
        <function-ref name="startOneShot" scoped="" ref="0xb62b0460"/>
        <function-ref name="stop" scoped="" ref="0xb62b06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb62a6238" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb62a6238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb62a5d58"/>
        <function-ref name="fired" scoped="" ref="0xb62a5010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb62a5718"/>
        <function-ref name="isOneShot" scoped="" ref="0xb62a54c0"/>
        <function-ref name="getdt" scoped="" ref="0xb62a3268"/>
        <function-ref name="gett0" scoped="" ref="0xb62a3010"/>
        <function-ref name="isRunning" scoped="" ref="0xb62a5268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb62a6860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb62a5a38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb62a6ae0"/>
        <function-ref name="stop" scoped="" ref="0xb62a6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0xb629e608" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0xb629e608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629e7e0"/>
        <function-ref name="fired" scoped="" ref="0xb629e8c0"/>
        <function-ref name="disable" scoped="" ref="0xb629e9a0"/>
        <function-ref name="edge" scoped="" ref="0xb629ea80"/>
        <function-ref name="enable" scoped="" ref="0xb629eb60"/>
        <function-ref name="getValue" scoped="" ref="0xb629ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0xb6295010" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0xb6295010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62951e8"/>
        <function-ref name="fired" scoped="" ref="0xb62952c8"/>
        <function-ref name="disable" scoped="" ref="0xb62953a8"/>
        <function-ref name="edge" scoped="" ref="0xb6295488"/>
        <function-ref name="enable" scoped="" ref="0xb6295568"/>
        <function-ref name="getValue" scoped="" ref="0xb6295648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0xb6299070" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0xb6299070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6299248"/>
        <function-ref name="fired" scoped="" ref="0xb6299328"/>
        <function-ref name="disable" scoped="" ref="0xb6299408"/>
        <function-ref name="edge" scoped="" ref="0xb62994e8"/>
        <function-ref name="enable" scoped="" ref="0xb62995c8"/>
        <function-ref name="getValue" scoped="" ref="0xb62996a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0xb6298288" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0xb6298288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6298460"/>
        <function-ref name="fired" scoped="" ref="0xb6298540"/>
        <function-ref name="disable" scoped="" ref="0xb6298620"/>
        <function-ref name="edge" scoped="" ref="0xb6298700"/>
        <function-ref name="enable" scoped="" ref="0xb62987e0"/>
        <function-ref name="getValue" scoped="" ref="0xb62988c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0xb629f448" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0xb629f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629f620"/>
        <function-ref name="fired" scoped="" ref="0xb629f700"/>
        <function-ref name="disable" scoped="" ref="0xb629f7e0"/>
        <function-ref name="edge" scoped="" ref="0xb629f8c0"/>
        <function-ref name="enable" scoped="" ref="0xb629f9a0"/>
        <function-ref name="getValue" scoped="" ref="0xb629fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0xb6297cf8" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0xb6297cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6296010"/>
        <function-ref name="fired" scoped="" ref="0xb62960f0"/>
        <function-ref name="disable" scoped="" ref="0xb62961d0"/>
        <function-ref name="edge" scoped="" ref="0xb62962b0"/>
        <function-ref name="enable" scoped="" ref="0xb6296390"/>
        <function-ref name="getValue" scoped="" ref="0xb6296470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0xb629eeb8" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0xb629eeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629a0c0"/>
        <function-ref name="fired" scoped="" ref="0xb629a1a0"/>
        <function-ref name="disable" scoped="" ref="0xb629a280"/>
        <function-ref name="edge" scoped="" ref="0xb629a360"/>
        <function-ref name="enable" scoped="" ref="0xb629a440"/>
        <function-ref name="getValue" scoped="" ref="0xb629a520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0xb62958c0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0xb62958c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6295a98"/>
        <function-ref name="fired" scoped="" ref="0xb6295b78"/>
        <function-ref name="disable" scoped="" ref="0xb6295c58"/>
        <function-ref name="edge" scoped="" ref="0xb6295d38"/>
        <function-ref name="enable" scoped="" ref="0xb6295e18"/>
        <function-ref name="getValue" scoped="" ref="0xb6295ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0xb629c250" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0xb629c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629c428"/>
        <function-ref name="fired" scoped="" ref="0xb629c508"/>
        <function-ref name="disable" scoped="" ref="0xb629c5e8"/>
        <function-ref name="edge" scoped="" ref="0xb629c6c8"/>
        <function-ref name="enable" scoped="" ref="0xb629c7a8"/>
        <function-ref name="getValue" scoped="" ref="0xb629c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0xb6298b38" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0xb6298b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6298d10"/>
        <function-ref name="fired" scoped="" ref="0xb6298df0"/>
        <function-ref name="disable" scoped="" ref="0xb6298ed0"/>
        <function-ref name="edge" scoped="" ref="0xb6297010"/>
        <function-ref name="enable" scoped="" ref="0xb62970f0"/>
        <function-ref name="getValue" scoped="" ref="0xb62971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0xb629fcf8" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0xb629fcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629fed0"/>
        <function-ref name="fired" scoped="" ref="0xb629e010"/>
        <function-ref name="disable" scoped="" ref="0xb629e0f0"/>
        <function-ref name="edge" scoped="" ref="0xb629e1d0"/>
        <function-ref name="enable" scoped="" ref="0xb629e2b0"/>
        <function-ref name="getValue" scoped="" ref="0xb629e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0xb62966e8" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0xb62966e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62968c0"/>
        <function-ref name="fired" scoped="" ref="0xb62969a0"/>
        <function-ref name="disable" scoped="" ref="0xb6296a80"/>
        <function-ref name="edge" scoped="" ref="0xb6296b60"/>
        <function-ref name="enable" scoped="" ref="0xb6296c40"/>
        <function-ref name="getValue" scoped="" ref="0xb6296d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0xb629a798" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0xb629a798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629a970"/>
        <function-ref name="fired" scoped="" ref="0xb629aa50"/>
        <function-ref name="disable" scoped="" ref="0xb629ab30"/>
        <function-ref name="edge" scoped="" ref="0xb629ac10"/>
        <function-ref name="enable" scoped="" ref="0xb629acf0"/>
        <function-ref name="getValue" scoped="" ref="0xb629add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0xb6299920" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0xb6299920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6299af8"/>
        <function-ref name="fired" scoped="" ref="0xb6299bd8"/>
        <function-ref name="disable" scoped="" ref="0xb6299cb8"/>
        <function-ref name="edge" scoped="" ref="0xb6299d98"/>
        <function-ref name="enable" scoped="" ref="0xb6299e78"/>
        <function-ref name="getValue" scoped="" ref="0xb6298010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0xb629cb00" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0xb629cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb629ccd8"/>
        <function-ref name="fired" scoped="" ref="0xb629cdb8"/>
        <function-ref name="disable" scoped="" ref="0xb629ce98"/>
        <function-ref name="edge" scoped="" ref="0xb629f010"/>
        <function-ref name="enable" scoped="" ref="0xb629f0f0"/>
        <function-ref name="getValue" scoped="" ref="0xb629f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0xb6297448" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0xb6297448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6297620"/>
        <function-ref name="fired" scoped="" ref="0xb6297700"/>
        <function-ref name="disable" scoped="" ref="0xb62977e0"/>
        <function-ref name="edge" scoped="" ref="0xb62978c0"/>
        <function-ref name="enable" scoped="" ref="0xb62979a0"/>
        <function-ref name="getValue" scoped="" ref="0xb6297a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0xb6290cf8" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0xb6290cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6290ed0"/>
        <function-ref name="fired" scoped="" ref="0xb628f010"/>
        <function-ref name="disable" scoped="" ref="0xb628f0f0"/>
        <function-ref name="edge" scoped="" ref="0xb628f1d0"/>
        <function-ref name="enable" scoped="" ref="0xb628f2b0"/>
        <function-ref name="getValue" scoped="" ref="0xb628f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0xb628a6e8" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0xb628a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628a8c0"/>
        <function-ref name="fired" scoped="" ref="0xb628a9a0"/>
        <function-ref name="disable" scoped="" ref="0xb628aa80"/>
        <function-ref name="edge" scoped="" ref="0xb628ab60"/>
        <function-ref name="enable" scoped="" ref="0xb628ac40"/>
        <function-ref name="getValue" scoped="" ref="0xb628ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0xb628e798" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0xb628e798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628e970"/>
        <function-ref name="fired" scoped="" ref="0xb628ea50"/>
        <function-ref name="disable" scoped="" ref="0xb628eb30"/>
        <function-ref name="edge" scoped="" ref="0xb628ec10"/>
        <function-ref name="enable" scoped="" ref="0xb628ecf0"/>
        <function-ref name="getValue" scoped="" ref="0xb628edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0xb628d920" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0xb628d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628daf8"/>
        <function-ref name="fired" scoped="" ref="0xb628dbd8"/>
        <function-ref name="disable" scoped="" ref="0xb628dcb8"/>
        <function-ref name="edge" scoped="" ref="0xb628dd98"/>
        <function-ref name="enable" scoped="" ref="0xb628de78"/>
        <function-ref name="getValue" scoped="" ref="0xb628c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0xb6291b38" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0xb6291b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6291d10"/>
        <function-ref name="fired" scoped="" ref="0xb6291df0"/>
        <function-ref name="disable" scoped="" ref="0xb6291ed0"/>
        <function-ref name="edge" scoped="" ref="0xb6290010"/>
        <function-ref name="enable" scoped="" ref="0xb62900f0"/>
        <function-ref name="getValue" scoped="" ref="0xb62901d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0xb628b448" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0xb628b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628b6a0"/>
        <function-ref name="fired" scoped="" ref="0xb628b780"/>
        <function-ref name="disable" scoped="" ref="0xb628b860"/>
        <function-ref name="edge" scoped="" ref="0xb628b940"/>
        <function-ref name="enable" scoped="" ref="0xb628ba20"/>
        <function-ref name="getValue" scoped="" ref="0xb628bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0xb628f608" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0xb628f608"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628f7e0"/>
        <function-ref name="fired" scoped="" ref="0xb628f8c0"/>
        <function-ref name="disable" scoped="" ref="0xb628f9a0"/>
        <function-ref name="edge" scoped="" ref="0xb628fa80"/>
        <function-ref name="enable" scoped="" ref="0xb628fb60"/>
        <function-ref name="getValue" scoped="" ref="0xb628fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0xb6289010" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0xb6289010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62891e8"/>
        <function-ref name="fired" scoped="" ref="0xb62892c8"/>
        <function-ref name="disable" scoped="" ref="0xb62893a8"/>
        <function-ref name="edge" scoped="" ref="0xb6289488"/>
        <function-ref name="enable" scoped="" ref="0xb6289568"/>
        <function-ref name="getValue" scoped="" ref="0xb6289648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0xb62949a0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0xb62949a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6294b78"/>
        <function-ref name="fired" scoped="" ref="0xb6294c58"/>
        <function-ref name="disable" scoped="" ref="0xb6294d38"/>
        <function-ref name="edge" scoped="" ref="0xb6294e18"/>
        <function-ref name="enable" scoped="" ref="0xb6294ef8"/>
        <function-ref name="getValue" scoped="" ref="0xb6291010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0xb628c288" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0xb628c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628c460"/>
        <function-ref name="fired" scoped="" ref="0xb628c540"/>
        <function-ref name="disable" scoped="" ref="0xb628c620"/>
        <function-ref name="edge" scoped="" ref="0xb628c700"/>
        <function-ref name="enable" scoped="" ref="0xb628c7e0"/>
        <function-ref name="getValue" scoped="" ref="0xb628c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0xb6290448" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0xb6290448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6290620"/>
        <function-ref name="fired" scoped="" ref="0xb6290700"/>
        <function-ref name="disable" scoped="" ref="0xb62907e0"/>
        <function-ref name="edge" scoped="" ref="0xb62908c0"/>
        <function-ref name="enable" scoped="" ref="0xb62909a0"/>
        <function-ref name="getValue" scoped="" ref="0xb6290a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0xb628bd78" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0xb628bd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628a010"/>
        <function-ref name="fired" scoped="" ref="0xb628a0f0"/>
        <function-ref name="disable" scoped="" ref="0xb628a1d0"/>
        <function-ref name="edge" scoped="" ref="0xb628a2b0"/>
        <function-ref name="enable" scoped="" ref="0xb628a390"/>
        <function-ref name="getValue" scoped="" ref="0xb628a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0xb628feb8" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0xb628feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628e0c0"/>
        <function-ref name="fired" scoped="" ref="0xb628e1a0"/>
        <function-ref name="disable" scoped="" ref="0xb628e280"/>
        <function-ref name="edge" scoped="" ref="0xb628e360"/>
        <function-ref name="enable" scoped="" ref="0xb628e440"/>
        <function-ref name="getValue" scoped="" ref="0xb628e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0xb628d070" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0xb628d070"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628d248"/>
        <function-ref name="fired" scoped="" ref="0xb628d328"/>
        <function-ref name="disable" scoped="" ref="0xb628d408"/>
        <function-ref name="edge" scoped="" ref="0xb628d4e8"/>
        <function-ref name="enable" scoped="" ref="0xb628d5c8"/>
        <function-ref name="getValue" scoped="" ref="0xb628d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0xb6291288" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0xb6291288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6291460"/>
        <function-ref name="fired" scoped="" ref="0xb6291540"/>
        <function-ref name="disable" scoped="" ref="0xb6291620"/>
        <function-ref name="edge" scoped="" ref="0xb6291700"/>
        <function-ref name="enable" scoped="" ref="0xb62917e0"/>
        <function-ref name="getValue" scoped="" ref="0xb62918c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0xb628cb38" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0xb628cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb628cd10"/>
        <function-ref name="fired" scoped="" ref="0xb628cdf0"/>
        <function-ref name="disable" scoped="" ref="0xb628ced0"/>
        <function-ref name="edge" scoped="" ref="0xb628b010"/>
        <function-ref name="enable" scoped="" ref="0xb628b0f0"/>
        <function-ref name="getValue" scoped="" ref="0xb628b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0xb62158c0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0xb62158c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6215a98"/>
        <function-ref name="fired" scoped="" ref="0xb6215b78"/>
        <function-ref name="disable" scoped="" ref="0xb6215c58"/>
        <function-ref name="edge" scoped="" ref="0xb6215d38"/>
        <function-ref name="enable" scoped="" ref="0xb6215e18"/>
        <function-ref name="getValue" scoped="" ref="0xb6215ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb62152c8" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0xb62152c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb62154a0"/>
        <function-ref name="disable" scoped="" ref="0xb6215580"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb6215660"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6215740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb61c91e8" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb61c91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb61c93d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb61c94b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb61c8208" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb61c8208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb61c83f0"/>
        <function-ref name="configure" scoped="" ref="0xb61c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb61c95f0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb61c95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb61c97c8"/>
        <function-ref name="requested" scoped="" ref="0xb61c98a8"/>
        <function-ref name="granted" scoped="" ref="0xb61c9988"/>
        <function-ref name="isOwner" scoped="" ref="0xb61c9a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb61c9b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb62099e8" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb62099e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6209bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6209cb0"/>
        <function-ref name="request" scoped="" ref="0xb6209d90"/>
        <function-ref name="granted" scoped="" ref="0xb6209e70"/>
        <function-ref name="isOwner" scoped="" ref="0xb61c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb61c9c88" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb61c9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb61c9e60"/>
        <function-ref name="userId" scoped="" ref="0xb61c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb54b5430" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb54b5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb54b5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb54b5768" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb54b5768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb54b5940"/>
        <function-ref name="isEmpty" scoped="" ref="0xb54b5a20"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb54b5b00"/>
        <function-ref name="dequeue" scoped="" ref="0xb54b5be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb54b3030" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb54b3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb54b3218"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb54b32f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb54b1010" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb54b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb54b11f8"/>
        <function-ref name="configure" scoped="" ref="0xb54b12d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb54b1438" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb54b1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb54b1610"/>
        <function-ref name="isEmpty" scoped="" ref="0xb54b16f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb54b17d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb54b18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb54b3438" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb54b3438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb54b3610"/>
        <function-ref name="requested" scoped="" ref="0xb54b36f0"/>
        <function-ref name="granted" scoped="" ref="0xb54b37d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb54b38b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb54b3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb54b19f0" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb54b19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb54b1bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb54b1ca8"/>
        <function-ref name="led1On" scoped="" ref="0xb54b1d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb54b1e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb54b0010"/>
        <function-ref name="get" scoped="" ref="0xb54b00f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb54b01d0"/>
        <function-ref name="led0On" scoped="" ref="0xb54b0550"/>
        <function-ref name="set" scoped="" ref="0xb54b0390"/>
        <function-ref name="led2On" scoped="" ref="0xb54b02b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb54b0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb54b48d0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb54b48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb54b4ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb54b4b98"/>
        <function-ref name="request" scoped="" ref="0xb54b4c78"/>
        <function-ref name="granted" scoped="" ref="0xb54b4d58"/>
        <function-ref name="isOwner" scoped="" ref="0xb54b4e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb54b3ad0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb54b3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb54b3ca8"/>
        <function-ref name="userId" scoped="" ref="0xb54b3d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb54b06d0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb54b06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb54b08a8"/>
        <function-ref name="runTask" scoped="" ref="0xb54b0988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb61c6ca0" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb61c6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb61c6e78"/>
        <function-ref name="stopDone" scoped="" ref="0xb61c5010"/>
        <function-ref name="start" scoped="" ref="0xb61c50f0"/>
        <function-ref name="stop" scoped="" ref="0xb61c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb61c5310" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb61c5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb61c54e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb61c5628" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb61c5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb61c5800"/>
        <function-ref name="requested" scoped="" ref="0xb61c58e0"/>
        <function-ref name="granted" scoped="" ref="0xb61c59c0"/>
        <function-ref name="isOwner" scoped="" ref="0xb61c5aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb61c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb61c5cc0" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb61c5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb61c5e98"/>
        <function-ref name="userId" scoped="" ref="0xb61aa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb54962e0" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb54962e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb54964b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb5496598"/>
        <function-ref name="start" scoped="" ref="0xb5496678"/>
        <function-ref name="stop" scoped="" ref="0xb5496758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb5496898" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5496898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb5496a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0xb5495748" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0xb5495748"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5495920"/>
        <function-ref name="runTask" scoped="" ref="0xb5495a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb5496bb0" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5496bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5496d88"/>
        <function-ref name="requested" scoped="" ref="0xb5496e68"/>
        <function-ref name="granted" scoped="" ref="0xb5495010"/>
        <function-ref name="isOwner" scoped="" ref="0xb54950f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb54951d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0xb5495b80" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0xb5495b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5495d58"/>
        <function-ref name="runTask" scoped="" ref="0xb5495e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0xb5498ed0" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5498ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb54960c0"/>
        <function-ref name="stop" scoped="" ref="0xb54961a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5495310" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5495310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb54954e8"/>
        <function-ref name="userId" scoped="" ref="0xb54955c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb61a5dc0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb61a5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb61a38e0"/>
        <function-ref name="fired" scoped="" ref="0xb61a4b60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb61a32a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb61a3048"/>
        <function-ref name="getdt" scoped="" ref="0xb61a3d90"/>
        <function-ref name="gett0" scoped="" ref="0xb61a3b38"/>
        <function-ref name="isRunning" scoped="" ref="0xb61a4db8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb61a4408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb61a35c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb61a4688"/>
        <function-ref name="stop" scoped="" ref="0xb61a4908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb61a1b80" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb61a1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb61a1d58"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb61a1e38"/>
        <function-ref name="led1On" scoped="" ref="0xb61a1f18"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb619e010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb619e0f0"/>
        <function-ref name="get" scoped="" ref="0xb619e1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb619e2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb619e630"/>
        <function-ref name="set" scoped="" ref="0xb619e390"/>
        <function-ref name="led0On" scoped="" ref="0xb619e470"/>
        <function-ref name="led2On" scoped="" ref="0xb619e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb619bef8" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0xb619bef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb619a0e0"/>
        <function-ref name="isInput" scoped="" ref="0xb619a1c0"/>
        <function-ref name="toggle" scoped="" ref="0xb619a2a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb619a380"/>
        <function-ref name="get" scoped="" ref="0xb619a460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb619a540"/>
        <function-ref name="set" scoped="" ref="0xb619a620"/>
        <function-ref name="clr" scoped="" ref="0xb619a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb619eeb0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb619eeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb619b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb619a8f0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0xb619a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb619aac8"/>
        <function-ref name="isInput" scoped="" ref="0xb619aba8"/>
        <function-ref name="toggle" scoped="" ref="0xb619ac88"/>
        <function-ref name="isOutput" scoped="" ref="0xb619ad68"/>
        <function-ref name="get" scoped="" ref="0xb619ae48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb619af28"/>
        <function-ref name="set" scoped="" ref="0xb6199018"/>
        <function-ref name="clr" scoped="" ref="0xb61990f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb619b230" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb619b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb619b408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb619b4e8"/>
        <function-ref name="led1On" scoped="" ref="0xb619b5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb619b6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb619b788"/>
        <function-ref name="get" scoped="" ref="0xb619b868"/>
        <function-ref name="led1Off" scoped="" ref="0xb619b948"/>
        <function-ref name="led2Off" scoped="" ref="0xb619bcc8"/>
        <function-ref name="set" scoped="" ref="0xb619ba28"/>
        <function-ref name="led0On" scoped="" ref="0xb619bb08"/>
        <function-ref name="led2On" scoped="" ref="0xb619bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb61992e8" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0xb61992e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61994c0"/>
        <function-ref name="isInput" scoped="" ref="0xb61995a0"/>
        <function-ref name="toggle" scoped="" ref="0xb6199680"/>
        <function-ref name="isOutput" scoped="" ref="0xb6199760"/>
        <function-ref name="get" scoped="" ref="0xb6199840"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6199920"/>
        <function-ref name="set" scoped="" ref="0xb6199a00"/>
        <function-ref name="clr" scoped="" ref="0xb6199ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb619dd58" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0xb619dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6188010"/>
        <function-ref name="isInput" scoped="" ref="0xb61880f0"/>
        <function-ref name="toggle" scoped="" ref="0xb61881d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb61882b0"/>
        <function-ref name="get" scoped="" ref="0xb6188390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6188470"/>
        <function-ref name="set" scoped="" ref="0xb6188550"/>
        <function-ref name="clr" scoped="" ref="0xb6188630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb6188840" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0xb6188840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6188a18"/>
        <function-ref name="isInput" scoped="" ref="0xb6188af8"/>
        <function-ref name="toggle" scoped="" ref="0xb6188bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6188cb8"/>
        <function-ref name="get" scoped="" ref="0xb6188d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6188e78"/>
        <function-ref name="set" scoped="" ref="0xb6187010"/>
        <function-ref name="clr" scoped="" ref="0xb61870f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb6187c88" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6187c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6187e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb6187300" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0xb6187300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61874d8"/>
        <function-ref name="isInput" scoped="" ref="0xb61875b8"/>
        <function-ref name="toggle" scoped="" ref="0xb6187698"/>
        <function-ref name="isOutput" scoped="" ref="0xb6187778"/>
        <function-ref name="get" scoped="" ref="0xb6187858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6187938"/>
        <function-ref name="set" scoped="" ref="0xb6187a18"/>
        <function-ref name="clr" scoped="" ref="0xb6187af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6185350" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6185350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6185528"/>
        <function-ref name="isInput" scoped="" ref="0xb6185608"/>
        <function-ref name="setResistor" scoped="" ref="0xb61856e8"/>
        <function-ref name="toggle" scoped="" ref="0xb61857c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb61858a8"/>
        <function-ref name="getResistor" scoped="" ref="0xb6185988"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6185a68"/>
        <function-ref name="get" scoped="" ref="0xb6185b48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6185c28"/>
        <function-ref name="getRaw" scoped="" ref="0xb6185d08"/>
        <function-ref name="set" scoped="" ref="0xb6185de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6185ec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb6184010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6184170"/>
        <function-ref name="clr" scoped="" ref="0xb6184250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb61869b8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb61869b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6186b90"/>
        <function-ref name="isInput" scoped="" ref="0xb6186c70"/>
        <function-ref name="toggle" scoped="" ref="0xb6186d50"/>
        <function-ref name="isOutput" scoped="" ref="0xb6186e30"/>
        <function-ref name="get" scoped="" ref="0xb6186f10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6185010"/>
        <function-ref name="set" scoped="" ref="0xb61850f0"/>
        <function-ref name="clr" scoped="" ref="0xb61851d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6183b20" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6183b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6183cf8"/>
        <function-ref name="isInput" scoped="" ref="0xb6183dd8"/>
        <function-ref name="setResistor" scoped="" ref="0xb6183eb8"/>
        <function-ref name="toggle" scoped="" ref="0xb6182010"/>
        <function-ref name="isOutput" scoped="" ref="0xb61820f0"/>
        <function-ref name="getResistor" scoped="" ref="0xb61821d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61822b0"/>
        <function-ref name="get" scoped="" ref="0xb6182390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6182470"/>
        <function-ref name="getRaw" scoped="" ref="0xb6182550"/>
        <function-ref name="set" scoped="" ref="0xb6182630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6182710"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb61827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6182950"/>
        <function-ref name="clr" scoped="" ref="0xb6182a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb61831a8" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb61831a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6183380"/>
        <function-ref name="isInput" scoped="" ref="0xb6183460"/>
        <function-ref name="toggle" scoped="" ref="0xb6183540"/>
        <function-ref name="isOutput" scoped="" ref="0xb6183620"/>
        <function-ref name="get" scoped="" ref="0xb6183700"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61837e0"/>
        <function-ref name="set" scoped="" ref="0xb61838c0"/>
        <function-ref name="clr" scoped="" ref="0xb61839a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6180350" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6180350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6180528"/>
        <function-ref name="isInput" scoped="" ref="0xb6180608"/>
        <function-ref name="setResistor" scoped="" ref="0xb61806e8"/>
        <function-ref name="toggle" scoped="" ref="0xb61807c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb61808a8"/>
        <function-ref name="getResistor" scoped="" ref="0xb6180988"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6180a68"/>
        <function-ref name="get" scoped="" ref="0xb6180b48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6180c28"/>
        <function-ref name="getRaw" scoped="" ref="0xb6180d08"/>
        <function-ref name="set" scoped="" ref="0xb6180de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb6180ec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb617f010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb617f170"/>
        <function-ref name="clr" scoped="" ref="0xb617f250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6181990" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6181990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6181b68"/>
        <function-ref name="isInput" scoped="" ref="0xb6181c48"/>
        <function-ref name="toggle" scoped="" ref="0xb6181d28"/>
        <function-ref name="isOutput" scoped="" ref="0xb6181e08"/>
        <function-ref name="get" scoped="" ref="0xb6181ee8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6180010"/>
        <function-ref name="set" scoped="" ref="0xb61800f0"/>
        <function-ref name="clr" scoped="" ref="0xb61801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb6173010" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb6173010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb61731e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb61743f8" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb61743f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6174a20"/>
        <function-ref name="readDone" scoped="" ref="0xb6174c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb6174010" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb6174010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb61741e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb6175450" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="DemoAppC.HumidityC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb6175450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6175a78"/>
        <function-ref name="readDone" scoped="" ref="0xb6175cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0xb5475430" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0xb5475430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb5475608"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb54756e8"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb54757c8"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb54758a8"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb5475988"/>
        <function-ref name="reset" scoped="" ref="0xb5475a68"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb5475b48"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb5475c28"/>
        <function-ref name="resetDone" scoped="" ref="0xb5475d08"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb5475de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0xb5479ac8" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0xb5479ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb5479ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0xb5479eb0" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0xb5479eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb54784e8"/>
        <function-ref name="readDone" scoped="" ref="0xb5478740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0xb547aaf8" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0xb547aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0xb547acd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0xb5478a58" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0xb5478a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5478c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5478d10"/>
        <function-ref name="request" scoped="" ref="0xb5478df0"/>
        <function-ref name="granted" scoped="" ref="0xb5478ed0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5476010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0xb5476868" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0xb5476868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0xb5476a40"/>
        <function-ref name="readStatusReg" scoped="" ref="0xb5476b20"/>
        <function-ref name="measureHumidity" scoped="" ref="0xb5476c00"/>
        <function-ref name="measureTemperature" scoped="" ref="0xb5476ce0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0xb5476dc0"/>
        <function-ref name="reset" scoped="" ref="0xb5476ea0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0xb5475010"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0xb54750f0"/>
        <function-ref name="resetDone" scoped="" ref="0xb54751d0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0xb54752b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0xb5476190" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0xb5476190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5476368"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5476448"/>
        <function-ref name="request" scoped="" ref="0xb5476528"/>
        <function-ref name="granted" scoped="" ref="0xb5476608"/>
        <function-ref name="isOwner" scoped="" ref="0xb54766e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0xb547aee0" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="DemoAppC.HumidityC.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0xb547aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5479558"/>
        <function-ref name="readDone" scoped="" ref="0xb54797b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6173d40" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb6173d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6173f18"/>
        <function-ref name="stopDone" scoped="" ref="0xb616f010"/>
        <function-ref name="start" scoped="" ref="0xb616f0f0"/>
        <function-ref name="stop" scoped="" ref="0xb616f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb616f630" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb616f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb616f808"/>
        <function-ref name="getPayload" scoped="" ref="0xb616f8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb616f9c8"/>
        <function-ref name="cancel" scoped="" ref="0xb616faa8"/>
        <function-ref name="sendDone" scoped="" ref="0xb616fb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb616e100" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0xb616e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb616e2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb616e458" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb616e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb616e630"/>
        <function-ref name="payloadLength" scoped="" ref="0xb616e710"/>
        <function-ref name="getPayload" scoped="" ref="0xb616e7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb616e8d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb616e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb6169010" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb6169010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6169b18"/>
        <function-ref name="clear" scoped="" ref="0xb6169ed0"/>
        <function-ref name="isValid" scoped="" ref="0xb6169760"/>
        <function-ref name="set" scoped="" ref="0xb615e2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb614f988" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb614f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb614fb60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb614fc40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb614fd20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb614fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb616aa38" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb616aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb616ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb615d648" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb615d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb615d820"/>
        <function-ref name="noAck" scoped="" ref="0xb615d900"/>
        <function-ref name="wasAcked" scoped="" ref="0xb615d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb61603b8" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb61603b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6160590"/>
        <function-ref name="source" scoped="" ref="0xb6160670"/>
        <function-ref name="address" scoped="" ref="0xb6160750"/>
        <function-ref name="destination" scoped="" ref="0xb6160830"/>
        <function-ref name="setSource" scoped="" ref="0xb6160910"/>
        <function-ref name="setDestination" scoped="" ref="0xb61609f0"/>
        <function-ref name="type" scoped="" ref="0xb6160ad0"/>
        <function-ref name="setType" scoped="" ref="0xb6160bb0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6160c90"/>
        <function-ref name="setGroup" scoped="" ref="0xb6160d70"/>
        <function-ref name="localGroup" scoped="" ref="0xb6160e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb615e9e8" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb615e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb61555b8"/>
        <function-ref name="clear" scoped="" ref="0xb6155970"/>
        <function-ref name="isValid" scoped="" ref="0xb6155200"/>
        <function-ref name="set" scoped="" ref="0xb6155d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb61475a8" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb61475a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6147780"/>
        <function-ref name="stopDone" scoped="" ref="0xb6147860"/>
        <function-ref name="start" scoped="" ref="0xb6147940"/>
        <function-ref name="stop" scoped="" ref="0xb6147a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb6138df0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb6138df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb6142010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb61420f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb61421d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb61422b0"/>
        <function-ref name="setCca" scoped="" ref="0xb6142390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb6142470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6130ab8" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0xb6130ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6130d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6145e90" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb6145e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6144080"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6144160"/>
        <function-ref name="getPayload" scoped="" ref="0xb6144240"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6144320"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6144400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6147e80" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb6147e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6146070"/>
        <function-ref name="getPayload" scoped="" ref="0xb6146150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6146230"/>
        <function-ref name="cancel" scoped="" ref="0xb6146310"/>
        <function-ref name="sendDone" scoped="" ref="0xb61463f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6146ef0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0xb6146ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb61450e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb613e6a8" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb613e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb613e880"/>
        <function-ref name="setNetwork" scoped="" ref="0xb613e960"/>
        <function-ref name="getRssi" scoped="" ref="0xb613ea40"/>
        <function-ref name="getNetwork" scoped="" ref="0xb613eb20"/>
        <function-ref name="getPower" scoped="" ref="0xb613ec00"/>
        <function-ref name="getLqi" scoped="" ref="0xb613ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6142660" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb6142660"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6142838"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6142918"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb61429f8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6142ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6146858" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb6146858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6146a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb613ef00" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb613ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb61430f0"/>
        <function-ref name="noAck" scoped="" ref="0xb61431d0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb61432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6137010" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb6137010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb61371e8"/>
        <function-ref name="setRetries" scoped="" ref="0xb61372c8"/>
        <function-ref name="getRetries" scoped="" ref="0xb61373a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6137488"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6137568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6145278" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb6145278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6145450"/>
        <function-ref name="source" scoped="" ref="0xb6145530"/>
        <function-ref name="address" scoped="" ref="0xb6145610"/>
        <function-ref name="destination" scoped="" ref="0xb61456f0"/>
        <function-ref name="setSource" scoped="" ref="0xb61457d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb61458b0"/>
        <function-ref name="type" scoped="" ref="0xb6145990"/>
        <function-ref name="setType" scoped="" ref="0xb6145a70"/>
        <function-ref name="isForMe" scoped="" ref="0xb6145b50"/>
        <function-ref name="setGroup" scoped="" ref="0xb6145c30"/>
        <function-ref name="localGroup" scoped="" ref="0xb6145d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb613b310" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb613b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb613b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6136cd0" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb6136cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6136ea8"/>
        <function-ref name="stopDone" scoped="" ref="0xb612e010"/>
        <function-ref name="start" scoped="" ref="0xb612e0f0"/>
        <function-ref name="stop" scoped="" ref="0xb612e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb61258a0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb61258a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6125a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb61242a0" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb61242a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6124478"/>
        <function-ref name="setRetries" scoped="" ref="0xb6124558"/>
        <function-ref name="getRetries" scoped="" ref="0xb6124638"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6124718"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb61247f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb612ca50" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb612ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb612cc28"/>
        <function-ref name="setNetwork" scoped="" ref="0xb612cd08"/>
        <function-ref name="getRssi" scoped="" ref="0xb612cde8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb612cec8"/>
        <function-ref name="getPower" scoped="" ref="0xb6125010"/>
        <function-ref name="getLqi" scoped="" ref="0xb61250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb612df18" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0xb612df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb612c108"/>
        <function-ref name="getPayload" scoped="" ref="0xb612c1e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb612c2c8"/>
        <function-ref name="cancel" scoped="" ref="0xb612c3a8"/>
        <function-ref name="sendDone" scoped="" ref="0xb612c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6125c68" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb6125c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6125e40"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6125f20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6124018"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb61240f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb612d3e8" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0xb612d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb612d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6125310" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6125310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb61254e8"/>
        <function-ref name="noAck" scoped="" ref="0xb61255c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb61256a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb612e688" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb612e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb612e860"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb612e940"/>
        <function-ref name="request" scoped="" ref="0xb612ea20"/>
        <function-ref name="granted" scoped="" ref="0xb612eb00"/>
        <function-ref name="isOwner" scoped="" ref="0xb612ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6127c58" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0xb6127c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6127e30"/>
        <function-ref name="getPayload" scoped="" ref="0xb6127f10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb612d010"/>
        <function-ref name="cancel" scoped="" ref="0xb612d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb612d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb612d7c8" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0xb612d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb612d9a0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb612da80"/>
        <function-ref name="getPayload" scoped="" ref="0xb612db60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb612dc40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb612dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb612c6b8" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0xb612c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb612c890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6121010" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb6121010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb61211e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb61212c8"/>
        <function-ref name="start" scoped="" ref="0xb61213a8"/>
        <function-ref name="stop" scoped="" ref="0xb6121488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb61200f0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb61200f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb61202c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb61203a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb6120488"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb6120568"/>
        <function-ref name="setCca" scoped="" ref="0xb6120648"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb6120728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6121618" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb6121618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb61217f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb61218d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61219b0"/>
        <function-ref name="cancel" scoped="" ref="0xb6121a90"/>
        <function-ref name="sendDone" scoped="" ref="0xb6121b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6121d18" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb6121d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6121ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb611c0e0" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb611c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb611c2b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb611c398"/>
        <function-ref name="start" scoped="" ref="0xb611c478"/>
        <function-ref name="stop" scoped="" ref="0xb611c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb611ce20" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb611ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb611b010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb611b0f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb611b1d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb611b2b0"/>
        <function-ref name="setCca" scoped="" ref="0xb611b390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb611b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb6119098" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0xb6119098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb6119270"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb6119350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb6119430"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb6119510"/>
        <function-ref name="setCca" scoped="" ref="0xb61195f0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb61196d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb6114650" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb6114650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb6114828"/>
        <function-ref name="setNetwork" scoped="" ref="0xb6114908"/>
        <function-ref name="getRssi" scoped="" ref="0xb61149e8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb6114ac8"/>
        <function-ref name="getPower" scoped="" ref="0xb6114ba8"/>
        <function-ref name="getLqi" scoped="" ref="0xb6114c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0xb6110888" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0xb6110888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6110a60"/>
        <function-ref name="cancel" scoped="" ref="0xb6110b40"/>
        <function-ref name="modify" scoped="" ref="0xb6110c20"/>
        <function-ref name="sendDone" scoped="" ref="0xb6110d00"/>
        <function-ref name="resend" scoped="" ref="0xb6110de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb611c6e8" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb611c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb611c8c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb611c9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb611ca80"/>
        <function-ref name="cancel" scoped="" ref="0xb611cb60"/>
        <function-ref name="sendDone" scoped="" ref="0xb611cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb610e4e8" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb610e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb610e6c0"/>
        <function-ref name="rand32" scoped="" ref="0xb610e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb611a260" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0xb611a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb611a438"/>
        <function-ref name="stop" scoped="" ref="0xb611a518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb610ae18" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb610ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb610f010"/>
        <function-ref name="getHeader" scoped="" ref="0xb610f0f0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb610f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0xb61157e0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0xb61157e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb61159b8"/>
        <function-ref name="rfOff" scoped="" ref="0xb6115a98"/>
        <function-ref name="rxOn" scoped="" ref="0xb6115b78"/>
        <function-ref name="startVReg" scoped="" ref="0xb6115c58"/>
        <function-ref name="stopVReg" scoped="" ref="0xb6115d38"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb6115e18"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb6115ef8"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb611a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb610e930" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb610e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb610eb08"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb610ebe8"/>
        <function-ref name="led1On" scoped="" ref="0xb610ecc8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb610eda8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb610ee88"/>
        <function-ref name="get" scoped="" ref="0xb6114010"/>
        <function-ref name="led1Off" scoped="" ref="0xb61140f0"/>
        <function-ref name="led2Off" scoped="" ref="0xb6114470"/>
        <function-ref name="set" scoped="" ref="0xb61141d0"/>
        <function-ref name="led0On" scoped="" ref="0xb61142b0"/>
        <function-ref name="led2On" scoped="" ref="0xb6114390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb611b628" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb611b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb611b800"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb611b8e0"/>
        <function-ref name="request" scoped="" ref="0xb611b9c0"/>
        <function-ref name="granted" scoped="" ref="0xb611baa0"/>
        <function-ref name="isOwner" scoped="" ref="0xb611bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0xb61076e0" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0xb61076e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb6107938"/>
        <function-ref name="toIdle" scoped="" ref="0xb6107a18"/>
        <function-ref name="isState" scoped="" ref="0xb6107af8"/>
        <function-ref name="isIdle" scoped="" ref="0xb6107bd8"/>
        <function-ref name="requestState" scoped="" ref="0xb6107cb8"/>
        <function-ref name="forceState" scoped="" ref="0xb6107d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0xb6105980" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0xb6105980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6105b58"/>
        <function-ref name="runTask" scoped="" ref="0xb6105c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0xb6105170" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0xb6105170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6105348"/>
        <function-ref name="runTask" scoped="" ref="0xb6105428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0xb6109890" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0xb6109890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6109a68"/>
        <function-ref name="runTask" scoped="" ref="0xb6109b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb60d1df8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb60d1df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb60d8010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb60d80f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb60d81d0"/>
        <function-ref name="syncDone" scoped="" ref="0xb60d82b0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb60d8390"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb60d8470"/>
        <function-ref name="setChannel" scoped="" ref="0xb60d8550"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb60d8630"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb60d8710"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb60d87f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb60d88d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb60d89b0"/>
        <function-ref name="sync" scoped="" ref="0xb60d8a90"/>
        <function-ref name="getChannel" scoped="" ref="0xb60d8bf0"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb60d8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb60d79d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0xb60d79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60d0010"/>
        <function-ref name="readDone" scoped="" ref="0xb60d0268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb60d8ea0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0xb60d8ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb60d70c0"/>
        <function-ref name="rfOff" scoped="" ref="0xb60d71a0"/>
        <function-ref name="rxOn" scoped="" ref="0xb60d7280"/>
        <function-ref name="startVReg" scoped="" ref="0xb60d7360"/>
        <function-ref name="stopVReg" scoped="" ref="0xb60d7440"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb60d7520"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb60d7600"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb60d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb60dcba8" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb60dcba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb60dcd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb60dce60"/>
        <function-ref name="request" scoped="" ref="0xb60d9010"/>
        <function-ref name="granted" scoped="" ref="0xb60d90f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb60d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb60cc900" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb60cc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb60ccad8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb60ccbb8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb60ccc98"/>
        <function-ref name="syncDone" scoped="" ref="0xb60ccd78"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb60cce58"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb60cb010"/>
        <function-ref name="setChannel" scoped="" ref="0xb60cb0f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb60cb1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb60cb2b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb60cb390"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb60cb470"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb60cb550"/>
        <function-ref name="sync" scoped="" ref="0xb60cb630"/>
        <function-ref name="getChannel" scoped="" ref="0xb60cb790"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb60cb870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0xb60bc788" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb60bc788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bc960"/>
        <function-ref name="write" scoped="" ref="0xb60bca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0xb60c99a8" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb60c99a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb60c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0xb60c8010" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0xb60c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb60c74e0"/>
        <function-ref name="fired" scoped="" ref="0xb60c8c78"/>
        <function-ref name="startAt" scoped="" ref="0xb60c71a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb60c8ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb60c7758"/>
        <function-ref name="start" scoped="" ref="0xb60c8760"/>
        <function-ref name="stop" scoped="" ref="0xb60c8a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0xb60bfc88" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb60bfc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bfe60"/>
        <function-ref name="write" scoped="" ref="0xb60bc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb60c54c0" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0xb60c54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60c5698"/>
        <function-ref name="isInput" scoped="" ref="0xb60c5778"/>
        <function-ref name="toggle" scoped="" ref="0xb60c5858"/>
        <function-ref name="isOutput" scoped="" ref="0xb60c5938"/>
        <function-ref name="get" scoped="" ref="0xb60c5a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60c5af8"/>
        <function-ref name="set" scoped="" ref="0xb60c5bd8"/>
        <function-ref name="clr" scoped="" ref="0xb60c5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb60ca5a0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0xb60ca5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60cabc8"/>
        <function-ref name="readDone" scoped="" ref="0xb60cae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0xb60b1b48" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0xb60b1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb60b1d20"/>
        <function-ref name="runTask" scoped="" ref="0xb60b1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0xb60bcc80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb60bcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bce58"/>
        <function-ref name="write" scoped="" ref="0xb60ba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb60ba260" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb60ba260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60ba438"/>
        <function-ref name="write" scoped="" ref="0xb60ba518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0xb60bf260" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb60bf260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bf438"/>
        <function-ref name="write" scoped="" ref="0xb60bf518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb60c08e8" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb60c08e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb60c0ac0"/>
        <function-ref name="changed" scoped="" ref="0xb60c0ba0"/>
        <function-ref name="amGroup" scoped="" ref="0xb60c0c80"/>
        <function-ref name="setAddress" scoped="" ref="0xb60c0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb60c7a28" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb60c7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60c7c00"/>
        <function-ref name="isInput" scoped="" ref="0xb60c7ce0"/>
        <function-ref name="toggle" scoped="" ref="0xb60c7dc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60c7ea0"/>
        <function-ref name="get" scoped="" ref="0xb60c5010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60c50f0"/>
        <function-ref name="set" scoped="" ref="0xb60c51d0"/>
        <function-ref name="clr" scoped="" ref="0xb60c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0xb60b7928" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb60b7928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb60b7c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0xb60c5ec8" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0xb60c5ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60c40c0"/>
        <function-ref name="isInput" scoped="" ref="0xb60c41a0"/>
        <function-ref name="toggle" scoped="" ref="0xb60c4280"/>
        <function-ref name="isOutput" scoped="" ref="0xb60c4360"/>
        <function-ref name="get" scoped="" ref="0xb60c4440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60c4520"/>
        <function-ref name="set" scoped="" ref="0xb60c4600"/>
        <function-ref name="clr" scoped="" ref="0xb60c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60d0d70" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb60d0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb60bc278" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb60bc278"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bc450"/>
        <function-ref name="write" scoped="" ref="0xb60bc530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0xb60b7e48" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb60b7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb60b9050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb60b9298" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb60b9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb60b9470"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb60b9550"/>
        <function-ref name="request" scoped="" ref="0xb60b9630"/>
        <function-ref name="granted" scoped="" ref="0xb60b9710"/>
        <function-ref name="isOwner" scoped="" ref="0xb60b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0xb60b6268" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0xb60b6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb60b6440"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb60b6520"/>
        <function-ref name="request" scoped="" ref="0xb60b6600"/>
        <function-ref name="granted" scoped="" ref="0xb60b66e0"/>
        <function-ref name="isOwner" scoped="" ref="0xb60b67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb60cba40" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0xb60cba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb60cbc18"/>
        <function-ref name="rfOff" scoped="" ref="0xb60cbcf8"/>
        <function-ref name="rxOn" scoped="" ref="0xb60cbdd8"/>
        <function-ref name="startVReg" scoped="" ref="0xb60cbeb8"/>
        <function-ref name="stopVReg" scoped="" ref="0xb60ca010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb60ca0f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb60ca1d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb60ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0xb60bf768" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb60bf768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bf940"/>
        <function-ref name="write" scoped="" ref="0xb60bfa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0xb60bbce0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb60bbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60bbeb8"/>
        <function-ref name="write" scoped="" ref="0xb60bf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0xb60b70e0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb60b70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb60b72b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb60b6950" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb60b6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb60b6b28"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb60b6c08"/>
        <function-ref name="led1On" scoped="" ref="0xb60b6ce8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb60b6dc8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb60b6ea8"/>
        <function-ref name="get" scoped="" ref="0xb60b5010"/>
        <function-ref name="led1Off" scoped="" ref="0xb60b50f0"/>
        <function-ref name="led2Off" scoped="" ref="0xb60b5470"/>
        <function-ref name="set" scoped="" ref="0xb60b51d0"/>
        <function-ref name="led0On" scoped="" ref="0xb60b52b0"/>
        <function-ref name="led2On" scoped="" ref="0xb60b5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0xb60b1368" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0xb60b1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb60b1540"/>
        <function-ref name="runTask" scoped="" ref="0xb60b1620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb60cc1c8" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb60cc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb60cc3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb60cc480"/>
        <function-ref name="request" scoped="" ref="0xb60cc560"/>
        <function-ref name="granted" scoped="" ref="0xb60cc640"/>
        <function-ref name="isOwner" scoped="" ref="0xb60cc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0xb60c1580" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb60c1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60c1758"/>
        <function-ref name="write" scoped="" ref="0xb60c1838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0xb60c1030" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb60c1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb60c1288"/>
        <function-ref name="write" scoped="" ref="0xb60c1368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0xb60c4968" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0xb60c4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb60c4b40"/>
        <function-ref name="disable" scoped="" ref="0xb60c4c20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb60c4d00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb60c4de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0xb60b9a48" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0xb60b9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb60b9c20"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb60b9d00"/>
        <function-ref name="request" scoped="" ref="0xb60b9de0"/>
        <function-ref name="granted" scoped="" ref="0xb60b9ec0"/>
        <function-ref name="isOwner" scoped="" ref="0xb60b6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0xb60b74f8" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb60b74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb60b76d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb606c9f0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb606c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb606cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb6069010" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0xb6069010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb60684e0"/>
        <function-ref name="fired" scoped="" ref="0xb6069c78"/>
        <function-ref name="startAt" scoped="" ref="0xb60681a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6069ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6068758"/>
        <function-ref name="start" scoped="" ref="0xb6069760"/>
        <function-ref name="stop" scoped="" ref="0xb6069a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6067258" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb6067258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6067430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb60676d0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0xb60676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6066b80"/>
        <function-ref name="fired" scoped="" ref="0xb6066350"/>
        <function-ref name="startAt" scoped="" ref="0xb6066840"/>
        <function-ref name="isRunning" scoped="" ref="0xb60665c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6066df8"/>
        <function-ref name="start" scoped="" ref="0xb6067e20"/>
        <function-ref name="stop" scoped="" ref="0xb60660d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb5457a20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb5457a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5455010"/>
        <function-ref name="fired" scoped="" ref="0xb5456718"/>
        <function-ref name="startAt" scoped="" ref="0xb5456c08"/>
        <function-ref name="isRunning" scoped="" ref="0xb5456990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5455288"/>
        <function-ref name="start" scoped="" ref="0xb5456200"/>
        <function-ref name="stop" scoped="" ref="0xb54564a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb54575c8" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb54575c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb54577a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb5454be0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb5454be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb54510f8"/>
        <function-ref name="fired" scoped="" ref="0xb5452898"/>
        <function-ref name="startAt" scoped="" ref="0xb5452d88"/>
        <function-ref name="isRunning" scoped="" ref="0xb5452b10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5451370"/>
        <function-ref name="start" scoped="" ref="0xb5452380"/>
        <function-ref name="stop" scoped="" ref="0xb5452620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5454788" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5454788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5454960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0xb5446c88" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb5446c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb5446e60"/>
        <function-ref name="setEvent" scoped="" ref="0xb5445010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb54450f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb54451d0"/>
        <function-ref name="fired" scoped="" ref="0xb54452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0xb5447588" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5447588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5447760"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5447840"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5447920"/>
        <function-ref name="get" scoped="" ref="0xb5447a00"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5447ae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5447bc0"/>
        <function-ref name="getMode" scoped="" ref="0xb5447ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5447d80"/>
        <function-ref name="overflow" scoped="" ref="0xb5447e60"/>
        <function-ref name="setMode" scoped="" ref="0xb5446010"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb54460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0xb5446250" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5446250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb5446428"/>
        <function-ref name="getControl" scoped="" ref="0xb5446508"/>
        <function-ref name="enableEvents" scoped="" ref="0xb54465e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb54466c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb54467a8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5446888"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb5446968"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb5446a48"/>
        <function-ref name="setControl" scoped="" ref="0xb5446b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0xb54406b0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0xb54406b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb5440888"/>
        <function-ref name="setEvent" scoped="" ref="0xb5440968"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0xb5440a48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0xb5440b28"/>
        <function-ref name="fired" scoped="" ref="0xb5440c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb5441060" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5441060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5441238"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5441318"/>
        <function-ref name="enableEvents" scoped="" ref="0xb54413f8"/>
        <function-ref name="get" scoped="" ref="0xb54414d8"/>
        <function-ref name="disableEvents" scoped="" ref="0xb54415b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5441698"/>
        <function-ref name="getMode" scoped="" ref="0xb5441778"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5441858"/>
        <function-ref name="overflow" scoped="" ref="0xb5441938"/>
        <function-ref name="setMode" scoped="" ref="0xb5441a18"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb5441af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb54446b8" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb54446b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5443b80"/>
        <function-ref name="fired" scoped="" ref="0xb5443350"/>
        <function-ref name="startAt" scoped="" ref="0xb5443840"/>
        <function-ref name="isRunning" scoped="" ref="0xb54435c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5443df8"/>
        <function-ref name="start" scoped="" ref="0xb5444e08"/>
        <function-ref name="stop" scoped="" ref="0xb54430d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5444240" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5444240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5444418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb5441c58" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb5441c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb5441e30"/>
        <function-ref name="getControl" scoped="" ref="0xb5441f10"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5440010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb54400f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb54401d0"/>
        <function-ref name="disableEvents" scoped="" ref="0xb54402b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb5440390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb5440470"/>
        <function-ref name="setControl" scoped="" ref="0xb5440550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb605a778" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb605a778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb605aec8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb60563e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6056170"/>
        <function-ref name="overflow" scoped="" ref="0xb6056660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6053268" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0xb6053268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb60539b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6053ea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6053c30"/>
        <function-ref name="overflow" scoped="" ref="0xb6051150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6054010" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb6054010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6054760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6054c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb60549d8"/>
        <function-ref name="overflow" scoped="" ref="0xb6054ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb54506b8" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0xb54506b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb544eb80"/>
        <function-ref name="fired" scoped="" ref="0xb544e350"/>
        <function-ref name="startAt" scoped="" ref="0xb544e840"/>
        <function-ref name="isRunning" scoped="" ref="0xb544e5c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb544edf8"/>
        <function-ref name="start" scoped="" ref="0xb5450e08"/>
        <function-ref name="stop" scoped="" ref="0xb544e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb544c3b8" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0xb544c3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb544b878"/>
        <function-ref name="fired" scoped="" ref="0xb544b048"/>
        <function-ref name="startAt" scoped="" ref="0xb544b538"/>
        <function-ref name="isRunning" scoped="" ref="0xb544b2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb544baf0"/>
        <function-ref name="start" scoped="" ref="0xb544cb08"/>
        <function-ref name="stop" scoped="" ref="0xb544cda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb544d180" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb544d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb544d8d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb544ddc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb544db48"/>
        <function-ref name="overflow" scoped="" ref="0xb544c048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0xb6044dd8" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0xb6044dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6043010"/>
        <function-ref name="isInput" scoped="" ref="0xb60430f0"/>
        <function-ref name="toggle" scoped="" ref="0xb60431d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60432b0"/>
        <function-ref name="get" scoped="" ref="0xb6043390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6043470"/>
        <function-ref name="set" scoped="" ref="0xb6043550"/>
        <function-ref name="clr" scoped="" ref="0xb6043630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0xb6043848" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0xb6043848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6043a20"/>
        <function-ref name="isInput" scoped="" ref="0xb6043b00"/>
        <function-ref name="toggle" scoped="" ref="0xb6043be0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6043cc0"/>
        <function-ref name="get" scoped="" ref="0xb6043da0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6043e80"/>
        <function-ref name="set" scoped="" ref="0xb6042010"/>
        <function-ref name="clr" scoped="" ref="0xb60420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb6042300" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0xb6042300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60424d8"/>
        <function-ref name="isInput" scoped="" ref="0xb60425b8"/>
        <function-ref name="toggle" scoped="" ref="0xb6042698"/>
        <function-ref name="isOutput" scoped="" ref="0xb6042778"/>
        <function-ref name="get" scoped="" ref="0xb6042858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6042938"/>
        <function-ref name="set" scoped="" ref="0xb6042a18"/>
        <function-ref name="clr" scoped="" ref="0xb6042af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0xb60443d0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb60443d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60445a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6044688"/>
        <function-ref name="toggle" scoped="" ref="0xb6044768"/>
        <function-ref name="isOutput" scoped="" ref="0xb6044848"/>
        <function-ref name="get" scoped="" ref="0xb6044928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6044a08"/>
        <function-ref name="set" scoped="" ref="0xb6044ae8"/>
        <function-ref name="clr" scoped="" ref="0xb6044bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0xb6041760" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0xb6041760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6041938"/>
        <function-ref name="isInput" scoped="" ref="0xb6041a18"/>
        <function-ref name="toggle" scoped="" ref="0xb6041af8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6041bd8"/>
        <function-ref name="get" scoped="" ref="0xb6041cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6041d98"/>
        <function-ref name="set" scoped="" ref="0xb6041e78"/>
        <function-ref name="clr" scoped="" ref="0xb6040010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb606b978" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0xb606b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb606bb50"/>
        <function-ref name="isInput" scoped="" ref="0xb606bc30"/>
        <function-ref name="toggle" scoped="" ref="0xb606bd10"/>
        <function-ref name="isOutput" scoped="" ref="0xb606bdf0"/>
        <function-ref name="get" scoped="" ref="0xb606bed0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6044010"/>
        <function-ref name="set" scoped="" ref="0xb60440f0"/>
        <function-ref name="clr" scoped="" ref="0xb60441d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0xb6042cf8" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0xb6042cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6042ed0"/>
        <function-ref name="isInput" scoped="" ref="0xb6041010"/>
        <function-ref name="toggle" scoped="" ref="0xb60410f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60411d0"/>
        <function-ref name="get" scoped="" ref="0xb60412b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6041390"/>
        <function-ref name="set" scoped="" ref="0xb6041470"/>
        <function-ref name="clr" scoped="" ref="0xb6041550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb603e510" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb603e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb603e6e8"/>
        <function-ref name="isInput" scoped="" ref="0xb603e7c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb603e8a8"/>
        <function-ref name="toggle" scoped="" ref="0xb603e988"/>
        <function-ref name="isOutput" scoped="" ref="0xb603ea68"/>
        <function-ref name="getResistor" scoped="" ref="0xb603eb48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb603ec28"/>
        <function-ref name="get" scoped="" ref="0xb603ed08"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb603ede8"/>
        <function-ref name="getRaw" scoped="" ref="0xb603eec8"/>
        <function-ref name="set" scoped="" ref="0xb603d010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb603d0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb603d1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb603d330"/>
        <function-ref name="clr" scoped="" ref="0xb603d410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6040b10" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6040b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6040ce8"/>
        <function-ref name="isInput" scoped="" ref="0xb6040dc8"/>
        <function-ref name="toggle" scoped="" ref="0xb6040ea8"/>
        <function-ref name="isOutput" scoped="" ref="0xb603e010"/>
        <function-ref name="get" scoped="" ref="0xb603e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb603e1d0"/>
        <function-ref name="set" scoped="" ref="0xb603e2b0"/>
        <function-ref name="clr" scoped="" ref="0xb603e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb603ccc0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb603ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb603ce98"/>
        <function-ref name="isInput" scoped="" ref="0xb603b010"/>
        <function-ref name="setResistor" scoped="" ref="0xb603b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb603b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb603b2b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb603b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb603b470"/>
        <function-ref name="get" scoped="" ref="0xb603b550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb603b630"/>
        <function-ref name="getRaw" scoped="" ref="0xb603b710"/>
        <function-ref name="set" scoped="" ref="0xb603b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb603b8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb603b9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb603bb10"/>
        <function-ref name="clr" scoped="" ref="0xb603bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb603c348" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb603c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb603c520"/>
        <function-ref name="isInput" scoped="" ref="0xb603c600"/>
        <function-ref name="toggle" scoped="" ref="0xb603c6e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb603c7c0"/>
        <function-ref name="get" scoped="" ref="0xb603c8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb603c980"/>
        <function-ref name="set" scoped="" ref="0xb603ca60"/>
        <function-ref name="clr" scoped="" ref="0xb603cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6039510" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6039510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60396e8"/>
        <function-ref name="isInput" scoped="" ref="0xb60397c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb60398a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6039988"/>
        <function-ref name="isOutput" scoped="" ref="0xb6039a68"/>
        <function-ref name="getResistor" scoped="" ref="0xb6039b48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6039c28"/>
        <function-ref name="get" scoped="" ref="0xb6039d08"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6039de8"/>
        <function-ref name="getRaw" scoped="" ref="0xb6039ec8"/>
        <function-ref name="set" scoped="" ref="0xb6038010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb60380f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb60381d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6038330"/>
        <function-ref name="clr" scoped="" ref="0xb6038410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb603ab40" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb603ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb603ad18"/>
        <function-ref name="isInput" scoped="" ref="0xb603adf8"/>
        <function-ref name="toggle" scoped="" ref="0xb603aed8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6039010"/>
        <function-ref name="get" scoped="" ref="0xb60390f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60391d0"/>
        <function-ref name="set" scoped="" ref="0xb60392b0"/>
        <function-ref name="clr" scoped="" ref="0xb6039390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6037cd0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6037cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6037ea8"/>
        <function-ref name="isInput" scoped="" ref="0xb6036010"/>
        <function-ref name="setResistor" scoped="" ref="0xb60360f0"/>
        <function-ref name="toggle" scoped="" ref="0xb60361d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60362b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6036390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6036470"/>
        <function-ref name="get" scoped="" ref="0xb6036550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6036630"/>
        <function-ref name="getRaw" scoped="" ref="0xb6036710"/>
        <function-ref name="set" scoped="" ref="0xb60367f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb60368d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb60369b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6036b10"/>
        <function-ref name="clr" scoped="" ref="0xb6036bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6037358" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6037358"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6037530"/>
        <function-ref name="isInput" scoped="" ref="0xb6037610"/>
        <function-ref name="toggle" scoped="" ref="0xb60376f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60377d0"/>
        <function-ref name="get" scoped="" ref="0xb60378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6037990"/>
        <function-ref name="set" scoped="" ref="0xb6037a70"/>
        <function-ref name="clr" scoped="" ref="0xb6037b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6034510" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6034510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60346e8"/>
        <function-ref name="isInput" scoped="" ref="0xb60347c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb60348a8"/>
        <function-ref name="toggle" scoped="" ref="0xb6034988"/>
        <function-ref name="isOutput" scoped="" ref="0xb6034a68"/>
        <function-ref name="getResistor" scoped="" ref="0xb6034b48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6034c28"/>
        <function-ref name="get" scoped="" ref="0xb6034d08"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6034de8"/>
        <function-ref name="getRaw" scoped="" ref="0xb6034ec8"/>
        <function-ref name="set" scoped="" ref="0xb6033010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb60330f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb60331d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6033330"/>
        <function-ref name="clr" scoped="" ref="0xb6033410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6035b40" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6035b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6035d18"/>
        <function-ref name="isInput" scoped="" ref="0xb6035df8"/>
        <function-ref name="toggle" scoped="" ref="0xb6035ed8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6034010"/>
        <function-ref name="get" scoped="" ref="0xb60340f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb60341d0"/>
        <function-ref name="set" scoped="" ref="0xb60342b0"/>
        <function-ref name="clr" scoped="" ref="0xb6034390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb6032cc0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb6032cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6032e98"/>
        <function-ref name="isInput" scoped="" ref="0xb6031010"/>
        <function-ref name="setResistor" scoped="" ref="0xb60310f0"/>
        <function-ref name="toggle" scoped="" ref="0xb60311d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60312b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb6031390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6031470"/>
        <function-ref name="get" scoped="" ref="0xb6031550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6031630"/>
        <function-ref name="getRaw" scoped="" ref="0xb6031710"/>
        <function-ref name="set" scoped="" ref="0xb60317f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb60318d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb60319b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6031b10"/>
        <function-ref name="clr" scoped="" ref="0xb6031bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6032348" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6032348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6032520"/>
        <function-ref name="isInput" scoped="" ref="0xb6032600"/>
        <function-ref name="toggle" scoped="" ref="0xb60326e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb60327c0"/>
        <function-ref name="get" scoped="" ref="0xb60328a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6032980"/>
        <function-ref name="set" scoped="" ref="0xb6032a60"/>
        <function-ref name="clr" scoped="" ref="0xb6032b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb602f510" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb602f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb602f6e8"/>
        <function-ref name="isInput" scoped="" ref="0xb602f7c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb602f8a8"/>
        <function-ref name="toggle" scoped="" ref="0xb602f988"/>
        <function-ref name="isOutput" scoped="" ref="0xb602fa68"/>
        <function-ref name="getResistor" scoped="" ref="0xb602fb48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb602fc28"/>
        <function-ref name="get" scoped="" ref="0xb602fd08"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb602fde8"/>
        <function-ref name="getRaw" scoped="" ref="0xb602fec8"/>
        <function-ref name="set" scoped="" ref="0xb602e010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb602e0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb602e1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb602e330"/>
        <function-ref name="clr" scoped="" ref="0xb602e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb6030b40" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb6030b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6030d18"/>
        <function-ref name="isInput" scoped="" ref="0xb6030df8"/>
        <function-ref name="toggle" scoped="" ref="0xb6030ed8"/>
        <function-ref name="isOutput" scoped="" ref="0xb602f010"/>
        <function-ref name="get" scoped="" ref="0xb602f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb602f1d0"/>
        <function-ref name="set" scoped="" ref="0xb602f2b0"/>
        <function-ref name="clr" scoped="" ref="0xb602f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0xb6020a80" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0xb6020a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6020c58"/>
        <function-ref name="disable" scoped="" ref="0xb6020d38"/>
        <function-ref name="captured" scoped="" ref="0xb6020e18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6020ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0xb6022198" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0xb6022198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6022370"/>
        <function-ref name="disable" scoped="" ref="0xb6022450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb6022530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6022610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0xb60228a8" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb60228a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6022a80"/>
        <function-ref name="disable" scoped="" ref="0xb6022b60"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb6022c40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6022d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0xb6014d68" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0xb6014d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0xb6013010"/>
        <function-ref name="setSynchronous" scoped="" ref="0xb60130f0"/>
        <function-ref name="captured" scoped="" ref="0xb60131d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb60132b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6013390"/>
        <function-ref name="setEdge" scoped="" ref="0xb6013470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb601fd38" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0xb601fd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb601ff10"/>
        <function-ref name="disable" scoped="" ref="0xb6014010"/>
        <function-ref name="captured" scoped="" ref="0xb60140f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb60141d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0xb6014330" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0xb6014330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0xb6014508"/>
        <function-ref name="getControl" scoped="" ref="0xb60145e8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb60146c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0xb60147a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0xb6014888"/>
        <function-ref name="disableEvents" scoped="" ref="0xb6014968"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6014a48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0xb6014b28"/>
        <function-ref name="setControl" scoped="" ref="0xb6014c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0xb60135f0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb60135f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb60137c8"/>
        <function-ref name="isInput" scoped="" ref="0xb60138a8"/>
        <function-ref name="setResistor" scoped="" ref="0xb6013988"/>
        <function-ref name="toggle" scoped="" ref="0xb6013a68"/>
        <function-ref name="isOutput" scoped="" ref="0xb6013b48"/>
        <function-ref name="getResistor" scoped="" ref="0xb6013c28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6013d08"/>
        <function-ref name="get" scoped="" ref="0xb6013de8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb6013ec8"/>
        <function-ref name="getRaw" scoped="" ref="0xb6012010"/>
        <function-ref name="set" scoped="" ref="0xb60120f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb60121d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb60122b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb6012410"/>
        <function-ref name="clr" scoped="" ref="0xb60124f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0xb60109b8" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0xb60109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6010b90"/>
        <function-ref name="fired" scoped="" ref="0xb6010c70"/>
        <function-ref name="disable" scoped="" ref="0xb6010d50"/>
        <function-ref name="edge" scoped="" ref="0xb6010e30"/>
        <function-ref name="enable" scoped="" ref="0xb6010f10"/>
        <function-ref name="getValue" scoped="" ref="0xb600f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb60103c0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0xb60103c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6010598"/>
        <function-ref name="disable" scoped="" ref="0xb6010678"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb6010758"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6010838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0xb600e350" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0xb600e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb600e528"/>
        <function-ref name="fired" scoped="" ref="0xb600e608"/>
        <function-ref name="disable" scoped="" ref="0xb600e6e8"/>
        <function-ref name="edge" scoped="" ref="0xb600e7c8"/>
        <function-ref name="enable" scoped="" ref="0xb600e8a8"/>
        <function-ref name="getValue" scoped="" ref="0xb600e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb600fd20" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0xb600fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb600fef8"/>
        <function-ref name="disable" scoped="" ref="0xb600e010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb600e0f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb600e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5dddbd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5dddbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dddeb0"/>
        <function-ref name="write" scoped="" ref="0xb5ddc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5de2190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5de2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5ddf270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5ddf270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddf448"/>
        <function-ref name="write" scoped="" ref="0xb5ddf528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5ddca00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5ddca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddcbd8"/>
        <function-ref name="write" scoped="" ref="0xb5ddccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5dd72b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5dd72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd7488"/>
        <function-ref name="write" scoped="" ref="0xb5dd7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5ddce38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5ddce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddb050"/>
        <function-ref name="write" scoped="" ref="0xb5ddb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5dd1b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5dd1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd1cf8"/>
        <function-ref name="write" scoped="" ref="0xb5dd1dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5dd3a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5dd3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd3bd8"/>
        <function-ref name="write" scoped="" ref="0xb5dd3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5de2b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5de2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5dd5190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5dd5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd5368"/>
        <function-ref name="write" scoped="" ref="0xb5dd5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5dd3190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5dd3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd3368"/>
        <function-ref name="write" scoped="" ref="0xb5dd3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5ddfae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5ddfae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddfcb8"/>
        <function-ref name="write" scoped="" ref="0xb5ddfd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5ddd368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5ddd368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddd540"/>
        <function-ref name="write" scoped="" ref="0xb5ddd620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5dd95c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5dd95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd97a0"/>
        <function-ref name="write" scoped="" ref="0xb5dd9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5dda880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5dda880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddaa58"/>
        <function-ref name="write" scoped="" ref="0xb5ddab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5ddb2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5ddb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddb488"/>
        <function-ref name="write" scoped="" ref="0xb5ddb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5de4530" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5de4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5de4708"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5de47e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5de48c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5de1910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5de1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5de1c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5de1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5dd5c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5dd5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd5dd8"/>
        <function-ref name="write" scoped="" ref="0xb5dd5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5de0080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5de0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de0258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5dd35c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5dd35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd37a0"/>
        <function-ref name="write" scoped="" ref="0xb5dd3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5de1260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5de1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de1438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5dd6cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5dd6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd6e90"/>
        <function-ref name="write" scoped="" ref="0xb5dd5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5ddff18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5ddff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddd108"/>
        <function-ref name="write" scoped="" ref="0xb5ddd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5ddf6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5ddf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddf880"/>
        <function-ref name="write" scoped="" ref="0xb5ddf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5de4da0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5de4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5dd6448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5dd6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd6620"/>
        <function-ref name="write" scoped="" ref="0xb5dd6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5dd76e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5dd76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd78c0"/>
        <function-ref name="write" scoped="" ref="0xb5dd79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5dd6880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5dd6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd6a58"/>
        <function-ref name="write" scoped="" ref="0xb5dd6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5dd16e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5dd16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd18c0"/>
        <function-ref name="write" scoped="" ref="0xb5dd19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5dd3e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5dd3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd1050"/>
        <function-ref name="write" scoped="" ref="0xb5dd1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5ddacb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5ddacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddae90"/>
        <function-ref name="write" scoped="" ref="0xb5dd9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5dd7b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5dd7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd7cf8"/>
        <function-ref name="write" scoped="" ref="0xb5dd7dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5dd4cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5dd4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd4ed0"/>
        <function-ref name="write" scoped="" ref="0xb5dd3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5ddbb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5ddbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddbcf8"/>
        <function-ref name="write" scoped="" ref="0xb5ddbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5dd0010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5dd0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5dd01e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5dd02c8"/>
        <function-ref name="write" scoped="" ref="0xb5dd03a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5dd0488"/>
        <function-ref name="readDone" scoped="" ref="0xb5dd0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5de4a48" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5de4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de4c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5de0de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5de0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddf010"/>
        <function-ref name="write" scoped="" ref="0xb5ddf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5ddd7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5ddd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddd978"/>
        <function-ref name="write" scoped="" ref="0xb5ddda58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5dd9a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5dd9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd9bd8"/>
        <function-ref name="write" scoped="" ref="0xb5dd9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5ddb6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5ddb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddb8c0"/>
        <function-ref name="write" scoped="" ref="0xb5ddb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5dd9e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5dd9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd7050"/>
        <function-ref name="write" scoped="" ref="0xb5dd7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5ddc190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5ddc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddc368"/>
        <function-ref name="write" scoped="" ref="0xb5ddc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5de24e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5de24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5ddc5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5ddc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5ddc7a0"/>
        <function-ref name="write" scoped="" ref="0xb5ddc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5de5e28" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5de5e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5de4050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5de4130"/>
        <function-ref name="request" scoped="" ref="0xb5de4210"/>
        <function-ref name="granted" scoped="" ref="0xb5de42f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5de43d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5de03d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5de03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5de0a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5de0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5dd48c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5dd48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd4a98"/>
        <function-ref name="write" scoped="" ref="0xb5dd4b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5dd4488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5dd4488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd4660"/>
        <function-ref name="write" scoped="" ref="0xb5dd4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5de15b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5de15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5dd4050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5dd4050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd4228"/>
        <function-ref name="write" scoped="" ref="0xb5dd4308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5dd12b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5dd12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd1488"/>
        <function-ref name="write" scoped="" ref="0xb5dd1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5dd9190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5dd9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd9368"/>
        <function-ref name="write" scoped="" ref="0xb5dd9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5dd6010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5dd6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd61e8"/>
        <function-ref name="write" scoped="" ref="0xb5dd62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5de2840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5de2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5de2ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5de2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5dda010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5dda010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dda1e8"/>
        <function-ref name="write" scoped="" ref="0xb5dda2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5de0730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5de0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5de0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5dda448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5dda448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dda620"/>
        <function-ref name="write" scoped="" ref="0xb5dda700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5dd55c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5dd55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dd59a0"/>
        <function-ref name="write" scoped="" ref="0xb5dd5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5dd06e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5dd06e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5dd08c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5dd09a0"/>
        <function-ref name="write" scoped="" ref="0xb5dd0a80"/>
        <function-ref name="beginRead" scoped="" ref="0xb5dd0b60"/>
        <function-ref name="readDone" scoped="" ref="0xb5dd0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb5fe6430" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0xb5fe6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5fe6608"/>
        <function-ref name="writeDone" scoped="" ref="0xb5fe66e8"/>
        <function-ref name="write" scoped="" ref="0xb5fe67c8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5fe68a8"/>
        <function-ref name="readDone" scoped="" ref="0xb5fe6988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5fe8b88" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5fe8d60"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5fe8e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5fe8f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb5fe6e78" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0xb5fe6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5fe5070"/>
        <function-ref name="write" scoped="" ref="0xb5fe5150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb5fe5660" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0xb5fe5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5fe5838"/>
        <function-ref name="write" scoped="" ref="0xb5fe5918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5fe8438" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5fe8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5fe8610"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5fe86f0"/>
        <function-ref name="request" scoped="" ref="0xb5fe87d0"/>
        <function-ref name="granted" scoped="" ref="0xb5fe88b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5fe8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb5fe5e38" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0xb5fe5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5fe4050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0xb5fd7de8" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5fd7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5fdc010"/>
        <function-ref name="sendDone" scoped="" ref="0xb5fdc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb5fe1c68" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0xb5fe1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5fe1e40"/>
        <function-ref name="writeDone" scoped="" ref="0xb5fe1f20"/>
        <function-ref name="write" scoped="" ref="0xb5fe0018"/>
        <function-ref name="beginRead" scoped="" ref="0xb5fe00f8"/>
        <function-ref name="readDone" scoped="" ref="0xb5fe01d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5fe49e8" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5fe49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5fe4bc0"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5fe4ca0"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5fe4d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb5fdda78" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5fdda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5fddc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0xb5fdc308" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0xb5fdc308"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5fdc4e0"/>
        <function-ref name="toIdle" scoped="" ref="0xb5fdc5c0"/>
        <function-ref name="isState" scoped="" ref="0xb5fdc6a0"/>
        <function-ref name="isIdle" scoped="" ref="0xb5fdc780"/>
        <function-ref name="requestState" scoped="" ref="0xb5fdc860"/>
        <function-ref name="forceState" scoped="" ref="0xb5fdc940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb5fdea70" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb5fdea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5fdec48"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5fded28"/>
        <function-ref name="request" scoped="" ref="0xb5fdee08"/>
        <function-ref name="granted" scoped="" ref="0xb5fdeee8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5fdd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb5fe06a8" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0xb5fe06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5fe0880"/>
        <function-ref name="write" scoped="" ref="0xb5fe0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb5fe0e50" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0xb5fe0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5fde050"/>
        <function-ref name="write" scoped="" ref="0xb5fde130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5fdcab0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5fdcab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5fdcc88"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5fdcd68"/>
        <function-ref name="led1On" scoped="" ref="0xb5fdce48"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5fdcf28"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5fdb018"/>
        <function-ref name="get" scoped="" ref="0xb5fdb0f8"/>
        <function-ref name="led1Off" scoped="" ref="0xb5fdb1d8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5fdb558"/>
        <function-ref name="set" scoped="" ref="0xb5fdb2b8"/>
        <function-ref name="led0On" scoped="" ref="0xb5fdb398"/>
        <function-ref name="led2On" scoped="" ref="0xb5fdb478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5fe1238" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5fe1238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5fe1410"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5fe14f0"/>
        <function-ref name="request" scoped="" ref="0xb5fe15d0"/>
        <function-ref name="granted" scoped="" ref="0xb5fe16b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5fe1790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0xb5fd58a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0xb5fd58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5fd5a78"/>
        <function-ref name="runTask" scoped="" ref="0xb5fd5b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb5fde630" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0xb5fde630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5fde808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5fa16f0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5fa16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5fa18c8"/>
        <function-ref name="toIdle" scoped="" ref="0xb5fa19a8"/>
        <function-ref name="isState" scoped="" ref="0xb5fa1a88"/>
        <function-ref name="isIdle" scoped="" ref="0xb5fa1b68"/>
        <function-ref name="requestState" scoped="" ref="0xb5fa1c48"/>
        <function-ref name="forceState" scoped="" ref="0xb5fa1d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5f9f938" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5f9f938"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5f9fb10"/>
        <function-ref name="toIdle" scoped="" ref="0xb5f9fbf0"/>
        <function-ref name="isState" scoped="" ref="0xb5f9fcd0"/>
        <function-ref name="isIdle" scoped="" ref="0xb5f9fdb0"/>
        <function-ref name="requestState" scoped="" ref="0xb5f9fe90"/>
        <function-ref name="forceState" scoped="" ref="0xb5f9c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5f9c9e8" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5f9c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5f9cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5f99028" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5f99028"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5f99200"/>
        <function-ref name="toIdle" scoped="" ref="0xb5f992e0"/>
        <function-ref name="isState" scoped="" ref="0xb5f993c0"/>
        <function-ref name="isIdle" scoped="" ref="0xb5f994a0"/>
        <function-ref name="requestState" scoped="" ref="0xb5f99580"/>
        <function-ref name="forceState" scoped="" ref="0xb5f99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb5f9bbc0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5f9bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5f9bd98"/>
        <function-ref name="sendDone" scoped="" ref="0xb5f9be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5f9b888" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5f9b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5f9ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5f9b1d0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5f9b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f9b3a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f9b488"/>
        <function-ref name="request" scoped="" ref="0xb5f9b568"/>
        <function-ref name="granted" scoped="" ref="0xb5f9b648"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f9b728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb53cfa70" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb53cfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb53cfc48"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb53cfd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb53ce7a8" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb53ce7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb53ce980"/>
        <function-ref name="sendDone" scoped="" ref="0xb53cea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0xb53cebc0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb53cebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb53ced98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb53cfe88" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb53cfe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb53ce070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb53cf3b8" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb53cf3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb53cf590"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb53cf670"/>
        <function-ref name="request" scoped="" ref="0xb53cf750"/>
        <function-ref name="granted" scoped="" ref="0xb53cf830"/>
        <function-ref name="isOwner" scoped="" ref="0xb53cf910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb53ce1d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0xb53ce1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb53ce3a8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb53ce488"/>
        <function-ref name="splitRead" scoped="" ref="0xb53ce568"/>
        <function-ref name="write" scoped="" ref="0xb53ce648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb5f4ef28" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f4ef28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5f4c110"/>
        <function-ref name="configure" scoped="" ref="0xb5f4c1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb5f4b100" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5f4b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5f4b2d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5f4b3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0xb5f4a3f8" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f4a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5f4a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5f4c398" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5f4c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5f4c570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb5f4b8f8" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb5f4b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f4bad0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f4bbb0"/>
        <function-ref name="request" scoped="" ref="0xb5f4bc90"/>
        <function-ref name="granted" scoped="" ref="0xb5f4bd70"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f4be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5f4e4e0" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5f4e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f4e6b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f4e798"/>
        <function-ref name="request" scoped="" ref="0xb5f4e878"/>
        <function-ref name="granted" scoped="" ref="0xb5f4e958"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f4ea38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb5f4c740" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0xb5f4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb5f4c918"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb5f4c9f8"/>
        <function-ref name="splitRead" scoped="" ref="0xb5f4cad8"/>
        <function-ref name="write" scoped="" ref="0xb5f4cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb5f476b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5f47888"/>
        <function-ref name="txDone" scoped="" ref="0xb5f47968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb5f06010" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5f06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5f061f8"/>
        <function-ref name="configure" scoped="" ref="0xb5f062d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb5f06de0" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0xb5f06de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5f05010"/>
        <function-ref name="sendDone" scoped="" ref="0xb5f050f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0xb5f05a68" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0xb5f05a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5f05c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb5f06438" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0xb5f06438"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb5f06610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0xb5f05dd0" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5f05dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5f03010"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5f030f0"/>
        <function-ref name="setUctl" scoped="" ref="0xb5f031d0"/>
        <function-ref name="enableUart" scoped="" ref="0xb5f032b0"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5f03390"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5f03470"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5f03550"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5f03630"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5f03710"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5f037f0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5f038d0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5f039b0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5f03a90"/>
        <function-ref name="getUbr" scoped="" ref="0xb5f03bf0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5f03cd0"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5f03db0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5f03e90"/>
        <function-ref name="isUart" scoped="" ref="0xb5f02010"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5f020f0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5f021d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5f022b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5f02390"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5f02470"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5f02550"/>
        <function-ref name="getMode" scoped="" ref="0xb5f02630"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5f02810"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5f028f0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5f029d0"/>
        <function-ref name="tx" scoped="" ref="0xb5f02ab0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5f02b90"/>
        <function-ref name="disableUart" scoped="" ref="0xb5f02c70"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5f02d50"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5f02e30"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5f02f10"/>
        <function-ref name="rx" scoped="" ref="0xb5f01010"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5f010f0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5f011d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5f012b0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5f01390"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5f01470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5f01a08" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5f01a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5f01be0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5f01cc0"/>
        <function-ref name="led1On" scoped="" ref="0xb5f01da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5f01e80"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5f00010"/>
        <function-ref name="get" scoped="" ref="0xb5f000f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5f001d0"/>
        <function-ref name="led2On" scoped="" ref="0xb5f00550"/>
        <function-ref name="set" scoped="" ref="0xb5f00390"/>
        <function-ref name="led2Off" scoped="" ref="0xb5f002b0"/>
        <function-ref name="led0On" scoped="" ref="0xb5f00470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb5f05308" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb5f05308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f054f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f055d0"/>
        <function-ref name="request" scoped="" ref="0xb5f056b0"/>
        <function-ref name="granted" scoped="" ref="0xb5f05790"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f05870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5f48868" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5f48868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5f48a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5f48b30"/>
        <function-ref name="request" scoped="" ref="0xb5f48c10"/>
        <function-ref name="granted" scoped="" ref="0xb5f48cf0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5f48dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb5f06770" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0xb5f06770"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb5f06948"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb5f06a28"/>
        <function-ref name="splitRead" scoped="" ref="0xb5f06b08"/>
        <function-ref name="write" scoped="" ref="0xb5f06be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb5f015f0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb5f015f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5f017c8"/>
        <function-ref name="txDone" scoped="" ref="0xb5f018a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0xb5f006d0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0xb5f006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5f008a8"/>
        <function-ref name="runTask" scoped="" ref="0xb5f00988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0xb5ef5068" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb5ef5068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5ef5240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb5ef8428" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5ef8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5ef8600"/>
        <function-ref name="txDone" scoped="" ref="0xb5ef86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb5efdab8" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5efdab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5efdc90"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5efdd70"/>
        <function-ref name="setUctl" scoped="" ref="0xb5efde50"/>
        <function-ref name="enableUart" scoped="" ref="0xb5efa010"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5efa0f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5efa1d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5efa2b0"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5efa390"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5efa470"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5efa550"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5efa630"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5efa710"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5efa7f0"/>
        <function-ref name="getUbr" scoped="" ref="0xb5efa950"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5efaa30"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5efab10"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5efabf0"/>
        <function-ref name="isUart" scoped="" ref="0xb5efacd0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5efadb0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5efae90"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5ef9010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5ef90f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5ef91d0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5ef92b0"/>
        <function-ref name="getMode" scoped="" ref="0xb5ef9390"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5ef9570"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5ef9650"/>
        <function-ref name="setUbr" scoped="" ref="0xb5ef9730"/>
        <function-ref name="tx" scoped="" ref="0xb5ef9810"/>
        <function-ref name="getUctl" scoped="" ref="0xb5ef98f0"/>
        <function-ref name="disableUart" scoped="" ref="0xb5ef99d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5ef9ab0"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5ef9b90"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5ef9c70"/>
        <function-ref name="rx" scoped="" ref="0xb5ef9d50"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5ef9e30"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5ef9f10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5ef8010"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5ef80f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5ef81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0xb5ed5010" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0xb5ed5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ed51e8"/>
        <function-ref name="isInput" scoped="" ref="0xb5ed52c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb5ed53a8"/>
        <function-ref name="toggle" scoped="" ref="0xb5ed5488"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ed5568"/>
        <function-ref name="getResistor" scoped="" ref="0xb5ed5648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ed5728"/>
        <function-ref name="get" scoped="" ref="0xb5ed5808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5ed58e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb5ed59c8"/>
        <function-ref name="set" scoped="" ref="0xb5ed5aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5ed5b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5ed5c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5ed5dc8"/>
        <function-ref name="clr" scoped="" ref="0xb5ed5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5ef2750" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5ef2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5ef2928"/>
        <function-ref name="txDone" scoped="" ref="0xb5ef2a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0xb5ed4168" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0xb5ed4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ed4340"/>
        <function-ref name="isInput" scoped="" ref="0xb5ed4420"/>
        <function-ref name="setResistor" scoped="" ref="0xb5ed4500"/>
        <function-ref name="toggle" scoped="" ref="0xb5ed45e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ed46c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5ed47a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ed4880"/>
        <function-ref name="get" scoped="" ref="0xb5ed4960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5ed4a40"/>
        <function-ref name="getRaw" scoped="" ref="0xb5ed4b20"/>
        <function-ref name="set" scoped="" ref="0xb5ed4c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5ed4ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5ed4dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5ed4f20"/>
        <function-ref name="clr" scoped="" ref="0xb5ed3018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0xb5ed3280" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0xb5ed3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ed3458"/>
        <function-ref name="isInput" scoped="" ref="0xb5ed3538"/>
        <function-ref name="setResistor" scoped="" ref="0xb5ed3618"/>
        <function-ref name="toggle" scoped="" ref="0xb5ed36f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ed37d8"/>
        <function-ref name="getResistor" scoped="" ref="0xb5ed38b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ed3998"/>
        <function-ref name="get" scoped="" ref="0xb5ed3a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5ed3b58"/>
        <function-ref name="getRaw" scoped="" ref="0xb5ed3c38"/>
        <function-ref name="set" scoped="" ref="0xb5ed3d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5ed3df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5ed3ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5ed2090"/>
        <function-ref name="clr" scoped="" ref="0xb5ed2170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0xb5ef5e10" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5ef5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5ef4010"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5ef40f0"/>
        <function-ref name="setUctl" scoped="" ref="0xb5ef41d0"/>
        <function-ref name="enableUart" scoped="" ref="0xb5ef42b0"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5ef4390"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5ef4470"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5ef4550"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5ef4630"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5ef4710"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5ef47f0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5ef48d0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5ef49b0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5ef4a90"/>
        <function-ref name="getUbr" scoped="" ref="0xb5ef4bf0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5ef4cd0"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5ef4db0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5ef4e90"/>
        <function-ref name="isUart" scoped="" ref="0xb5ef3010"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5ef30f0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5ef31d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5ef32b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5ef3390"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5ef3470"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5ef3550"/>
        <function-ref name="getMode" scoped="" ref="0xb5ef3630"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5ef3810"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5ef38f0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5ef39d0"/>
        <function-ref name="tx" scoped="" ref="0xb5ef3ab0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5ef3b90"/>
        <function-ref name="disableUart" scoped="" ref="0xb5ef3c70"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5ef3d50"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5ef3e30"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5ef3f10"/>
        <function-ref name="rx" scoped="" ref="0xb5ef2010"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5ef20f0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5ef21d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5ef22b0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5ef2390"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5ef2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0xb5ed91e8" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0xb5ed91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb5ed93c0"/>
        <function-ref name="getStartByte" scoped="" ref="0xb5ed94a0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb5ed9580"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb5ed9660"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb5ed9740"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb5ed9820"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb5ed9900"/>
        <function-ref name="getStopBit" scoped="" ref="0xb5ed99e0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5ed9ac0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb5ed9ba0"/>
        <function-ref name="getData" scoped="" ref="0xb5ed9c80"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb5ed9d60"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb5ed9e40"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb5ef0010"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb5ef00f0"/>
        <function-ref name="getIV" scoped="" ref="0xb5ef01d0"/>
        <function-ref name="enableI2C" scoped="" ref="0xb5ef02b0"/>
        <function-ref name="setStartBit" scoped="" ref="0xb5ef0390"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb5ef0470"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb5ef0550"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb5ef0630"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb5ef0710"/>
        <function-ref name="isI2C" scoped="" ref="0xb5ef07f0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb5ef08d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb5ef09b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb5ef0b90"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb5ef0c70"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb5ef0d50"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb5ef0e30"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb5ef0f10"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb5eef010"/>
        <function-ref name="disableI2C" scoped="" ref="0xb5eef0f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb5eef1d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb5eef2b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb5eef390"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb5eef470"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb5eef550"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb5eef630"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb5eef710"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb5eef7f0"/>
        <function-ref name="getStartBit" scoped="" ref="0xb5eef8d0"/>
        <function-ref name="setWordMode" scoped="" ref="0xb5eef9b0"/>
        <function-ref name="setData" scoped="" ref="0xb5eefa90"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb5eefb70"/>
        <function-ref name="getClockSource" scoped="" ref="0xb5eefc50"/>
        <function-ref name="getWordMode" scoped="" ref="0xb5eefd30"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb5eefe10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb5eefef0"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb5ed8010"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb5ed82f0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb5ed83d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb5ed84b0"/>
        <function-ref name="setStopBit" scoped="" ref="0xb5ed8590"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb5ed8670"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb5ed8750"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb5ed8830"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb5ed8910"/>
        <function-ref name="setStartByte" scoped="" ref="0xb5ed89f0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb5ed8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0xb5ed7e58" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0xb5ed7e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ed6050"/>
        <function-ref name="isInput" scoped="" ref="0xb5ed6130"/>
        <function-ref name="setResistor" scoped="" ref="0xb5ed6210"/>
        <function-ref name="toggle" scoped="" ref="0xb5ed62f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ed63d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5ed64b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ed6590"/>
        <function-ref name="get" scoped="" ref="0xb5ed6670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5ed6750"/>
        <function-ref name="getRaw" scoped="" ref="0xb5ed6830"/>
        <function-ref name="set" scoped="" ref="0xb5ed6910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5ed69f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5ed6ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5ed6c30"/>
        <function-ref name="clr" scoped="" ref="0xb5ed6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5ef2cf0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5ef2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5ef2ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0xb5ed8d38" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0xb5ed8d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ed8f10"/>
        <function-ref name="isInput" scoped="" ref="0xb5ed7010"/>
        <function-ref name="setResistor" scoped="" ref="0xb5ed70f0"/>
        <function-ref name="toggle" scoped="" ref="0xb5ed71d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ed72b0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5ed7390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ed7470"/>
        <function-ref name="get" scoped="" ref="0xb5ed7550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5ed7630"/>
        <function-ref name="getRaw" scoped="" ref="0xb5ed7710"/>
        <function-ref name="set" scoped="" ref="0xb5ed77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5ed78d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5ed79b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5ed7b10"/>
        <function-ref name="clr" scoped="" ref="0xb5ed7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb53ca898" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb53ca898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb53caa70"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb53cab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0xb53c7c88" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0xb53c7c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb53c7e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb53c2b50" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb53c2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb53c2d28"/>
        <function-ref name="configure" scoped="" ref="0xb53c2e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0xb53c6010" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0xb53c6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb53c61e8"/>
        <function-ref name="getStartByte" scoped="" ref="0xb53c62c8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb53c63a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb53c6488"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb53c6568"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb53c6648"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb53c6728"/>
        <function-ref name="getStopBit" scoped="" ref="0xb53c6808"/>
        <function-ref name="setClockSource" scoped="" ref="0xb53c68e8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb53c69c8"/>
        <function-ref name="getData" scoped="" ref="0xb53c6aa8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb53c6b88"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb53c6c68"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb53c6dc8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb53c6ea8"/>
        <function-ref name="getIV" scoped="" ref="0xb53c4010"/>
        <function-ref name="enableI2C" scoped="" ref="0xb53c40f0"/>
        <function-ref name="setStartBit" scoped="" ref="0xb53c41d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb53c42b0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb53c4390"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb53c4470"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb53c4550"/>
        <function-ref name="isI2C" scoped="" ref="0xb53c4630"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb53c4710"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb53c47f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb53c49d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb53c4ab0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb53c4b90"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb53c4c70"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb53c4d50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb53c4e30"/>
        <function-ref name="disableI2C" scoped="" ref="0xb53c4f10"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb53c3010"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb53c30f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb53c31d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb53c32b0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb53c3390"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb53c3470"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb53c3550"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb53c3630"/>
        <function-ref name="getStartBit" scoped="" ref="0xb53c3710"/>
        <function-ref name="setWordMode" scoped="" ref="0xb53c37f0"/>
        <function-ref name="setData" scoped="" ref="0xb53c38d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb53c39b0"/>
        <function-ref name="getClockSource" scoped="" ref="0xb53c3a90"/>
        <function-ref name="getWordMode" scoped="" ref="0xb53c3b70"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb53c3c50"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb53c3d30"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb53c3e10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb53c2210"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb53c22f0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb53c23d0"/>
        <function-ref name="setStopBit" scoped="" ref="0xb53c24b0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb53c2590"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb53c2670"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb53c2750"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb53c2830"/>
        <function-ref name="setStartByte" scoped="" ref="0xb53c2910"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb53c29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb53c7870" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb53c7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb53c7a48"/>
        <function-ref name="txDone" scoped="" ref="0xb53c7b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb53ca1e0" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb53ca1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb53ca3b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb53ca498"/>
        <function-ref name="request" scoped="" ref="0xb53ca578"/>
        <function-ref name="granted" scoped="" ref="0xb53ca658"/>
        <function-ref name="isOwner" scoped="" ref="0xb53ca738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb53c9170" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb53c9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb53c9348"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb53c9428"/>
        <function-ref name="setUctl" scoped="" ref="0xb53c9508"/>
        <function-ref name="enableUart" scoped="" ref="0xb53c95e8"/>
        <function-ref name="setUrctl" scoped="" ref="0xb53c96c8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb53c97a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb53c9888"/>
        <function-ref name="getUtctl" scoped="" ref="0xb53c9968"/>
        <function-ref name="getUrctl" scoped="" ref="0xb53c9a48"/>
        <function-ref name="resetUsart" scoped="" ref="0xb53c9b28"/>
        <function-ref name="getUmctl" scoped="" ref="0xb53c9c08"/>
        <function-ref name="disableIntr" scoped="" ref="0xb53c9ce8"/>
        <function-ref name="setUtctl" scoped="" ref="0xb53c9dc8"/>
        <function-ref name="getUbr" scoped="" ref="0xb53c9f28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb53c8018"/>
        <function-ref name="setUmctl" scoped="" ref="0xb53c80f8"/>
        <function-ref name="isUartRx" scoped="" ref="0xb53c81d8"/>
        <function-ref name="isUart" scoped="" ref="0xb53c82b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb53c8398"/>
        <function-ref name="isSpi" scoped="" ref="0xb53c8478"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb53c8558"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb53c8638"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb53c8718"/>
        <function-ref name="enableIntr" scoped="" ref="0xb53c87f8"/>
        <function-ref name="getMode" scoped="" ref="0xb53c88d8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb53c8ab8"/>
        <function-ref name="clrIntr" scoped="" ref="0xb53c8b98"/>
        <function-ref name="setUbr" scoped="" ref="0xb53c8c78"/>
        <function-ref name="tx" scoped="" ref="0xb53c8d58"/>
        <function-ref name="getUctl" scoped="" ref="0xb53c8e38"/>
        <function-ref name="disableUart" scoped="" ref="0xb53c8f18"/>
        <function-ref name="enableSpi" scoped="" ref="0xb53c7010"/>
        <function-ref name="setModeUart" scoped="" ref="0xb53c70f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb53c71d0"/>
        <function-ref name="rx" scoped="" ref="0xb53c72b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb53c7390"/>
        <function-ref name="isUartTx" scoped="" ref="0xb53c7470"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb53c7550"/>
        <function-ref name="disableSpi" scoped="" ref="0xb53c7630"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb53c7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb53cacb0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb53cacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb53cae88"/>
        <function-ref name="userId" scoped="" ref="0xb53c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5e786c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5e786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5e78898"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5e78978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5e77320" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5e77320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5e774f8"/>
        <function-ref name="configure" scoped="" ref="0xb5e775d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5e7dcb8" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5e7dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5e7de90"/>
        <function-ref name="txDone" scoped="" ref="0xb5e7a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5e7ac48" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5e7ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5e7ae20"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5e7af00"/>
        <function-ref name="request" scoped="" ref="0xb5e78010"/>
        <function-ref name="granted" scoped="" ref="0xb5e780f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5e781d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5e7a5d8" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5e7a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5e7a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5e78b48" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e78b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5e78d20"/>
        <function-ref name="userId" scoped="" ref="0xb5e78e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5e75ae8" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e75ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5e75cc0"/>
        <function-ref name="userId" scoped="" ref="0xb5e75da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5e76af8" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5e76af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5e76ce0"/>
        <function-ref name="txDone" scoped="" ref="0xb5e76dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0xb5e757b0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0xb5e757b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5e75988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb5e75010" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb5e75010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5e751f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0xb5e75378" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0xb5e75378"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5e75550"/>
        <function-ref name="txDone" scoped="" ref="0xb5e75630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5e6aa48" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5e6aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5e6ac30"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5e6ad10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5e689c0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5e689c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5e68ba8"/>
        <function-ref name="configure" scoped="" ref="0xb5e68c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5e6ae50" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5e6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5e68050"/>
        <function-ref name="requested" scoped="" ref="0xb5e68130"/>
        <function-ref name="granted" scoped="" ref="0xb5e68210"/>
        <function-ref name="isOwner" scoped="" ref="0xb5e682f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5e683d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5e6a308" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5e6a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5e6a4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5e6a5d0"/>
        <function-ref name="request" scoped="" ref="0xb5e6a6b0"/>
        <function-ref name="granted" scoped="" ref="0xb5e6a790"/>
        <function-ref name="isOwner" scoped="" ref="0xb5e6a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5e68510" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5e68510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5e686e8"/>
        <function-ref name="userId" scoped="" ref="0xb5e687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5378120" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5378120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb53782f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb5378458" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb5378458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5378630"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5378710"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb53787f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb53788d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5377cf8" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5377cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5377ee0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5376010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5376ca8" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5376ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5376e90"/>
        <function-ref name="configure" scoped="" ref="0xb5375010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5375170" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb5375170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5375348"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5375428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5375508"/>
        <function-ref name="dequeue" scoped="" ref="0xb53755e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5376150" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5376150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5376328"/>
        <function-ref name="requested" scoped="" ref="0xb5376408"/>
        <function-ref name="granted" scoped="" ref="0xb53764e8"/>
        <function-ref name="isOwner" scoped="" ref="0xb53765c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb53766a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5375728" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5375728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5375900"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb53759e0"/>
        <function-ref name="led1On" scoped="" ref="0xb5375ac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5375ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5375c80"/>
        <function-ref name="get" scoped="" ref="0xb5375d60"/>
        <function-ref name="led1Off" scoped="" ref="0xb5375e40"/>
        <function-ref name="led0On" scoped="" ref="0xb53741d8"/>
        <function-ref name="set" scoped="" ref="0xb5374018"/>
        <function-ref name="led2On" scoped="" ref="0xb5375f20"/>
        <function-ref name="led2Off" scoped="" ref="0xb53740f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb53775b8" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb53775b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb53777a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5377880"/>
        <function-ref name="request" scoped="" ref="0xb5377960"/>
        <function-ref name="granted" scoped="" ref="0xb5377a40"/>
        <function-ref name="isOwner" scoped="" ref="0xb5377b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb53767e8" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb53767e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb53769c0"/>
        <function-ref name="userId" scoped="" ref="0xb5376aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5374358" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb5374358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5374530"/>
        <function-ref name="runTask" scoped="" ref="0xb5374610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0xb5e64578" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0xb5e64578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb5e64750"/>
        <function-ref name="getStartByte" scoped="" ref="0xb5e64830"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb5e64910"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb5e649f0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb5e64ad0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb5e64bb0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb5e64c90"/>
        <function-ref name="getStopBit" scoped="" ref="0xb5e64d70"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5e64e50"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb5e61010"/>
        <function-ref name="getData" scoped="" ref="0xb5e610f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb5e611d0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb5e612b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb5e61410"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb5e614f0"/>
        <function-ref name="getIV" scoped="" ref="0xb5e615d0"/>
        <function-ref name="enableI2C" scoped="" ref="0xb5e616b0"/>
        <function-ref name="setStartBit" scoped="" ref="0xb5e61790"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb5e61870"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb5e61950"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb5e61a30"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb5e61b10"/>
        <function-ref name="isI2C" scoped="" ref="0xb5e61bf0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb5e61cd0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb5e61db0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb5e60010"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb5e600f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb5e601d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb5e602b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb5e60390"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb5e60470"/>
        <function-ref name="disableI2C" scoped="" ref="0xb5e60550"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb5e60630"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb5e60710"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb5e607f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb5e608d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb5e609b0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb5e60a90"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb5e60b70"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb5e60c50"/>
        <function-ref name="getStartBit" scoped="" ref="0xb5e60d30"/>
        <function-ref name="setWordMode" scoped="" ref="0xb5e60e10"/>
        <function-ref name="setData" scoped="" ref="0xb5e60ef0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb5e5f010"/>
        <function-ref name="getClockSource" scoped="" ref="0xb5e5f0f0"/>
        <function-ref name="getWordMode" scoped="" ref="0xb5e5f1d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb5e5f2b0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb5e5f390"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb5e5f470"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb5e5f750"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb5e5f830"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb5e5f910"/>
        <function-ref name="setStopBit" scoped="" ref="0xb5e5f9f0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb5e5fad0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb5e5fbb0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb5e5fc90"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb5e5fd70"/>
        <function-ref name="setStartByte" scoped="" ref="0xb5e5fe50"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb5e5e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0xb5e586d8" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0xb5e586d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5e588b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5e58990"/>
        <function-ref name="setUctl" scoped="" ref="0xb5e58a70"/>
        <function-ref name="enableUart" scoped="" ref="0xb5e58b50"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5e58c30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5e58d10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5e58df0"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5e58ed0"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5e57010"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5e570f0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5e571d0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5e572b0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5e57390"/>
        <function-ref name="getUbr" scoped="" ref="0xb5e574f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5e575d0"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5e576b0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb5e57790"/>
        <function-ref name="isUart" scoped="" ref="0xb5e57870"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5e57950"/>
        <function-ref name="isSpi" scoped="" ref="0xb5e57a30"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5e57b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5e57bf0"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5e57cd0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5e57db0"/>
        <function-ref name="getMode" scoped="" ref="0xb5e57e90"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5e56110"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5e561f0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5e562d0"/>
        <function-ref name="tx" scoped="" ref="0xb5e563b0"/>
        <function-ref name="getUctl" scoped="" ref="0xb5e56490"/>
        <function-ref name="disableUart" scoped="" ref="0xb5e56570"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5e56650"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5e56730"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5e56810"/>
        <function-ref name="rx" scoped="" ref="0xb5e568f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5e569d0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5e56ab0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5e56b90"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5e56c70"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5e56d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0xb5e54168" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0xb5e54168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5e54340"/>
        <function-ref name="isInput" scoped="" ref="0xb5e54420"/>
        <function-ref name="setResistor" scoped="" ref="0xb5e54500"/>
        <function-ref name="toggle" scoped="" ref="0xb5e545e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5e546c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb5e547a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5e54880"/>
        <function-ref name="get" scoped="" ref="0xb5e54960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5e54a40"/>
        <function-ref name="getRaw" scoped="" ref="0xb5e54b20"/>
        <function-ref name="set" scoped="" ref="0xb5e54c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5e54ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5e54dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5e54f20"/>
        <function-ref name="clr" scoped="" ref="0xb5e53018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0xb5e5e9f8" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0xb5e5e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0xb5e5ebd0"/>
        <function-ref name="getStartByte" scoped="" ref="0xb5e5ecb0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0xb5e5ed90"/>
        <function-ref name="setMasterMode" scoped="" ref="0xb5e5ee70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0xb5e5b010"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0xb5e5b0f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0xb5e5b1d0"/>
        <function-ref name="getStopBit" scoped="" ref="0xb5e5b2b0"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5e5b390"/>
        <function-ref name="getRepeatMode" scoped="" ref="0xb5e5b470"/>
        <function-ref name="getData" scoped="" ref="0xb5e5b550"/>
        <function-ref name="enableStartDetect" scoped="" ref="0xb5e5b630"/>
        <function-ref name="enableAccessReady" scoped="" ref="0xb5e5b710"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0xb5e5b870"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0xb5e5b950"/>
        <function-ref name="getIV" scoped="" ref="0xb5e5ba30"/>
        <function-ref name="enableI2C" scoped="" ref="0xb5e5bb10"/>
        <function-ref name="setStartBit" scoped="" ref="0xb5e5bbf0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0xb5e5bcd0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0xb5e5bdb0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0xb5e5be90"/>
        <function-ref name="setOwnAddress" scoped="" ref="0xb5e5a010"/>
        <function-ref name="isI2C" scoped="" ref="0xb5e5a0f0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0xb5e5a1d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0xb5e5a2b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0xb5e5a490"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0xb5e5a570"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0xb5e5a650"/>
        <function-ref name="disableNoAck" scoped="" ref="0xb5e5a730"/>
        <function-ref name="disableStartDetect" scoped="" ref="0xb5e5a810"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0xb5e5a8f0"/>
        <function-ref name="disableI2C" scoped="" ref="0xb5e5a9d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0xb5e5aab0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0xb5e5ab90"/>
        <function-ref name="disableAccessReady" scoped="" ref="0xb5e5ac70"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0xb5e5ad50"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0xb5e5ae30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0xb5e5af10"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0xb5e59010"/>
        <function-ref name="setModeI2C" scoped="" ref="0xb5e590f0"/>
        <function-ref name="getStartBit" scoped="" ref="0xb5e591d0"/>
        <function-ref name="setWordMode" scoped="" ref="0xb5e592b0"/>
        <function-ref name="setData" scoped="" ref="0xb5e59390"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0xb5e59470"/>
        <function-ref name="getClockSource" scoped="" ref="0xb5e59550"/>
        <function-ref name="getWordMode" scoped="" ref="0xb5e59630"/>
        <function-ref name="setShiftClock" scoped="" ref="0xb5e59710"/>
        <function-ref name="setSlaveMode" scoped="" ref="0xb5e597f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0xb5e598d0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0xb5e59bb0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0xb5e59c90"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0xb5e59d70"/>
        <function-ref name="setStopBit" scoped="" ref="0xb5e59e50"/>
        <function-ref name="setReceiveMode" scoped="" ref="0xb5e58010"/>
        <function-ref name="isNoAckPending" scoped="" ref="0xb5e580f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0xb5e581d0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0xb5e582b0"/>
        <function-ref name="setStartByte" scoped="" ref="0xb5e58390"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0xb5e58470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0xb5e55010" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0xb5e55010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5e551e8"/>
        <function-ref name="isInput" scoped="" ref="0xb5e552c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb5e553a8"/>
        <function-ref name="toggle" scoped="" ref="0xb5e55488"/>
        <function-ref name="isOutput" scoped="" ref="0xb5e55568"/>
        <function-ref name="getResistor" scoped="" ref="0xb5e55648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5e55728"/>
        <function-ref name="get" scoped="" ref="0xb5e55808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5e558e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb5e559c8"/>
        <function-ref name="set" scoped="" ref="0xb5e55aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5e55b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5e55c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5e55dc8"/>
        <function-ref name="clr" scoped="" ref="0xb5e55ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5dc3bd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5dc3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc3eb0"/>
        <function-ref name="write" scoped="" ref="0xb5dc2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5dc8190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5dc8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5dc4270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5dc4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc4448"/>
        <function-ref name="write" scoped="" ref="0xb5dc4528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5dc2a00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5dc2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc2bd8"/>
        <function-ref name="write" scoped="" ref="0xb5dc2cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5dbd2b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5dbd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbd488"/>
        <function-ref name="write" scoped="" ref="0xb5dbd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5dc2e38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5dc2e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc1050"/>
        <function-ref name="write" scoped="" ref="0xb5dc1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5db7b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5db7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db7cf8"/>
        <function-ref name="write" scoped="" ref="0xb5db7dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5db8a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5db8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db8bd8"/>
        <function-ref name="write" scoped="" ref="0xb5db8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5dc8b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5dc8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc8d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5dbb190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5dbb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbb368"/>
        <function-ref name="write" scoped="" ref="0xb5dbb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5db8190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5db8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db8368"/>
        <function-ref name="write" scoped="" ref="0xb5db8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5dc4ae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5dc4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc4cb8"/>
        <function-ref name="write" scoped="" ref="0xb5dc4d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5dc3368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5dc3368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc3540"/>
        <function-ref name="write" scoped="" ref="0xb5dc3620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5dbe5c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5dbe5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbe7a0"/>
        <function-ref name="write" scoped="" ref="0xb5dbe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5dbf880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5dbf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbfa58"/>
        <function-ref name="write" scoped="" ref="0xb5dbfb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5dc12b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5dc12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc1488"/>
        <function-ref name="write" scoped="" ref="0xb5dc1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5dc9550" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5dc9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5dc9728"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5dc9808"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5dc98e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5dc7910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5dc7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5dc7c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5dc7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc7ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5dbbc00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5dbbc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbbdd8"/>
        <function-ref name="write" scoped="" ref="0xb5dbbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5dc5080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5dc5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc5258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5db85c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5db85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db87a0"/>
        <function-ref name="write" scoped="" ref="0xb5db8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5dc7260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5dc7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc7438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5dbccb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5dbccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbce90"/>
        <function-ref name="write" scoped="" ref="0xb5dbb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5dc4f18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5dc4f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc3108"/>
        <function-ref name="write" scoped="" ref="0xb5dc31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5dc46a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5dc46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc4880"/>
        <function-ref name="write" scoped="" ref="0xb5dc4960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5dc9dc0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5dc9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5dbc448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5dbc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbc620"/>
        <function-ref name="write" scoped="" ref="0xb5dbc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5dbd6e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5dbd6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbd8c0"/>
        <function-ref name="write" scoped="" ref="0xb5dbd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5dbc880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5dbc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbca58"/>
        <function-ref name="write" scoped="" ref="0xb5dbcb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5db76e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5db76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db78c0"/>
        <function-ref name="write" scoped="" ref="0xb5db79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5db8e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5db8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db7050"/>
        <function-ref name="write" scoped="" ref="0xb5db7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5dbfcb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5dbfcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbfe90"/>
        <function-ref name="write" scoped="" ref="0xb5dbe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5dbdb20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5dbdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbdcf8"/>
        <function-ref name="write" scoped="" ref="0xb5dbddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5db9cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5db9cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db9ed0"/>
        <function-ref name="write" scoped="" ref="0xb5db8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5dc1b20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5dc1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc1cf8"/>
        <function-ref name="write" scoped="" ref="0xb5dc1dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5db6010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5db6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5db61e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5db62c8"/>
        <function-ref name="write" scoped="" ref="0xb5db63a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5db6488"/>
        <function-ref name="readDone" scoped="" ref="0xb5db6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5dc9a68" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5dc9a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5dc5de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5dc5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc4010"/>
        <function-ref name="write" scoped="" ref="0xb5dc40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5dc37a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5dc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc3978"/>
        <function-ref name="write" scoped="" ref="0xb5dc3a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5dbea00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5dbea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbebd8"/>
        <function-ref name="write" scoped="" ref="0xb5dbecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5dc16e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5dc16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc18c0"/>
        <function-ref name="write" scoped="" ref="0xb5dc19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5dbee38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5dbee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbd050"/>
        <function-ref name="write" scoped="" ref="0xb5dbd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5dc2190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5dc2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc2368"/>
        <function-ref name="write" scoped="" ref="0xb5dc2448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5dc84e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5dc84e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5dc25c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5dc25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dc27a0"/>
        <function-ref name="write" scoped="" ref="0xb5dc2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5dcae88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5dcae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5dc9070"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5dc9150"/>
        <function-ref name="request" scoped="" ref="0xb5dc9230"/>
        <function-ref name="granted" scoped="" ref="0xb5dc9310"/>
        <function-ref name="isOwner" scoped="" ref="0xb5dc93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5dc53d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5dc53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5dc5a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5dc5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5db98c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5db98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db9a98"/>
        <function-ref name="write" scoped="" ref="0xb5db9b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5db9488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5db9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db9660"/>
        <function-ref name="write" scoped="" ref="0xb5db9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5dc75b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5dc75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc7790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5db9050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5db9050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db9228"/>
        <function-ref name="write" scoped="" ref="0xb5db9308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5db72b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5db72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5db7488"/>
        <function-ref name="write" scoped="" ref="0xb5db7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5dbe190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5dbe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbe368"/>
        <function-ref name="write" scoped="" ref="0xb5dbe448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5dbc010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5dbc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbc1e8"/>
        <function-ref name="write" scoped="" ref="0xb5dbc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5dc8840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5dc8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc8a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5dc8ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5dc8ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5dbf010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5dbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbf1e8"/>
        <function-ref name="write" scoped="" ref="0xb5dbf2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5dc5730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5dc5730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dc5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5dbf448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5dbf448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbf620"/>
        <function-ref name="write" scoped="" ref="0xb5dbf700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5dbb5c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5dbb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dbb9a0"/>
        <function-ref name="write" scoped="" ref="0xb5dbba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5db66e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5db66e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5db68c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5db69a0"/>
        <function-ref name="write" scoped="" ref="0xb5db6a80"/>
        <function-ref name="beginRead" scoped="" ref="0xb5db6b60"/>
        <function-ref name="readDone" scoped="" ref="0xb5db6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5daa880" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5daa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5daab58"/>
        <function-ref name="write" scoped="" ref="0xb5daac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5db1c28" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5db1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5db1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5dade50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5dade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dac050"/>
        <function-ref name="write" scoped="" ref="0xb5dac130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5da96a8" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5da96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da9880"/>
        <function-ref name="write" scoped="" ref="0xb5da9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5da6e38" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5da6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da4050"/>
        <function-ref name="write" scoped="" ref="0xb5da4130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5da9ae0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5da9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da9cb8"/>
        <function-ref name="write" scoped="" ref="0xb5da9d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5d9e6e8" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5d9e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d9e8c0"/>
        <function-ref name="write" scoped="" ref="0xb5d9e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5da05c8" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5da05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da07a0"/>
        <function-ref name="write" scoped="" ref="0xb5da0880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5daf6c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5daf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5daf898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5da3cb8" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5da3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da3e90"/>
        <function-ref name="write" scoped="" ref="0xb5da2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5da1cf8" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5da1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da1ed0"/>
        <function-ref name="write" scoped="" ref="0xb5da0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5dac6e8" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5dac6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dac8c0"/>
        <function-ref name="write" scoped="" ref="0xb5dac9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5daa010" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5daa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5daa1e8"/>
        <function-ref name="write" scoped="" ref="0xb5daa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5da6190" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5da6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da6368"/>
        <function-ref name="write" scoped="" ref="0xb5da6448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5da7468" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5da7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da7640"/>
        <function-ref name="write" scoped="" ref="0xb5da7720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5da9f18" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5da9f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da8108"/>
        <function-ref name="write" scoped="" ref="0xb5da81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5db1060" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5db1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5db1238"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5db1318"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5db13f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5dae4e8" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5dae4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dae6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5dae840" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5dae840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5daea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5da27c8" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5da27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da29a0"/>
        <function-ref name="write" scoped="" ref="0xb5da2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5daec18" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5daec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5daedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5da0190" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5da0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da0368"/>
        <function-ref name="write" scoped="" ref="0xb5da0448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5dafd70" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5dafd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5da3880" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5da3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da3a58"/>
        <function-ref name="write" scoped="" ref="0xb5da3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5dacb20" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5dacb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5daccf8"/>
        <function-ref name="write" scoped="" ref="0xb5dacdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5dac2b0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5dac2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dac488"/>
        <function-ref name="write" scoped="" ref="0xb5dac568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5db18d0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5db18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5db1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5da3010" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5da3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da31e8"/>
        <function-ref name="write" scoped="" ref="0xb5da32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5da42b0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5da42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da4488"/>
        <function-ref name="write" scoped="" ref="0xb5da4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5da3448" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5da3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da3620"/>
        <function-ref name="write" scoped="" ref="0xb5da3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5d9e2b0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5d9e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d9e488"/>
        <function-ref name="write" scoped="" ref="0xb5d9e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5da0a00" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5da0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da0bd8"/>
        <function-ref name="write" scoped="" ref="0xb5da0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5da78a0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5da78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da7a78"/>
        <function-ref name="write" scoped="" ref="0xb5da7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5da46e8" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5da46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da48c0"/>
        <function-ref name="write" scoped="" ref="0xb5da49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5da18c0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5da18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da1a98"/>
        <function-ref name="write" scoped="" ref="0xb5da1b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5da87a0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5da87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da8978"/>
        <function-ref name="write" scoped="" ref="0xb5da8a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5d9eb20" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5d9eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5d9ecf8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5d9edd8"/>
        <function-ref name="write" scoped="" ref="0xb5d9eeb8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5d9d010"/>
        <function-ref name="readDone" scoped="" ref="0xb5d9d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5db1578" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5db1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5db1750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5dada18" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5dada18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5dadbf0"/>
        <function-ref name="write" scoped="" ref="0xb5dadcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5daa448" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5daa448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5daa620"/>
        <function-ref name="write" scoped="" ref="0xb5daa700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5da65c8" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5da65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da67a0"/>
        <function-ref name="write" scoped="" ref="0xb5da6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5da8368" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5da8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da8540"/>
        <function-ref name="write" scoped="" ref="0xb5da8620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5da6a00" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5da6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da6bd8"/>
        <function-ref name="write" scoped="" ref="0xb5da6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5daadb8" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5daadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da9010"/>
        <function-ref name="write" scoped="" ref="0xb5da90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5daf010" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5daf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5daf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5da9270" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5da9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da9448"/>
        <function-ref name="write" scoped="" ref="0xb5da9528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5db2980" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5db2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5db2b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5db2c38"/>
        <function-ref name="request" scoped="" ref="0xb5db2d18"/>
        <function-ref name="granted" scoped="" ref="0xb5db2df8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5db2ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5dad010" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5dad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dad1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5dad6c0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5dad6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dad898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5da1488" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5da1488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da1660"/>
        <function-ref name="write" scoped="" ref="0xb5da1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5da1050" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5da1050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da1228"/>
        <function-ref name="write" scoped="" ref="0xb5da1308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5dae190" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5dae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dae368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5da2c00" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5da2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da2dd8"/>
        <function-ref name="write" scoped="" ref="0xb5da2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5da0e38" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5da0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d9e050"/>
        <function-ref name="write" scoped="" ref="0xb5d9e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5da7cd8" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5da7cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da7eb0"/>
        <function-ref name="write" scoped="" ref="0xb5da6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5da4b20" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5da4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da4cf8"/>
        <function-ref name="write" scoped="" ref="0xb5da4dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5daf368" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5daf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5daf540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5dafa18" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5dafa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dafbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5da8bd8" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5da8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da8db0"/>
        <function-ref name="write" scoped="" ref="0xb5da8e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5dad368" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5dad368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5dad540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5da7030" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5da7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da7208"/>
        <function-ref name="write" scoped="" ref="0xb5da72e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5da2190" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5da2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5da2568"/>
        <function-ref name="write" scoped="" ref="0xb5da2648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5d9d270" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5d9d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5d9d448"/>
        <function-ref name="writeDone" scoped="" ref="0xb5d9d528"/>
        <function-ref name="write" scoped="" ref="0xb5d9d608"/>
        <function-ref name="beginRead" scoped="" ref="0xb5d9d6e8"/>
        <function-ref name="readDone" scoped="" ref="0xb5d9d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb5d99720" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5d99720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb5d998f8"/>
        <function-ref name="changed" scoped="" ref="0xb5d999d8"/>
        <function-ref name="amGroup" scoped="" ref="0xb5d99ab8"/>
        <function-ref name="setAddress" scoped="" ref="0xb5d99b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb5d98ae0" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5d98ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb5d98cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb5d871d8" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb5d871d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb5d873b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0xb5d87db8" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0xb5d87db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d86010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0xb5d80b08" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0xb5d80b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d80ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0xb5d770e0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0xb5d770e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d772b8"/>
        <function-ref name="write" scoped="" ref="0xb5d77398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0xb5d775e0" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0xb5d775e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d777b8"/>
        <function-ref name="stop" scoped="" ref="0xb5d77898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0xb5d7c888" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0xb5d7c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d7ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0xb5d6f010" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0xb5d6f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d6f1e8"/>
        <function-ref name="write" scoped="" ref="0xb5d6f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0xb5d6f4e8" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0xb5d6f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d6f6c0"/>
        <function-ref name="isInput" scoped="" ref="0xb5d6f7a0"/>
        <function-ref name="toggle" scoped="" ref="0xb5d6f880"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d6f960"/>
        <function-ref name="get" scoped="" ref="0xb5d6fa40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d6fb20"/>
        <function-ref name="set" scoped="" ref="0xb5d6fc00"/>
        <function-ref name="clr" scoped="" ref="0xb5d6fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb5d6a010" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0xb5d6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb5d6a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0xb5d6e4e8" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0xb5d6e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d6e6c0"/>
        <function-ref name="write" scoped="" ref="0xb5d6e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0xb5d6e9c0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0xb5d6e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d6eb98"/>
        <function-ref name="isInput" scoped="" ref="0xb5d6ec78"/>
        <function-ref name="toggle" scoped="" ref="0xb5d6ed58"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d6ee38"/>
        <function-ref name="get" scoped="" ref="0xb5d6ef18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d6b010"/>
        <function-ref name="set" scoped="" ref="0xb5d6b0f0"/>
        <function-ref name="clr" scoped="" ref="0xb5d6b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb5d57d50" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0xb5d57d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb5d564e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb5d54888" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0xb5d54888"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb5d4b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5d4b388" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5d4b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5d4bad8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5d4a010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5d4bd50"/>
        <function-ref name="overflow" scoped="" ref="0xb5d4a288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0xb5d47160" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0xb5d47160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5d478b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5d47da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5d47b28"/>
        <function-ref name="overflow" scoped="" ref="0xb5d46048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0xb5d43010" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0xb5d43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5d431e8"/>
        <function-ref name="setClockSource" scoped="" ref="0xb5d432c8"/>
        <function-ref name="enableEvents" scoped="" ref="0xb5d433a8"/>
        <function-ref name="get" scoped="" ref="0xb5d43488"/>
        <function-ref name="disableEvents" scoped="" ref="0xb5d43568"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5d43648"/>
        <function-ref name="getMode" scoped="" ref="0xb5d43728"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5d43808"/>
        <function-ref name="overflow" scoped="" ref="0xb5d438e8"/>
        <function-ref name="setMode" scoped="" ref="0xb5d439c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0xb5d43aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb5d46eb8" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5d46eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fbde8"/>
            <typename><typedef-ref name="TMicro" ref="0xb68fa010"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5d44628"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5d44b18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5d448a0"/>
        <function-ref name="overflow" scoped="" ref="0xb5d44d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0xb5d7e640" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0xb5d7e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d7e818"/>
        <function-ref name="isInput" scoped="" ref="0xb5d7e8f8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d7e9d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d7eab8"/>
        <function-ref name="get" scoped="" ref="0xb5d7eb98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d7ec78"/>
        <function-ref name="set" scoped="" ref="0xb5d7ed58"/>
        <function-ref name="clr" scoped="" ref="0xb5d7ee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0xb5d41350" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0xb5d41350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d41528"/>
        <function-ref name="isInput" scoped="" ref="0xb5d41608"/>
        <function-ref name="setResistor" scoped="" ref="0xb5d416e8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d417c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d418a8"/>
        <function-ref name="getResistor" scoped="" ref="0xb5d41988"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d41a68"/>
        <function-ref name="get" scoped="" ref="0xb5d41b48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5d41c28"/>
        <function-ref name="getRaw" scoped="" ref="0xb5d41d08"/>
        <function-ref name="set" scoped="" ref="0xb5d41de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5d41ec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5d40010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5d40170"/>
        <function-ref name="clr" scoped="" ref="0xb5d40250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0xb5d48940" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0xb5d48940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d48b18"/>
        <function-ref name="isInput" scoped="" ref="0xb5d48bf8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d48cd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d48db8"/>
        <function-ref name="get" scoped="" ref="0xb5d48e98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d41010"/>
        <function-ref name="set" scoped="" ref="0xb5d410f0"/>
        <function-ref name="clr" scoped="" ref="0xb5d411d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d7d590" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d7d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d7d768"/>
        <function-ref name="stop" scoped="" ref="0xb5d7d848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb5d37808" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb5d37808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5d379e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5d37ac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5d37ba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5d37c80"/>
        <function-ref name="setCca" scoped="" ref="0xb5d37d60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5d37e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb5d368d8" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d368d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d36ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0xb5d370f0" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0xb5d370f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5d372c8"/>
        <function-ref name="cancel" scoped="" ref="0xb5d373a8"/>
        <function-ref name="modify" scoped="" ref="0xb5d37488"/>
        <function-ref name="sendDone" scoped="" ref="0xb5d37568"/>
        <function-ref name="resend" scoped="" ref="0xb5d37648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d3ac00" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d3ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d3add8"/>
        <function-ref name="stop" scoped="" ref="0xb5d3aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb5d36d40" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0xb5d36d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d36f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb5d2e2d0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb5d2e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5d2e4a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5d2e588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5d2e668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5d2e748"/>
        <function-ref name="setCca" scoped="" ref="0xb5d2e828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5d2e908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb5d29088" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5d29088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5d29b90"/>
        <function-ref name="clear" scoped="" ref="0xb5d28010"/>
        <function-ref name="isValid" scoped="" ref="0xb5d297d8"/>
        <function-ref name="set" scoped="" ref="0xb5d283c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb5d1dcd0" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5d1dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1dea8"/>
        <function-ref name="write" scoped="" ref="0xb5d1c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb5d1c220" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5d1c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1c3f8"/>
        <function-ref name="write" scoped="" ref="0xb5d1c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb5d2ebc8" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0xb5d2ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0xb5d1e4c8" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5d1e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0xb5d26710" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0xb5d26710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb5d268e8"/>
        <function-ref name="disable" scoped="" ref="0xb5d269c8"/>
        <function-ref name="captured" scoped="" ref="0xb5d26aa8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb5d26b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0xb5d2d680" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0xb5d2d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5d2bb30"/>
        <function-ref name="fired" scoped="" ref="0xb5d2b300"/>
        <function-ref name="startAt" scoped="" ref="0xb5d2b7f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb5d2b578"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5d2bda8"/>
        <function-ref name="start" scoped="" ref="0xb5d2ddd0"/>
        <function-ref name="stop" scoped="" ref="0xb5d2b088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5d2a0e0" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5d2a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5d2a2b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5d2a398"/>
        <function-ref name="getRssi" scoped="" ref="0xb5d2a478"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5d2a558"/>
        <function-ref name="getPower" scoped="" ref="0xb5d2a638"/>
        <function-ref name="getLqi" scoped="" ref="0xb5d2a718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0xb5d1f258" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5d1f258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1f430"/>
        <function-ref name="write" scoped="" ref="0xb5d1f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb5d1f760" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5d1f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1f938"/>
        <function-ref name="write" scoped="" ref="0xb5d1fa18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0xb5d17978" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0xb5d17978"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5d17b50"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb5d17c30"/>
        <function-ref name="sfd" scoped="" ref="0xb5d17d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5d2fb28" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5d2fb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5d2fd00"/>
        <function-ref name="cancel" scoped="" ref="0xb5d2fde0"/>
        <function-ref name="modify" scoped="" ref="0xb5d2fec0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5d2e010"/>
        <function-ref name="resend" scoped="" ref="0xb5d2e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0xb5d204a8" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5d204a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5d20680"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5d20760"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5d20840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0xb5d1e8f8" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5d1e8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb5d25830" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb5d25830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d25a08"/>
        <function-ref name="isInput" scoped="" ref="0xb5d25ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d25bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d25ca8"/>
        <function-ref name="get" scoped="" ref="0xb5d25d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d25e68"/>
        <function-ref name="set" scoped="" ref="0xb5d21010"/>
        <function-ref name="clr" scoped="" ref="0xb5d210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5d2f290" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5d2f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5d2f468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5d2a920" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5d2a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5d2aaf8"/>
        <function-ref name="getHeader" scoped="" ref="0xb5d2abd8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5d2acb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb5d26040" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5d26040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5d26218"/>
        <function-ref name="isSet" scoped="" ref="0xb5d262f8"/>
        <function-ref name="cancel" scoped="" ref="0xb5d263d8"/>
        <function-ref name="set" scoped="" ref="0xb5d264b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb5d1ed38" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5d1ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1d050"/>
        <function-ref name="write" scoped="" ref="0xb5d1d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb5d21d30" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb5d21d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d21f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5d20010"/>
        <function-ref name="request" scoped="" ref="0xb5d200f0"/>
        <function-ref name="granted" scoped="" ref="0xb5d201d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d202b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0xb5d26d88" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0xb5d26d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d25010"/>
        <function-ref name="isInput" scoped="" ref="0xb5d250f0"/>
        <function-ref name="toggle" scoped="" ref="0xb5d251d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d252b0"/>
        <function-ref name="get" scoped="" ref="0xb5d25390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d25470"/>
        <function-ref name="set" scoped="" ref="0xb5d25550"/>
        <function-ref name="clr" scoped="" ref="0xb5d25630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb5d1c6e8" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5d1c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1c8c0"/>
        <function-ref name="write" scoped="" ref="0xb5d1c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0xb5d1cbc8" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5d1cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1cda0"/>
        <function-ref name="write" scoped="" ref="0xb5d1ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb5d1fc48" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5d1fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0xb5d212f0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0xb5d212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5d214c8"/>
        <function-ref name="isInput" scoped="" ref="0xb5d215a8"/>
        <function-ref name="toggle" scoped="" ref="0xb5d21688"/>
        <function-ref name="isOutput" scoped="" ref="0xb5d21768"/>
        <function-ref name="get" scoped="" ref="0xb5d21848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5d21928"/>
        <function-ref name="set" scoped="" ref="0xb5d21a08"/>
        <function-ref name="clr" scoped="" ref="0xb5d21ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5d17ea0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5d17ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5d1a0c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5d1a1a0"/>
        <function-ref name="led1On" scoped="" ref="0xb5d1a280"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5d1a360"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5d1a440"/>
        <function-ref name="get" scoped="" ref="0xb5d1a520"/>
        <function-ref name="led1Off" scoped="" ref="0xb5d1a600"/>
        <function-ref name="led2Off" scoped="" ref="0xb5d1a980"/>
        <function-ref name="set" scoped="" ref="0xb5d1a6e0"/>
        <function-ref name="led0On" scoped="" ref="0xb5d1a7c0"/>
        <function-ref name="led2On" scoped="" ref="0xb5d1a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb5d1d7b0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5d1d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5d1d988"/>
        <function-ref name="write" scoped="" ref="0xb5d1da68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5d2f630" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5d2f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d2f808"/>
        <function-ref name="stop" scoped="" ref="0xb5d2f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0xb5d20a68" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5d20a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5d20c40"/>
        <function-ref name="writeDone" scoped="" ref="0xb5d20d20"/>
        <function-ref name="write" scoped="" ref="0xb5d20e00"/>
        <function-ref name="beginRead" scoped="" ref="0xb5d20ee0"/>
        <function-ref name="readDone" scoped="" ref="0xb5d1f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0xb5d1e098" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5d1e098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1e270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0xb5d1d370" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5d1d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5d1d548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb5d2d0b8" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0xb5d2d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5d2d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5cbebd8" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5cbebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbeeb0"/>
        <function-ref name="write" scoped="" ref="0xb5cbd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5cc3190" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5cc3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc3368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5cbf270" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5cbf270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbf448"/>
        <function-ref name="write" scoped="" ref="0xb5cbf528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5cbda00" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5cbda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbdbd8"/>
        <function-ref name="write" scoped="" ref="0xb5cbdcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5cb82b0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5cb82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb8488"/>
        <function-ref name="write" scoped="" ref="0xb5cb8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5cbde38" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5cbde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbb050"/>
        <function-ref name="write" scoped="" ref="0xb5cbb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5cb2b20" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5cb2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb2cf8"/>
        <function-ref name="write" scoped="" ref="0xb5cb2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5cb3a00" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5cb3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb3bd8"/>
        <function-ref name="write" scoped="" ref="0xb5cb3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5cc3b98" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5cc3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc3d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5cb5190" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5cb5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb5368"/>
        <function-ref name="write" scoped="" ref="0xb5cb5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5cb3190" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5cb3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb3368"/>
        <function-ref name="write" scoped="" ref="0xb5cb3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5cbfae0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5cbfae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbfcb8"/>
        <function-ref name="write" scoped="" ref="0xb5cbfd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5cbe368" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5cbe368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbe540"/>
        <function-ref name="write" scoped="" ref="0xb5cbe620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5cb95c8" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5cb95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb97a0"/>
        <function-ref name="write" scoped="" ref="0xb5cb9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5cba880" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5cba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbaa58"/>
        <function-ref name="write" scoped="" ref="0xb5cbab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5cbb2b0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5cbb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbb488"/>
        <function-ref name="write" scoped="" ref="0xb5cbb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5cc44f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5cc44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5cc46c8"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5cc47a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5cc4888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5cc2910" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5cc2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5cc2c68" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5cc2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5cb5c00" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5cb5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb5dd8"/>
        <function-ref name="write" scoped="" ref="0xb5cb5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5cc0080" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5cc0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc0258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5cb35c8" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5cb35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb37a0"/>
        <function-ref name="write" scoped="" ref="0xb5cb3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5cc2260" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5cc2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc2438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5cb7cb8" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5cb7cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb7e90"/>
        <function-ref name="write" scoped="" ref="0xb5cb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5cbff18" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5cbff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbe108"/>
        <function-ref name="write" scoped="" ref="0xb5cbe1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5cbf6a8" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5cbf6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbf880"/>
        <function-ref name="write" scoped="" ref="0xb5cbf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5cc4d60" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5cc4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5cb7448" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5cb7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb7620"/>
        <function-ref name="write" scoped="" ref="0xb5cb7700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5cb86e8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5cb86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb88c0"/>
        <function-ref name="write" scoped="" ref="0xb5cb89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5cb7880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5cb7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb7a58"/>
        <function-ref name="write" scoped="" ref="0xb5cb7b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5cb26e8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5cb26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb28c0"/>
        <function-ref name="write" scoped="" ref="0xb5cb29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5cb3e38" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5cb3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb2050"/>
        <function-ref name="write" scoped="" ref="0xb5cb2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5cbacb8" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5cbacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbae90"/>
        <function-ref name="write" scoped="" ref="0xb5cb9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5cb8b20" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5cb8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb8cf8"/>
        <function-ref name="write" scoped="" ref="0xb5cb8dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5cb4cf8" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5cb4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb4ed0"/>
        <function-ref name="write" scoped="" ref="0xb5cb3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5cbbb20" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5cbbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbbcf8"/>
        <function-ref name="write" scoped="" ref="0xb5cbbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5cb1010" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5cb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5cb11e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb5cb12c8"/>
        <function-ref name="write" scoped="" ref="0xb5cb13a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb5cb1488"/>
        <function-ref name="readDone" scoped="" ref="0xb5cb1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5cc4a08" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5cc4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5cc0de0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5cc0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbf010"/>
        <function-ref name="write" scoped="" ref="0xb5cbf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5cbe7a0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5cbe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbe978"/>
        <function-ref name="write" scoped="" ref="0xb5cbea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5cb9a00" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5cb9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb9bd8"/>
        <function-ref name="write" scoped="" ref="0xb5cb9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5cbb6e8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5cbb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbb8c0"/>
        <function-ref name="write" scoped="" ref="0xb5cbb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5cb9e38" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5cb9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb8050"/>
        <function-ref name="write" scoped="" ref="0xb5cb8130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5cbd190" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5cbd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbd368"/>
        <function-ref name="write" scoped="" ref="0xb5cbd448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5cc34e8" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5cc34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5cbd5c8" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5cbd5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cbd7a0"/>
        <function-ref name="write" scoped="" ref="0xb5cbd880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5cc5d88" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5cc5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5cc4010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5cc40f0"/>
        <function-ref name="request" scoped="" ref="0xb5cc41d0"/>
        <function-ref name="granted" scoped="" ref="0xb5cc42b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5cc4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5cc03d8" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5cc03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5cc0a88" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5cc0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5cb48c0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5cb48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb4a98"/>
        <function-ref name="write" scoped="" ref="0xb5cb4b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5cb4488" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5cb4488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb4660"/>
        <function-ref name="write" scoped="" ref="0xb5cb4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5cc25b8" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5cc25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5cb4050" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5cb4050"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb4228"/>
        <function-ref name="write" scoped="" ref="0xb5cb4308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5cb22b0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5cb22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb2488"/>
        <function-ref name="write" scoped="" ref="0xb5cb2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5cb9190" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5cb9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb9368"/>
        <function-ref name="write" scoped="" ref="0xb5cb9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5cb7010" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5cb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb71e8"/>
        <function-ref name="write" scoped="" ref="0xb5cb72c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5cc3840" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5cc3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc3a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5cc3ef0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5cc3ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc20e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5cba010" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5cba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cba1e8"/>
        <function-ref name="write" scoped="" ref="0xb5cba2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5cc0730" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5cc0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5cc0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5cba448" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5cba448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cba620"/>
        <function-ref name="write" scoped="" ref="0xb5cba700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5cb55c8" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5cb55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5cb59a0"/>
        <function-ref name="write" scoped="" ref="0xb5cb5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5cb16e8" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5cb16e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5cb18c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5cb19a0"/>
        <function-ref name="write" scoped="" ref="0xb5cb1a80"/>
        <function-ref name="beginRead" scoped="" ref="0xb5cb1b60"/>
        <function-ref name="readDone" scoped="" ref="0xb5cb1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb5ca8620" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0xb5ca8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ca87f8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb5ca88d8"/>
        <function-ref name="sfd" scoped="" ref="0xb5ca89b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5ca8b60" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5ca8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ca8d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb5ca6010" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0xb5ca6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5ca61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5ca8180" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5ca8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5ca8358"/>
        <function-ref name="stop" scoped="" ref="0xb5ca8438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0xb5ca2cc8" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0xb5ca2cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ca2ea0"/>
        <function-ref name="isInput" scoped="" ref="0xb5ca1010"/>
        <function-ref name="toggle" scoped="" ref="0xb5ca10f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ca11d0"/>
        <function-ref name="get" scoped="" ref="0xb5ca12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ca1390"/>
        <function-ref name="set" scoped="" ref="0xb5ca1470"/>
        <function-ref name="clr" scoped="" ref="0xb5ca1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb5c9d010" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb5c9d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb5c9d1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb5c9d2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb5c9d3a8"/>
        <function-ref name="syncDone" scoped="" ref="0xb5c9d488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb5c9d568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb5c9d648"/>
        <function-ref name="setChannel" scoped="" ref="0xb5c9d728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb5c9d808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb5c9d8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb5c9d9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb5c9daa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb5c9db88"/>
        <function-ref name="sync" scoped="" ref="0xb5c9dc68"/>
        <function-ref name="getChannel" scoped="" ref="0xb5c9ddc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb5c9dea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0xb5c90378" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0xb5c90378"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5c90550"/>
        <function-ref name="runTask" scoped="" ref="0xb5c90630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb5c9c2b0" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb5c9c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5c9cdb8"/>
        <function-ref name="clear" scoped="" ref="0xb5c9b1a0"/>
        <function-ref name="isValid" scoped="" ref="0xb5c9ca00"/>
        <function-ref name="set" scoped="" ref="0xb5c9b558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0xb5ca1768" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0xb5ca1768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ca1940"/>
        <function-ref name="isInput" scoped="" ref="0xb5ca1a20"/>
        <function-ref name="toggle" scoped="" ref="0xb5ca1b00"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ca1be0"/>
        <function-ref name="get" scoped="" ref="0xb5ca1cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ca1da0"/>
        <function-ref name="set" scoped="" ref="0xb5ca1e80"/>
        <function-ref name="clr" scoped="" ref="0xb5ca0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb5c99408" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5c99408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c995e0"/>
        <function-ref name="write" scoped="" ref="0xb5c996c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb5c998d0" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5c998d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c99aa8"/>
        <function-ref name="write" scoped="" ref="0xb5c99b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0xb5c98318" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5c98318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c984f0"/>
        <function-ref name="write" scoped="" ref="0xb5c985d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5c9e1f0" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5c9e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5c9e3c8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5c9e4a8"/>
        <function-ref name="getRssi" scoped="" ref="0xb5c9e588"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5c9e668"/>
        <function-ref name="getPower" scoped="" ref="0xb5c9e748"/>
        <function-ref name="getLqi" scoped="" ref="0xb5c9e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb5ca3500" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0xb5ca3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ca36d8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb5ca37b8"/>
        <function-ref name="sfd" scoped="" ref="0xb5ca3898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0xb5c9f8b0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5c9f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c9fa88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb5ca22c0" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0xb5ca22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5ca2498"/>
        <function-ref name="isInput" scoped="" ref="0xb5ca2578"/>
        <function-ref name="toggle" scoped="" ref="0xb5ca2658"/>
        <function-ref name="isOutput" scoped="" ref="0xb5ca2738"/>
        <function-ref name="get" scoped="" ref="0xb5ca2818"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5ca28f8"/>
        <function-ref name="set" scoped="" ref="0xb5ca29d8"/>
        <function-ref name="clr" scoped="" ref="0xb5ca2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0xb5c98818" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c98818"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c989f0"/>
        <function-ref name="write" scoped="" ref="0xb5c98ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5ca6c98" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5ca6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5ca6e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5c9ea30" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c9ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5c9ec08"/>
        <function-ref name="getHeader" scoped="" ref="0xb5c9ece8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5c9edc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5ca3a40" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5ca3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ca3c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb5ca0968" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0xb5ca0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ca0b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5ca0c20"/>
        <function-ref name="request" scoped="" ref="0xb5ca0d00"/>
        <function-ref name="granted" scoped="" ref="0xb5ca0de0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ca0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb5c99d98" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5c99d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c98010"/>
        <function-ref name="write" scoped="" ref="0xb5c980f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0xb5c9f128" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5c9f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5c9f300"/>
        <function-ref name="writeDone" scoped="" ref="0xb5c9f3e0"/>
        <function-ref name="write" scoped="" ref="0xb5c9f4c0"/>
        <function-ref name="beginRead" scoped="" ref="0xb5c9f5a0"/>
        <function-ref name="readDone" scoped="" ref="0xb5c9f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb5c98d00" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5c98d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c97010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb5ca3ed8" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0xb5ca3ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb5ca20c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5c971a0" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5c971a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5c97378"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5c97458"/>
        <function-ref name="led1On" scoped="" ref="0xb5c97538"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5c97618"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5c976f8"/>
        <function-ref name="get" scoped="" ref="0xb5c977d8"/>
        <function-ref name="led1Off" scoped="" ref="0xb5c978b8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5c97c38"/>
        <function-ref name="set" scoped="" ref="0xb5c97998"/>
        <function-ref name="led0On" scoped="" ref="0xb5c97a78"/>
        <function-ref name="led2On" scoped="" ref="0xb5c97b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb5c9be98" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5c9be98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c990c0"/>
        <function-ref name="write" scoped="" ref="0xb5c991a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0xb5c9ba58" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5c9ba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c9bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0xb5ca02a8" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb5ca02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb5ca0480"/>
        <function-ref name="disable" scoped="" ref="0xb5ca0560"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb5ca0640"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb5ca0720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0xb5c9fce0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c9fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c9e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb5ca3060" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb5ca3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5ca3238"/>
        <function-ref name="stop" scoped="" ref="0xb5ca3318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb5c57208" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5c57208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb5c573e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb5c5bdc8" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5c5bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5c58010"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5c580f0"/>
        <function-ref name="getRssi" scoped="" ref="0xb5c581d0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5c582b0"/>
        <function-ref name="getPower" scoped="" ref="0xb5c58390"/>
        <function-ref name="getLqi" scoped="" ref="0xb5c58470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb5c57860" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c57860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5c563c8"/>
        <function-ref name="clear" scoped="" ref="0xb5c56780"/>
        <function-ref name="isValid" scoped="" ref="0xb5c56010"/>
        <function-ref name="set" scoped="" ref="0xb5c56b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb5c58c60" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c58c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5c58e38"/>
        <function-ref name="getHeader" scoped="" ref="0xb5c58f18"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5c57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb5c53a00" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5c53a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c53bd8"/>
        <function-ref name="isSet" scoped="" ref="0xb5c53cb8"/>
        <function-ref name="cancel" scoped="" ref="0xb5c53d98"/>
        <function-ref name="set" scoped="" ref="0xb5c53e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb5c54288" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5c54288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5c54d90"/>
        <function-ref name="clear" scoped="" ref="0xb5c53178"/>
        <function-ref name="isValid" scoped="" ref="0xb5c549d8"/>
        <function-ref name="set" scoped="" ref="0xb5c53530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5c586e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5c586e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5c588b8"/>
        <function-ref name="noAck" scoped="" ref="0xb5c58998"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5c58a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb5c4fbc0" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb5c4fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb5c4fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb5c527e0" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5c527e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5c529b8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5c52a98"/>
        <function-ref name="getRssi" scoped="" ref="0xb5c52b78"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5c52c58"/>
        <function-ref name="getPower" scoped="" ref="0xb5c52d38"/>
        <function-ref name="getLqi" scoped="" ref="0xb5c52e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb5c49a28" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5c49a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5c49c00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5c49ce0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5c49dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5c49ea0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5c48010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb5c4e260" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb5c4e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5c4ed68"/>
        <function-ref name="clear" scoped="" ref="0xb5c4c158"/>
        <function-ref name="isValid" scoped="" ref="0xb5c4e9b0"/>
        <function-ref name="set" scoped="" ref="0xb5c4c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb5c4f630" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5c4f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5c4f808"/>
        <function-ref name="getHeader" scoped="" ref="0xb5c4f8e8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5c4f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb5c49400" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb5c49400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c495d8"/>
        <function-ref name="isSet" scoped="" ref="0xb5c496b8"/>
        <function-ref name="cancel" scoped="" ref="0xb5c49798"/>
        <function-ref name="set" scoped="" ref="0xb5c49878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0xb5c48350" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0xb5c48350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c48998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb5c48da8" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb5c48da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c47400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb5c4cc50" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb5c4cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb5c4b7a8"/>
        <function-ref name="clear" scoped="" ref="0xb5c4bb60"/>
        <function-ref name="isValid" scoped="" ref="0xb5c4b3f0"/>
        <function-ref name="set" scoped="" ref="0xb5c4bf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5c4f0b0" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5c4f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5c4f288"/>
        <function-ref name="noAck" scoped="" ref="0xb5c4f368"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5c4f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb5c50b78" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0xb5c50b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c18200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5c18550" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5c18550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5c18ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5c171a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5c18f18"/>
        <function-ref name="overflow" scoped="" ref="0xb5c17420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb5c168b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb5c168b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5c133a8"/>
        <function-ref name="fired" scoped="" ref="0xb5c15648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb5c15d50"/>
        <function-ref name="isOneShot" scoped="" ref="0xb5c15af8"/>
        <function-ref name="getdt" scoped="" ref="0xb5c13858"/>
        <function-ref name="gett0" scoped="" ref="0xb5c13600"/>
        <function-ref name="isRunning" scoped="" ref="0xb5c158a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb5c16ed8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb5c13088"/>
        <function-ref name="startOneShot" scoped="" ref="0xb5c15170"/>
        <function-ref name="stop" scoped="" ref="0xb5c153f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb5c0b270" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0xb5c0b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0b548"/>
        <function-ref name="write" scoped="" ref="0xb5c0b628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb5c116e0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0xb5c116e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c118b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb5c0d810" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0xb5c0d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0d9e8"/>
        <function-ref name="write" scoped="" ref="0xb5c0dac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb5c09030" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0xb5c09030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c09208"/>
        <function-ref name="write" scoped="" ref="0xb5c092e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0xb5c06880" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0xb5c06880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c06a58"/>
        <function-ref name="write" scoped="" ref="0xb5c06b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb5c09468" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0xb5c09468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c09640"/>
        <function-ref name="write" scoped="" ref="0xb5c09720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb5bff190" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0xb5bff190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5bff368"/>
        <function-ref name="write" scoped="" ref="0xb5bff448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb5c00010" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0xb5c00010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c001e8"/>
        <function-ref name="write" scoped="" ref="0xb5c002c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb5c10190" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0xb5c10190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c10368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0xb5c036e8" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0xb5c036e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c038c0"/>
        <function-ref name="write" scoped="" ref="0xb5c039a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb5c016e8" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb5c016e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c018c0"/>
        <function-ref name="write" scoped="" ref="0xb5c019a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb5c0c0b0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0xb5c0c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0c288"/>
        <function-ref name="write" scoped="" ref="0xb5c0c368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb5c0c920" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0xb5c0c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0caf8"/>
        <function-ref name="write" scoped="" ref="0xb5c0cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0xb5c07b20" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0xb5c07b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c07cf8"/>
        <function-ref name="write" scoped="" ref="0xb5c07dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb5c08e38" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0xb5c08e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c07050"/>
        <function-ref name="write" scoped="" ref="0xb5c07130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb5c098a0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0xb5c098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c09a78"/>
        <function-ref name="write" scoped="" ref="0xb5c09b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb5c59af0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0xb5c59af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb5c59cc8"/>
        <function-ref name="abortRelease" scoped="" ref="0xb5c59da8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb5c59e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb5c10ef0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0xb5c10ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c0e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb5c0e260" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0xb5c0e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0xb5c02190" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0xb5c02190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c02368"/>
        <function-ref name="write" scoped="" ref="0xb5c02448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb5c0e638" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0xb5c0e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c0e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb5c01b20" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb5c01b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c01cf8"/>
        <function-ref name="write" scoped="" ref="0xb5c01dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb5c10840" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0xb5c10840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c10a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0xb5c032b0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0xb5c032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c03488"/>
        <function-ref name="write" scoped="" ref="0xb5c03568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb5c0c4e8" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0xb5c0c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0c6c0"/>
        <function-ref name="write" scoped="" ref="0xb5c0c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb5c0dc48" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0xb5c0dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0de20"/>
        <function-ref name="write" scoped="" ref="0xb5c0df00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb5c11388" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0xb5c11388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c11560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0xb5c05a00" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0xb5c05a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c05bd8"/>
        <function-ref name="write" scoped="" ref="0xb5c05cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0xb5c06cb8" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0xb5c06cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c06e90"/>
        <function-ref name="write" scoped="" ref="0xb5c05010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0xb5c05e38" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0xb5c05e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c03050"/>
        <function-ref name="write" scoped="" ref="0xb5c03130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb5c00cb8" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0xb5c00cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c00e90"/>
        <function-ref name="write" scoped="" ref="0xb5bff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb5c00448" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0xb5c00448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c00620"/>
        <function-ref name="write" scoped="" ref="0xb5c00700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb5c072b0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0xb5c072b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c07488"/>
        <function-ref name="write" scoped="" ref="0xb5c07568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0xb5c05190" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0xb5c05190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c05368"/>
        <function-ref name="write" scoped="" ref="0xb5c05448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb5c012b0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0xb5c012b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c01488"/>
        <function-ref name="write" scoped="" ref="0xb5c01568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb5c08190" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0xb5c08190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c08368"/>
        <function-ref name="write" scoped="" ref="0xb5c08448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb5bff5c8" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0xb5bff5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5bff7a0"/>
        <function-ref name="writeDone" scoped="" ref="0xb5bff880"/>
        <function-ref name="write" scoped="" ref="0xb5bff960"/>
        <function-ref name="beginRead" scoped="" ref="0xb5bffa40"/>
        <function-ref name="readDone" scoped="" ref="0xb5bffb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb5c11030" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0xb5c11030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c11208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb5c0d3d8" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0xb5c0d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0d5b0"/>
        <function-ref name="write" scoped="" ref="0xb5c0d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb5c0cd58" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0xb5c0cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0b010"/>
        <function-ref name="write" scoped="" ref="0xb5c0b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0xb5c06010" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0xb5c06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c061e8"/>
        <function-ref name="write" scoped="" ref="0xb5c062c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb5c09cd8" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0xb5c09cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c09eb0"/>
        <function-ref name="write" scoped="" ref="0xb5c08010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0xb5c06448" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0xb5c06448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c06620"/>
        <function-ref name="write" scoped="" ref="0xb5c06700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb5c0b7a8" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0xb5c0b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0b980"/>
        <function-ref name="write" scoped="" ref="0xb5c0ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb5c11a38" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0xb5c11a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c11c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb5c0bbe0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0xb5c0bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c0bdb8"/>
        <function-ref name="write" scoped="" ref="0xb5c0be98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5c59438" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5c59438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5c59610"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5c596f0"/>
        <function-ref name="request" scoped="" ref="0xb5c597d0"/>
        <function-ref name="granted" scoped="" ref="0xb5c598b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5c59990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb5c0e990" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0xb5c0e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c0eb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb5c0d080" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0xb5c0d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c0d258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb5c02e38" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0xb5c02e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c01050"/>
        <function-ref name="write" scoped="" ref="0xb5c01130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb5c02a00" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0xb5c02a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c02bd8"/>
        <function-ref name="write" scoped="" ref="0xb5c02cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb5c10b98" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0xb5c10b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c10d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb5c025c8" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb5c025c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c027a0"/>
        <function-ref name="write" scoped="" ref="0xb5c02880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb5c00880" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0xb5c00880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c00a58"/>
        <function-ref name="write" scoped="" ref="0xb5c00b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb5c076e8" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0xb5c076e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c078c0"/>
        <function-ref name="write" scoped="" ref="0xb5c079a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0xb5c055c8" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0xb5c055c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c057a0"/>
        <function-ref name="write" scoped="" ref="0xb5c05880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb5c11d90" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0xb5c11d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c10010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb5c104e8" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0xb5c104e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c106c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb5c085c8" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0xb5c085c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c087a0"/>
        <function-ref name="write" scoped="" ref="0xb5c08880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb5c0ece8" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0xb5c0ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb5c0eec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb5c08a00" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0xb5c08a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c08bd8"/>
        <function-ref name="write" scoped="" ref="0xb5c08cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0xb5c03b20" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0xb5c03b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb5c03ef8"/>
        <function-ref name="write" scoped="" ref="0xb5c02010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb5bffca0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0xb5bffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb5bffe78"/>
        <function-ref name="writeDone" scoped="" ref="0xb5bfd010"/>
        <function-ref name="write" scoped="" ref="0xb5bfd0f0"/>
        <function-ref name="beginRead" scoped="" ref="0xb5bfd1d0"/>
        <function-ref name="readDone" scoped="" ref="0xb5bfd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb5be5c40" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb5be5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb5be5e18"/>
        <function-ref name="rand32" scoped="" ref="0xb5be5ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb5be5380" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0xb5be5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5be59a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5be8060" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5be8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5be8238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb5be36e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb5be36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb5be38b8"/>
        <function-ref name="rand32" scoped="" ref="0xb5be3998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb5be7dd0" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0xb5be7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5be3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5be78b0" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5be78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5be7a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5bea970" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5bea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5beab48"/>
        <function-ref name="toIdle" scoped="" ref="0xb5beac28"/>
        <function-ref name="isState" scoped="" ref="0xb5bead08"/>
        <function-ref name="isIdle" scoped="" ref="0xb5beade8"/>
        <function-ref name="requestState" scoped="" ref="0xb5beaec8"/>
        <function-ref name="forceState" scoped="" ref="0xb5be4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5bd7010" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5bd7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bd71e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bd72c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bd73a8"/>
        <function-ref name="cancel" scoped="" ref="0xb5bd7488"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bd7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5bda7f0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5bda7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bda9c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bdaaa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bdab88"/>
        <function-ref name="cancel" scoped="" ref="0xb5bdac68"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bdad48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5bd4960" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5bd4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bd4b38"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bd4c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bd4cf8"/>
        <function-ref name="cancel" scoped="" ref="0xb5bd4dd8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bd4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5bd7e90" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5bd7e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5bd4080"/>
        <function-ref name="getPayload" scoped="" ref="0xb5bd4160"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5bd4240"/>
        <function-ref name="cancel" scoped="" ref="0xb5bd4320"/>
        <function-ref name="sendDone" scoped="" ref="0xb5bd4400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb5bd3818" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0xb5bd3818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb5bd39f0"/>
        <function-ref name="rand32" scoped="" ref="0xb5bd3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5bd4570" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5bd4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5bd4748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5bd3cb8" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5bd3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5bd3e90"/>
        <function-ref name="getHeader" scoped="" ref="0xb5bd2010"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5bd20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0xb5bd3060" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5bd3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5bd3238"/>
        <function-ref name="toIdle" scoped="" ref="0xb5bd3318"/>
        <function-ref name="isState" scoped="" ref="0xb5bd33f8"/>
        <function-ref name="isIdle" scoped="" ref="0xb5bd34d8"/>
        <function-ref name="requestState" scoped="" ref="0xb5bd35b8"/>
        <function-ref name="forceState" scoped="" ref="0xb5bd3698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5bd6f10" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5bd6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5bd5108"/>
        <function-ref name="toIdle" scoped="" ref="0xb5bd51e8"/>
        <function-ref name="isState" scoped="" ref="0xb5bd52c8"/>
        <function-ref name="isIdle" scoped="" ref="0xb5bd53a8"/>
        <function-ref name="requestState" scoped="" ref="0xb5bd5488"/>
        <function-ref name="forceState" scoped="" ref="0xb5bd5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5bd8e78" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5bd8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bc5070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5bd8628" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5bd8628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bd8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb5bd8a50" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0xb5bd8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bd8c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5bc26a8" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5bc26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bc2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5bc2280" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5bc2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5bc2458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5bc5af8" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5bc5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bc5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5bc2a68" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5bc2a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5bc2c40"/>
        <function-ref name="getHeader" scoped="" ref="0xb5bc2d20"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5bc2e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb5bc5f20" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0xb5bc5f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5bc2110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5ba8ea8" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5ba8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ba70c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5ba7298" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5ba7298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ba7470"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba7550"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba7630"/>
        <function-ref name="cancel" scoped="" ref="0xb5ba7710"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ba77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5ba9090" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5ba9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ba9268"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba9348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba9428"/>
        <function-ref name="cancel" scoped="" ref="0xb5ba9508"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ba95e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb5ba9b40" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0xb5ba9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ba9d18"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba9df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba9ed8"/>
        <function-ref name="cancel" scoped="" ref="0xb5ba8010"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ba80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5ba9770" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5ba9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ba9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5bab9a0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5bab9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5babb78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5babc58"/>
        <function-ref name="request" scoped="" ref="0xb5babd38"/>
        <function-ref name="granted" scoped="" ref="0xb5babe18"/>
        <function-ref name="isOwner" scoped="" ref="0xb5babef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb5ba8320" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0xb5ba8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ba84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb5ba8700" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0xb5ba8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5ba88d8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5ba89b8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba8a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba8b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5ba8c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5ba14c8" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5ba14c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ba16a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba1780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba1860"/>
        <function-ref name="cancel" scoped="" ref="0xb5ba1940"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ba1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5ba1c30" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5ba1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ba1e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0xb5b85cc8" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0xb5b85cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5b85ea0"/>
        <function-ref name="runTask" scoped="" ref="0xb5b84010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5ba0010" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5ba0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5ba01e8"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5ba02c8"/>
        <function-ref name="getRssi" scoped="" ref="0xb5ba03a8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5ba0488"/>
        <function-ref name="getPower" scoped="" ref="0xb5ba0568"/>
        <function-ref name="getLqi" scoped="" ref="0xb5ba0648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb5ba2118" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0xb5ba2118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ba22f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba23d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba24b0"/>
        <function-ref name="cancel" scoped="" ref="0xb5ba2590"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ba2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5ba0de8" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb5ba0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5b9f010"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5b9f0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5b9f1d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb5b9f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5ba0830" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5ba0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5ba0a08"/>
        <function-ref name="getHeader" scoped="" ref="0xb5ba0ae8"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5ba0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb5ba3d28" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0xb5ba3d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ba3f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5ba6e50" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5ba6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5ba3050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5ba3130"/>
        <function-ref name="request" scoped="" ref="0xb5ba3210"/>
        <function-ref name="granted" scoped="" ref="0xb5ba32f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5ba33d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb5ba35b8" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0xb5ba35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ba3790"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba3870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba3950"/>
        <function-ref name="cancel" scoped="" ref="0xb5ba3a30"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ba3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb5ba28a0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0xb5ba28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5ba2a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb5ba2c80" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0xb5ba2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5ba2e58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5ba1010"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ba10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ba11d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5ba12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5ba45c8" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5ba45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5ba47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb5ba4900" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb5ba4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5ba4ad8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5ba4bb8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5ba4c98"/>
        <function-ref name="dequeue" scoped="" ref="0xb5ba4d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5b6c1d0" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5b6c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5b6c3a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb5b6c488"/>
        <function-ref name="start" scoped="" ref="0xb5b6c568"/>
        <function-ref name="stop" scoped="" ref="0xb5b6c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5b6b0a8" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5b6b0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b6b280"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b6b360"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b6b440"/>
        <function-ref name="cancel" scoped="" ref="0xb5b6b520"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b6b600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5b6b810" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5b6b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b6b9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5b6d040" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5b6d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b6d218"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b6d2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b6d3d8"/>
        <function-ref name="cancel" scoped="" ref="0xb5b6d4b8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b6d598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb5b6dae8" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb5b6dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb5b6dcc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb5b6dda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb5b6de80"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb5b6c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0xb5b6c840" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0xb5b6c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5b6ca18"/>
        <function-ref name="toIdle" scoped="" ref="0xb5b6caf8"/>
        <function-ref name="isState" scoped="" ref="0xb5b6cbd8"/>
        <function-ref name="isIdle" scoped="" ref="0xb5b6ccb8"/>
        <function-ref name="requestState" scoped="" ref="0xb5b6cd98"/>
        <function-ref name="forceState" scoped="" ref="0xb5b6ce78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb5b6bc30" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0xb5b6bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5b6be08"/>
        <function-ref name="stopDone" scoped="" ref="0xb5b6bee8"/>
        <function-ref name="start" scoped="" ref="0xb5b6a010"/>
        <function-ref name="stop" scoped="" ref="0xb5b6a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5b6d720" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5b6d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b6d8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb5b6a888" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0xb5b6a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb5b6aa60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb5b6ab40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb5b6ac20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb5b6ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb5b698f0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0xb5b698f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb5b69ac8"/>
        <function-ref name="toIdle" scoped="" ref="0xb5b69ba8"/>
        <function-ref name="isState" scoped="" ref="0xb5b69c88"/>
        <function-ref name="isIdle" scoped="" ref="0xb5b69d68"/>
        <function-ref name="requestState" scoped="" ref="0xb5b69e48"/>
        <function-ref name="forceState" scoped="" ref="0xb5b69f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5b60228" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5b60228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b60400"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b604e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b605c0"/>
        <function-ref name="cancel" scoped="" ref="0xb5b606a0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b60780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5b6e320" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5b6e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b6e4f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b6e5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b6e6b8"/>
        <function-ref name="cancel" scoped="" ref="0xb5b6e798"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b6e878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb5b6ea20" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb5b6ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb5b6ebf8"/>
        <function-ref name="setRetries" scoped="" ref="0xb5b6ecd8"/>
        <function-ref name="getRetries" scoped="" ref="0xb5b6edb8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb5b6ee98"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb5b60010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb5b5d6a0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5b5d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5b5d878"/>
        <function-ref name="noAck" scoped="" ref="0xb5b5d958"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5b5da38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb5b60ec0" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0xb5b60ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb5b5d0c0"/>
        <function-ref name="setRetries" scoped="" ref="0xb5b5d1a0"/>
        <function-ref name="getRetries" scoped="" ref="0xb5b5d280"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb5b5d360"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb5b5d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5b4dea0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5b4dea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b4c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5b4d738" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5b4d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b4d910"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b4d9f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b4dad0"/>
        <function-ref name="cancel" scoped="" ref="0xb5b4dbb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b4dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb5b4b010" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0xb5b4b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb5b4b1e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb5b4b2c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb5b4b3a8"/>
        <function-ref name="syncDone" scoped="" ref="0xb5b4b488"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb5b4b568"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb5b4b648"/>
        <function-ref name="setChannel" scoped="" ref="0xb5b4b728"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb5b4b808"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb5b4b8e8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb5b4b9c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb5b4baa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb5b4bb88"/>
        <function-ref name="sync" scoped="" ref="0xb5b4bc68"/>
        <function-ref name="getChannel" scoped="" ref="0xb5b4bdc8"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb5b4bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb5b4fea8" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0xb5b4fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5b4d0c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5b4d1a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5b4d280"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5b4d360"/>
        <function-ref name="setCca" scoped="" ref="0xb5b4d440"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5b4d520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb5b4f830" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0xb5b4f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb5b4fa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb5b4a870" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0xb5b4a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb5b4aa48"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb5b4ab28"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb5b4ac08"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb5b4ace8"/>
        <function-ref name="setCca" scoped="" ref="0xb5b4adc8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb5b4aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5b50dc0" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5b50dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5b4f010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5b4f0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b4f1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b4f2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5b4f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5b54c80" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5b54c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5b54e58"/>
        <function-ref name="getPayload" scoped="" ref="0xb5b51010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5b510f0"/>
        <function-ref name="cancel" scoped="" ref="0xb5b511d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5b512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb5b51db0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0xb5b51db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b50010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb5b4c280" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0xb5b4c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb5b4c458"/>
        <function-ref name="setNetwork" scoped="" ref="0xb5b4c538"/>
        <function-ref name="getRssi" scoped="" ref="0xb5b4c618"/>
        <function-ref name="getNetwork" scoped="" ref="0xb5b4c6f8"/>
        <function-ref name="getPower" scoped="" ref="0xb5b4c7d8"/>
        <function-ref name="getLqi" scoped="" ref="0xb5b4c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb5b4a130" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb5b4a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb5b4a388"/>
        <function-ref name="changed" scoped="" ref="0xb5b4a468"/>
        <function-ref name="amGroup" scoped="" ref="0xb5b4a548"/>
        <function-ref name="setAddress" scoped="" ref="0xb5b4a628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb5b4caa0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb5b4caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb5b4cc78"/>
        <function-ref name="getHeader" scoped="" ref="0xb5b4cd58"/>
        <function-ref name="getMetadata" scoped="" ref="0xb5b4ce38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5b51718" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5b51718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5b518f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5b497d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5b497d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5b499a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5b49a88"/>
        <function-ref name="led1On" scoped="" ref="0xb5b49b68"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5b49c48"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5b49d28"/>
        <function-ref name="get" scoped="" ref="0xb5b49e08"/>
        <function-ref name="led1Off" scoped="" ref="0xb5b49ee8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5b482b0"/>
        <function-ref name="set" scoped="" ref="0xb5b48010"/>
        <function-ref name="led0On" scoped="" ref="0xb5b480f0"/>
        <function-ref name="led2On" scoped="" ref="0xb5b481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5b501a8" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5b501a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5b50380"/>
        <function-ref name="source" scoped="" ref="0xb5b50460"/>
        <function-ref name="address" scoped="" ref="0xb5b50540"/>
        <function-ref name="destination" scoped="" ref="0xb5b50620"/>
        <function-ref name="setSource" scoped="" ref="0xb5b50700"/>
        <function-ref name="setDestination" scoped="" ref="0xb5b507e0"/>
        <function-ref name="type" scoped="" ref="0xb5b508c0"/>
        <function-ref name="setType" scoped="" ref="0xb5b509a0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5b50a80"/>
        <function-ref name="setGroup" scoped="" ref="0xb5b50b60"/>
        <function-ref name="localGroup" scoped="" ref="0xb5b50c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0xb5b49108" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0xb5b49108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5b492e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5b493c0"/>
        <function-ref name="request" scoped="" ref="0xb5b494a0"/>
        <function-ref name="granted" scoped="" ref="0xb5b49580"/>
        <function-ref name="isOwner" scoped="" ref="0xb5b49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5afa938" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5afa938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5afab10"/>
        <function-ref name="getPayload" scoped="" ref="0xb5afabf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5afacd0"/>
        <function-ref name="cancel" scoped="" ref="0xb5afadb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5afae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5af9010" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5af9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5af91e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5af92c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5af93a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5af9488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5af9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5af96a8" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5af96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5af9880"/>
        <function-ref name="source" scoped="" ref="0xb5af9960"/>
        <function-ref name="address" scoped="" ref="0xb5af9a40"/>
        <function-ref name="destination" scoped="" ref="0xb5af9b20"/>
        <function-ref name="setSource" scoped="" ref="0xb5af9c00"/>
        <function-ref name="setDestination" scoped="" ref="0xb5af9ce0"/>
        <function-ref name="type" scoped="" ref="0xb5af9dc0"/>
        <function-ref name="setType" scoped="" ref="0xb5af9ea0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5aac010"/>
        <function-ref name="setGroup" scoped="" ref="0xb5aac0f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5aac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5aac330" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb5aac330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5aac508"/>
        <function-ref name="noAck" scoped="" ref="0xb5aac5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5aac6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb52b9200" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb52b9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb52b93d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb52b94b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb52b9598"/>
        <function-ref name="cancel" scoped="" ref="0xb52b9678"/>
        <function-ref name="sendDone" scoped="" ref="0xb52b9758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb52b9898" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb52b9898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb52b9a70"/>
        <function-ref name="payloadLength" scoped="" ref="0xb52b9b50"/>
        <function-ref name="getPayload" scoped="" ref="0xb52b9c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb52b9d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb52b9df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb52b8010" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb52b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb52b81e8"/>
        <function-ref name="source" scoped="" ref="0xb52b82c8"/>
        <function-ref name="address" scoped="" ref="0xb52b83a8"/>
        <function-ref name="destination" scoped="" ref="0xb52b8488"/>
        <function-ref name="setSource" scoped="" ref="0xb52b8568"/>
        <function-ref name="setDestination" scoped="" ref="0xb52b8648"/>
        <function-ref name="type" scoped="" ref="0xb52b8728"/>
        <function-ref name="setType" scoped="" ref="0xb52b8808"/>
        <function-ref name="isForMe" scoped="" ref="0xb52b88e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb52b89c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb52b8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb52b8c08" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0xb52b8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb52b8de0"/>
        <function-ref name="noAck" scoped="" ref="0xb52b8ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb52b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb52b4d88" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb52b4d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb52b1010"/>
        <function-ref name="getPayload" scoped="" ref="0xb52b10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb52b11d0"/>
        <function-ref name="cancel" scoped="" ref="0xb52b12b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb52b1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb52b1500" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb52b1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb52b16d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb52b17b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb52b1898"/>
        <function-ref name="cancel" scoped="" ref="0xb52b1978"/>
        <function-ref name="sendDone" scoped="" ref="0xb52b1a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb52b1b98" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="DemoAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb52b1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb52b1d70"/>
        <function-ref name="source" scoped="" ref="0xb52b1e50"/>
        <function-ref name="address" scoped="" ref="0xb52b0010"/>
        <function-ref name="destination" scoped="" ref="0xb52b00f0"/>
        <function-ref name="setSource" scoped="" ref="0xb52b01d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb52b02b0"/>
        <function-ref name="type" scoped="" ref="0xb52b0390"/>
        <function-ref name="setType" scoped="" ref="0xb52b0470"/>
        <function-ref name="isForMe" scoped="" ref="0xb52b0550"/>
        <function-ref name="setGroup" scoped="" ref="0xb52b0630"/>
        <function-ref name="localGroup" scoped="" ref="0xb52b0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5ae4678" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5ae4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ae4850"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ae4930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ae4a10"/>
        <function-ref name="cancel" scoped="" ref="0xb5ae4af0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ae4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb5ab60a8" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5ab60a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ab6290"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ab6370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ab6450"/>
        <function-ref name="cancel" scoped="" ref="0xb5ab6530"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ab6610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5ade908" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5ade908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5adeaf0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5adebd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5adecb0"/>
        <function-ref name="cancel" scoped="" ref="0xb5aded90"/>
        <function-ref name="sendDone" scoped="" ref="0xb5adee70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb5ab53f0" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5ab53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5ab55c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5ab56a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ab5788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ab5868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5ab5948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb5ab5ac8" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0xb5ab5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5ab5ca0"/>
        <function-ref name="runTask" scoped="" ref="0xb5ab5d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb5ab5f00" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0xb5ab5f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5ab40f0"/>
        <function-ref name="runTask" scoped="" ref="0xb5ab41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb5ab6750" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5ab6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5ab6928"/>
        <function-ref name="source" scoped="" ref="0xb5ab6a08"/>
        <function-ref name="address" scoped="" ref="0xb5ab6ae8"/>
        <function-ref name="destination" scoped="" ref="0xb5ab6bc8"/>
        <function-ref name="setSource" scoped="" ref="0xb5ab6ca8"/>
        <function-ref name="setDestination" scoped="" ref="0xb5ab6d88"/>
        <function-ref name="type" scoped="" ref="0xb5ab6e68"/>
        <function-ref name="setType" scoped="" ref="0xb5ab5010"/>
        <function-ref name="isForMe" scoped="" ref="0xb5ab50f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb5ab51d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5ab52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5aab668" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5aab668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5aab840"/>
        <function-ref name="stopDone" scoped="" ref="0xb5aab920"/>
        <function-ref name="start" scoped="" ref="0xb5aaba00"/>
        <function-ref name="stop" scoped="" ref="0xb5aabae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5aa8010" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5aa8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5aa81e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5aa82c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5aa83a8"/>
        <function-ref name="cancel" scoped="" ref="0xb5aa8488"/>
        <function-ref name="sendDone" scoped="" ref="0xb5aa8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5aa8d28" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5aa8d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5aa8f00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5aa7010"/>
        <function-ref name="getPayload" scoped="" ref="0xb5aa70f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5aa71d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5aa72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5aa89d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5aa89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5aa8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5aa6678" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5aa6678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5aa6850"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5aa6930"/>
        <function-ref name="led1On" scoped="" ref="0xb5aa6a10"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5aa6af0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5aa6bd0"/>
        <function-ref name="get" scoped="" ref="0xb5aa6cb0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5aa6d90"/>
        <function-ref name="led2Off" scoped="" ref="0xb5aa51d0"/>
        <function-ref name="set" scoped="" ref="0xb5aa6e70"/>
        <function-ref name="led0On" scoped="" ref="0xb5aa5010"/>
        <function-ref name="led2On" scoped="" ref="0xb5aa50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb5aa6140" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5aa6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5aa6318"/>
        <function-ref name="noAck" scoped="" ref="0xb5aa63f8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5aa64d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5aa7448" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5aa7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5aa7620"/>
        <function-ref name="source" scoped="" ref="0xb5aa7700"/>
        <function-ref name="address" scoped="" ref="0xb5aa77e0"/>
        <function-ref name="destination" scoped="" ref="0xb5aa78c0"/>
        <function-ref name="setSource" scoped="" ref="0xb5aa79a0"/>
        <function-ref name="setDestination" scoped="" ref="0xb5aa7a80"/>
        <function-ref name="type" scoped="" ref="0xb5aa7b60"/>
        <function-ref name="setType" scoped="" ref="0xb5aa7c40"/>
        <function-ref name="isForMe" scoped="" ref="0xb5aa7d20"/>
        <function-ref name="setGroup" scoped="" ref="0xb5aa7e00"/>
        <function-ref name="localGroup" scoped="" ref="0xb5aa7ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb5a701a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0xb5a701a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5a70378"/>
        <function-ref name="getPayload" scoped="" ref="0xb5a70458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5a70538"/>
        <function-ref name="cancel" scoped="" ref="0xb5a70618"/>
        <function-ref name="sendDone" scoped="" ref="0xb5a706f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb5a70858" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0xb5a70858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5a70a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5aa4f18" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0xb5aa4f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5aa3118"/>
        <function-ref name="getPayload" scoped="" ref="0xb5aa31f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5aa32d8"/>
        <function-ref name="cancel" scoped="" ref="0xb5aa33b8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5aa3498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5a715b0" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0xb5a715b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5a71788"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5a71868"/>
        <function-ref name="getPayload" scoped="" ref="0xb5a71948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5a71a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5a71b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5aa3670" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5aa3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5aa3858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb5a71c48" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb5a71c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5a71e20"/>
        <function-ref name="noAck" scoped="" ref="0xb5a71f00"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5a70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5aa3998" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0xb5aa3998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5aa3b70"/>
        <function-ref name="source" scoped="" ref="0xb5aa3c50"/>
        <function-ref name="address" scoped="" ref="0xb5aa3d30"/>
        <function-ref name="destination" scoped="" ref="0xb5aa3e10"/>
        <function-ref name="setSource" scoped="" ref="0xb5aa3ef0"/>
        <function-ref name="setDestination" scoped="" ref="0xb5a71010"/>
        <function-ref name="type" scoped="" ref="0xb5a710f0"/>
        <function-ref name="setType" scoped="" ref="0xb5a711d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5a712b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb5a71390"/>
        <function-ref name="localGroup" scoped="" ref="0xb5a71470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5a6c010" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5a6c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5a6c1e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb5a6c2c8"/>
        <function-ref name="start" scoped="" ref="0xb5a6c3a8"/>
        <function-ref name="stop" scoped="" ref="0xb5a6c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5a6ced8" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb5a6ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb6919510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5a6b0c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5a6b1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5a6b280"/>
        <function-ref name="cancel" scoped="" ref="0xb5a6b360"/>
        <function-ref name="sendDone" scoped="" ref="0xb5a6b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5a6fc30" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5a6fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5a6fe08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb5a6c8d0" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb5a6c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb6919510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb5a6caa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5a66af0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5a66af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5a66cc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5a66da8"/>
        <function-ref name="led1On" scoped="" ref="0xb5a66e88"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5a6a010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5a6a0f0"/>
        <function-ref name="get" scoped="" ref="0xb5a6a1d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5a6a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb5a6a630"/>
        <function-ref name="set" scoped="" ref="0xb5a6a390"/>
        <function-ref name="led0On" scoped="" ref="0xb5a6a470"/>
        <function-ref name="led2On" scoped="" ref="0xb5a6a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb5a665e8" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb5a665e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb6919510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb5a667c0"/>
        <function-ref name="offset" scoped="" ref="0xb5a668a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb5a66980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb5a64010" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0xb5a64010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5a641e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb5a642c8"/>
        <function-ref name="start" scoped="" ref="0xb5a643a8"/>
        <function-ref name="stop" scoped="" ref="0xb5a64488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb5a29be8" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0xb5a29be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a29dc0"/>
        <function-ref name="runTask" scoped="" ref="0xb5a29ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb5a5c340" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0xb5a5c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5a5c518"/>
        <function-ref name="stop" scoped="" ref="0xb5a5c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb5a49a18" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0xb5a49a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a49bf0"/>
        <function-ref name="runTask" scoped="" ref="0xb5a49cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5a6ac10" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5a6ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5a6ade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb5a56350" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0xb5a56350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb5a56528"/>
        <function-ref name="flush" scoped="" ref="0xb5a56608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb5a2a400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0xb5a2a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a2a5d8"/>
        <function-ref name="runTask" scoped="" ref="0xb5a2a6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb5a5aca0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0xb5a5aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb5a5ae78"/>
        <function-ref name="resetSend" scoped="" ref="0xb5a62010"/>
        <function-ref name="dataReceived" scoped="" ref="0xb5a620f0"/>
        <function-ref name="resetReceive" scoped="" ref="0xb5a621d0"/>
        <function-ref name="putData" scoped="" ref="0xb5a622b0"/>
        <function-ref name="putDone" scoped="" ref="0xb5a62390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb5a62470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5a625e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb5a625e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5a627b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5a62898"/>
        <function-ref name="led1On" scoped="" ref="0xb5a62978"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5a62a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5a62b38"/>
        <function-ref name="get" scoped="" ref="0xb5a62c18"/>
        <function-ref name="led1Off" scoped="" ref="0xb5a62cf8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5a5c0f0"/>
        <function-ref name="set" scoped="" ref="0xb5a62dd8"/>
        <function-ref name="led0On" scoped="" ref="0xb5a62eb8"/>
        <function-ref name="led2On" scoped="" ref="0xb5a5c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb5a26880" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb5a26880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5a26a58"/>
        <function-ref name="runTask" scoped="" ref="0xb5a26b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb5a60758" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0xb5a60758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb5a60930"/>
        <function-ref name="nextByte" scoped="" ref="0xb5a60a10"/>
        <function-ref name="startSend" scoped="" ref="0xb5a60af0"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb5a60bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb5a5d948" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb5a5d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb5a5db20"/>
        <function-ref name="byteReceived" scoped="" ref="0xb5a5dc00"/>
        <function-ref name="endPacket" scoped="" ref="0xb5a5dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb59b1d68" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0xb59b1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb59af010"/>
        <function-ref name="runTask" scoped="" ref="0xb59af0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb59ec988" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0xb59ec988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb6919510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59ecb70"/>
        <function-ref name="getPayload" scoped="" ref="0xb59ecc50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb59ecd30"/>
        <function-ref name="cancel" scoped="" ref="0xb59ece10"/>
        <function-ref name="sendDone" scoped="" ref="0xb59ecef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb59af270" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0xb59af270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb59af448"/>
        <function-ref name="runTask" scoped="" ref="0xb59af528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb59ec5c8" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0xb59ec5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb6919510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb59ec7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb59b2138" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0xb59b2138"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb6919510"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb59b2320"/>
        <function-ref name="offset" scoped="" ref="0xb59b2400"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb59b24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb59b1150" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb59b1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb59b1328"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb59b1408"/>
        <function-ref name="led1On" scoped="" ref="0xb59b14e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb59b15c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb59b16a8"/>
        <function-ref name="get" scoped="" ref="0xb59b1788"/>
        <function-ref name="led1Off" scoped="" ref="0xb59b1868"/>
        <function-ref name="led2On" scoped="" ref="0xb59b1be8"/>
        <function-ref name="set" scoped="" ref="0xb59b1a28"/>
        <function-ref name="led2Off" scoped="" ref="0xb59b1948"/>
        <function-ref name="led0On" scoped="" ref="0xb59b1b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb59b2af8" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0xb59b2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb59b2cd0"/>
        <function-ref name="nextByte" scoped="" ref="0xb59b2db0"/>
        <function-ref name="startSend" scoped="" ref="0xb59b2e90"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb59b1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb59b2620" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb59b2620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb59b27f8"/>
        <function-ref name="byteReceived" scoped="" ref="0xb59b28d8"/>
        <function-ref name="endPacket" scoped="" ref="0xb59b29b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb59a49a0" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb59a49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59a4b78"/>
        <function-ref name="receivedByte" scoped="" ref="0xb59a4c58"/>
        <function-ref name="receive" scoped="" ref="0xb59a4d38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59a4e18"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59a4ef8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb59aa010"/>
        <function-ref name="sendDone" scoped="" ref="0xb59aa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb59ae668" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0xb59ae668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb59ae840"/>
        <function-ref name="resetSend" scoped="" ref="0xb59ae920"/>
        <function-ref name="dataReceived" scoped="" ref="0xb59aea00"/>
        <function-ref name="resetReceive" scoped="" ref="0xb59aeae0"/>
        <function-ref name="putData" scoped="" ref="0xb59aebc0"/>
        <function-ref name="putDone" scoped="" ref="0xb59aeca0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb59aed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb59aa260" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb59aa260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb59aa438"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb59aa518"/>
        <function-ref name="led1On" scoped="" ref="0xb59aa5f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb59aa6d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb59aa7b8"/>
        <function-ref name="get" scoped="" ref="0xb59aa898"/>
        <function-ref name="led1Off" scoped="" ref="0xb59aa978"/>
        <function-ref name="led2Off" scoped="" ref="0xb59aacf8"/>
        <function-ref name="set" scoped="" ref="0xb59aaa58"/>
        <function-ref name="led0On" scoped="" ref="0xb59aab38"/>
        <function-ref name="led2On" scoped="" ref="0xb59aac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb59915e0" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb59915e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59917b8"/>
        <function-ref name="receive" scoped="" ref="0xb5991898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb59ad7b0" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb59ad7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb59ad988"/>
        <function-ref name="receivedByte" scoped="" ref="0xb59ada68"/>
        <function-ref name="receive" scoped="" ref="0xb59adb48"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb59adc28"/>
        <function-ref name="receiveDone" scoped="" ref="0xb59add08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb59adde8"/>
        <function-ref name="sendDone" scoped="" ref="0xb59adec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb59ad330" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb59ad330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb59ad508"/>
        <function-ref name="stop" scoped="" ref="0xb59ad5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb58b9060" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb58b9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb58b9238"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb58b9318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb58b9cf0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb58b9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb58b9ec8"/>
        <function-ref name="receive" scoped="" ref="0xb58b8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0xb58b8170" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb58b8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb58b8348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb58b9478" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb58b9478"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb58b9650"/>
        <function-ref name="receivedByte" scoped="" ref="0xb58b9730"/>
        <function-ref name="receive" scoped="" ref="0xb58b9810"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb58b98f0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb58b99d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb58b9ab0"/>
        <function-ref name="sendDone" scoped="" ref="0xb58b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5992988" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5992988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5992b60"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5992c40"/>
        <function-ref name="request" scoped="" ref="0xb5992d20"/>
        <function-ref name="granted" scoped="" ref="0xb5992e00"/>
        <function-ref name="isOwner" scoped="" ref="0xb5992ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb5989100" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5989100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb59892d8"/>
        <function-ref name="configure" scoped="" ref="0xb59893b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb59884a8" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb59884a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5988680"/>
        <function-ref name="receive" scoped="" ref="0xb5988760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0xb59877b0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb59877b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb5987988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb5989860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb5989860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5989a38"/>
        <function-ref name="receivedByte" scoped="" ref="0xb5989b18"/>
        <function-ref name="receive" scoped="" ref="0xb5989bf8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb5989cd8"/>
        <function-ref name="receiveDone" scoped="" ref="0xb5989db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb5989e98"/>
        <function-ref name="sendDone" scoped="" ref="0xb5988010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb5988ca0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb5988ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5988e78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5987010"/>
        <function-ref name="request" scoped="" ref="0xb59870f0"/>
        <function-ref name="granted" scoped="" ref="0xb59871d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb59872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb598d630" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb598d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb598d808"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb598d8e8"/>
        <function-ref name="request" scoped="" ref="0xb598d9c8"/>
        <function-ref name="granted" scoped="" ref="0xb598daa8"/>
        <function-ref name="isOwner" scoped="" ref="0xb598db88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb5985010" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb5985010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb59851e8"/>
        <function-ref name="txDone" scoped="" ref="0xb59852c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb5983770" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5983770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5983958"/>
        <function-ref name="configure" scoped="" ref="0xb5983a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb594a588" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0xb594a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb594a770"/>
        <function-ref name="receive" scoped="" ref="0xb594a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0xb5948208" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb5948208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb59483f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0xb5948570" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5948570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5948748"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb5948828"/>
        <function-ref name="setUctl" scoped="" ref="0xb5948908"/>
        <function-ref name="enableUart" scoped="" ref="0xb59489e8"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5948ac8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5948ba8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5948c88"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5948d68"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5948e48"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5948f28"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5947018"/>
        <function-ref name="disableIntr" scoped="" ref="0xb59470f8"/>
        <function-ref name="setUtctl" scoped="" ref="0xb59471d8"/>
        <function-ref name="getUbr" scoped="" ref="0xb5947338"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5947418"/>
        <function-ref name="setUmctl" scoped="" ref="0xb59474f8"/>
        <function-ref name="isUartRx" scoped="" ref="0xb59475d8"/>
        <function-ref name="isUart" scoped="" ref="0xb59476b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb5947798"/>
        <function-ref name="isSpi" scoped="" ref="0xb5947878"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5947958"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5947a38"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5947b18"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5947bf8"/>
        <function-ref name="getMode" scoped="" ref="0xb5947cd8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5947eb8"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5946010"/>
        <function-ref name="setUbr" scoped="" ref="0xb59460f0"/>
        <function-ref name="tx" scoped="" ref="0xb59461d0"/>
        <function-ref name="getUctl" scoped="" ref="0xb59462b0"/>
        <function-ref name="disableUart" scoped="" ref="0xb5946390"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5946470"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5946550"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5946630"/>
        <function-ref name="rx" scoped="" ref="0xb5946710"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb59467f0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb59468d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb59469b0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5946a90"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5946b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb5983c30" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0xb5983c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5983e18"/>
        <function-ref name="receivedByte" scoped="" ref="0xb5983ef8"/>
        <function-ref name="receive" scoped="" ref="0xb594a010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb594a0f0"/>
        <function-ref name="receiveDone" scoped="" ref="0xb594a1d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb594a2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb594a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb5945370" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb5945370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5945ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb5944010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb5945d38"/>
        <function-ref name="overflow" scoped="" ref="0xb5944288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0xb594aa68" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0xb594aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb594ac50"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb594ad30"/>
        <function-ref name="request" scoped="" ref="0xb594ae10"/>
        <function-ref name="granted" scoped="" ref="0xb594aef0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5948010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5983010" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb5983010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb59831f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb59832d8"/>
        <function-ref name="request" scoped="" ref="0xb59833b8"/>
        <function-ref name="granted" scoped="" ref="0xb5983498"/>
        <function-ref name="isOwner" scoped="" ref="0xb5983578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0xb5946d88" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0xb5946d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5945010"/>
        <function-ref name="txDone" scoped="" ref="0xb59450f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb59444b8" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb59444b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5944690"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5944770"/>
        <function-ref name="led1On" scoped="" ref="0xb5944850"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5944930"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5944a10"/>
        <function-ref name="get" scoped="" ref="0xb5944af0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5944bd0"/>
        <function-ref name="led2On" scoped="" ref="0xb5943010"/>
        <function-ref name="set" scoped="" ref="0xb5944d90"/>
        <function-ref name="led2Off" scoped="" ref="0xb5944cb0"/>
        <function-ref name="led0On" scoped="" ref="0xb5944e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb593cea8" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb593cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb593b0c0"/>
        <function-ref name="txDone" scoped="" ref="0xb593b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb593e0f8" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb593e0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb593e2d0"/>
        <function-ref name="stop" scoped="" ref="0xb593e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb593e5a0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb593e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb593e778"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb593e858"/>
        <function-ref name="setUctl" scoped="" ref="0xb593e938"/>
        <function-ref name="enableUart" scoped="" ref="0xb593ea18"/>
        <function-ref name="setUrctl" scoped="" ref="0xb593eaf8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb593ebd8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb593ecb8"/>
        <function-ref name="getUtctl" scoped="" ref="0xb593ed98"/>
        <function-ref name="getUrctl" scoped="" ref="0xb593ee78"/>
        <function-ref name="resetUsart" scoped="" ref="0xb593d010"/>
        <function-ref name="getUmctl" scoped="" ref="0xb593d0f0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb593d1d0"/>
        <function-ref name="setUtctl" scoped="" ref="0xb593d2b0"/>
        <function-ref name="getUbr" scoped="" ref="0xb593d410"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb593d4f0"/>
        <function-ref name="setUmctl" scoped="" ref="0xb593d5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0xb593d6b0"/>
        <function-ref name="isUart" scoped="" ref="0xb593d790"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb593d870"/>
        <function-ref name="isSpi" scoped="" ref="0xb593d950"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb593da30"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb593db10"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb593dbf0"/>
        <function-ref name="enableIntr" scoped="" ref="0xb593dcd0"/>
        <function-ref name="getMode" scoped="" ref="0xb593ddb0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb593c010"/>
        <function-ref name="clrIntr" scoped="" ref="0xb593c0f0"/>
        <function-ref name="setUbr" scoped="" ref="0xb593c1d0"/>
        <function-ref name="tx" scoped="" ref="0xb593c2b0"/>
        <function-ref name="getUctl" scoped="" ref="0xb593c390"/>
        <function-ref name="disableUart" scoped="" ref="0xb593c470"/>
        <function-ref name="enableSpi" scoped="" ref="0xb593c550"/>
        <function-ref name="setModeUart" scoped="" ref="0xb593c630"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb593c710"/>
        <function-ref name="rx" scoped="" ref="0xb593c7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb593c8d0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb593c9b0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb593ca90"/>
        <function-ref name="disableSpi" scoped="" ref="0xb593cb70"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb593cc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0xb5933168" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0xb5933168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5933340"/>
        <function-ref name="isInput" scoped="" ref="0xb5933420"/>
        <function-ref name="setResistor" scoped="" ref="0xb5933500"/>
        <function-ref name="toggle" scoped="" ref="0xb59335e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb59336c0"/>
        <function-ref name="getResistor" scoped="" ref="0xb59337a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5933880"/>
        <function-ref name="get" scoped="" ref="0xb5933960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5933a40"/>
        <function-ref name="getRaw" scoped="" ref="0xb5933b20"/>
        <function-ref name="set" scoped="" ref="0xb5933c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5933ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5933dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5933f20"/>
        <function-ref name="clr" scoped="" ref="0xb5932018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb5936910" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb5936910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5936ae8"/>
        <function-ref name="txDone" scoped="" ref="0xb5936bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0xb5932280" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0xb5932280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5932458"/>
        <function-ref name="isInput" scoped="" ref="0xb5932538"/>
        <function-ref name="setResistor" scoped="" ref="0xb5932618"/>
        <function-ref name="toggle" scoped="" ref="0xb59326f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb59327d8"/>
        <function-ref name="getResistor" scoped="" ref="0xb59328b8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5932998"/>
        <function-ref name="get" scoped="" ref="0xb5932a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5932b58"/>
        <function-ref name="getRaw" scoped="" ref="0xb5932c38"/>
        <function-ref name="set" scoped="" ref="0xb5932d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5932df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5932ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5931090"/>
        <function-ref name="clr" scoped="" ref="0xb5931170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0xb59313d8" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0xb59313d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb59315b0"/>
        <function-ref name="isInput" scoped="" ref="0xb5931690"/>
        <function-ref name="setResistor" scoped="" ref="0xb5931770"/>
        <function-ref name="toggle" scoped="" ref="0xb5931850"/>
        <function-ref name="isOutput" scoped="" ref="0xb5931930"/>
        <function-ref name="getResistor" scoped="" ref="0xb5931a10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5931af0"/>
        <function-ref name="get" scoped="" ref="0xb5931bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5931cb0"/>
        <function-ref name="getRaw" scoped="" ref="0xb5931d90"/>
        <function-ref name="set" scoped="" ref="0xb5931e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5930010"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb59300f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5930250"/>
        <function-ref name="clr" scoped="" ref="0xb5930330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0xb5938010" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0xb5938010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb59381e8"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb59382c8"/>
        <function-ref name="setUctl" scoped="" ref="0xb59383a8"/>
        <function-ref name="enableUart" scoped="" ref="0xb5938488"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5938568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5938648"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5938728"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5938808"/>
        <function-ref name="getUrctl" scoped="" ref="0xb59388e8"/>
        <function-ref name="resetUsart" scoped="" ref="0xb59389c8"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5938aa8"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5938b88"/>
        <function-ref name="setUtctl" scoped="" ref="0xb5938c68"/>
        <function-ref name="getUbr" scoped="" ref="0xb5938dc8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5938ea8"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5937010"/>
        <function-ref name="isUartRx" scoped="" ref="0xb59370f0"/>
        <function-ref name="isUart" scoped="" ref="0xb59371d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb59372b0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5937390"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5937470"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5937550"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5937630"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5937710"/>
        <function-ref name="getMode" scoped="" ref="0xb59377f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb59379d0"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5937ab0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5937b90"/>
        <function-ref name="tx" scoped="" ref="0xb5937c70"/>
        <function-ref name="getUctl" scoped="" ref="0xb5937d50"/>
        <function-ref name="disableUart" scoped="" ref="0xb5937e30"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5937f10"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5936010"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb59360f0"/>
        <function-ref name="rx" scoped="" ref="0xb59361d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb59362b0"/>
        <function-ref name="isUartTx" scoped="" ref="0xb5936390"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb5936470"/>
        <function-ref name="disableSpi" scoped="" ref="0xb5936550"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5936630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb593bac8" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb593bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb593bca0"/>
        <function-ref name="stop" scoped="" ref="0xb593bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0xb5934010" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0xb5934010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb59341e8"/>
        <function-ref name="isInput" scoped="" ref="0xb59342c8"/>
        <function-ref name="setResistor" scoped="" ref="0xb59343a8"/>
        <function-ref name="toggle" scoped="" ref="0xb5934488"/>
        <function-ref name="isOutput" scoped="" ref="0xb5934568"/>
        <function-ref name="getResistor" scoped="" ref="0xb5934648"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5934728"/>
        <function-ref name="get" scoped="" ref="0xb5934808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb59348e8"/>
        <function-ref name="getRaw" scoped="" ref="0xb59349c8"/>
        <function-ref name="set" scoped="" ref="0xb5934aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb5934b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5934c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5934dc8"/>
        <function-ref name="clr" scoped="" ref="0xb5934ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0xb5936e30" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0xb5936e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb5935050"/>
        <function-ref name="isInput" scoped="" ref="0xb5935130"/>
        <function-ref name="setResistor" scoped="" ref="0xb5935210"/>
        <function-ref name="toggle" scoped="" ref="0xb59352f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb59353d0"/>
        <function-ref name="getResistor" scoped="" ref="0xb59354b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb5935590"/>
        <function-ref name="get" scoped="" ref="0xb5935670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0xb5935750"/>
        <function-ref name="getRaw" scoped="" ref="0xb5935830"/>
        <function-ref name="set" scoped="" ref="0xb5935910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0xb59359f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0xb5935ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0xb5935c30"/>
        <function-ref name="clr" scoped="" ref="0xb5935d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb58eb648" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0xb58eb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb590"/>
            <typename><typedef-ref name="T32khz" ref="0xb68fbb70"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb58ebd98"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb58e82c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb58e8048"/>
        <function-ref name="overflow" scoped="" ref="0xb58e8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5249ba8" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb5249ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5249d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5249e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5245030" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5245030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5245208"/>
        <function-ref name="configure" scoped="" ref="0xb52452e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0xb5246bf0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0xb5246bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb5246dc8"/>
        <function-ref name="txDone" scoped="" ref="0xb5246ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb52494f0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb52494f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb52496c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb52497a8"/>
        <function-ref name="request" scoped="" ref="0xb5249888"/>
        <function-ref name="granted" scoped="" ref="0xb5249968"/>
        <function-ref name="isOwner" scoped="" ref="0xb5249a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0xb5248428" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0xb5248428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb5248600"/>
        <function-ref name="enableUartRx" scoped="" ref="0xb52486e0"/>
        <function-ref name="setUctl" scoped="" ref="0xb52487c0"/>
        <function-ref name="enableUart" scoped="" ref="0xb52488a0"/>
        <function-ref name="setUrctl" scoped="" ref="0xb5248980"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb5248a60"/>
        <function-ref name="clrRxIntr" scoped="" ref="0xb5248b40"/>
        <function-ref name="getUtctl" scoped="" ref="0xb5248c20"/>
        <function-ref name="getUrctl" scoped="" ref="0xb5248d00"/>
        <function-ref name="resetUsart" scoped="" ref="0xb5248de0"/>
        <function-ref name="getUmctl" scoped="" ref="0xb5248ec0"/>
        <function-ref name="disableIntr" scoped="" ref="0xb5247010"/>
        <function-ref name="setUtctl" scoped="" ref="0xb52470f0"/>
        <function-ref name="getUbr" scoped="" ref="0xb5247250"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb5247330"/>
        <function-ref name="setUmctl" scoped="" ref="0xb5247410"/>
        <function-ref name="isUartRx" scoped="" ref="0xb52474f0"/>
        <function-ref name="isUart" scoped="" ref="0xb52475d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb52476b0"/>
        <function-ref name="isSpi" scoped="" ref="0xb5247790"/>
        <function-ref name="enableUartTx" scoped="" ref="0xb5247870"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb5247950"/>
        <function-ref name="disableUartRx" scoped="" ref="0xb5247a30"/>
        <function-ref name="enableIntr" scoped="" ref="0xb5247b10"/>
        <function-ref name="getMode" scoped="" ref="0xb5247bf0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0xb5247dd0"/>
        <function-ref name="clrIntr" scoped="" ref="0xb5247eb0"/>
        <function-ref name="setUbr" scoped="" ref="0xb5246010"/>
        <function-ref name="tx" scoped="" ref="0xb52460f0"/>
        <function-ref name="getUctl" scoped="" ref="0xb52461d0"/>
        <function-ref name="disableUart" scoped="" ref="0xb52462b0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb5246390"/>
        <function-ref name="setModeUart" scoped="" ref="0xb5246470"/>
        <function-ref name="setModeSpi" scoped="" ref="0xb5246550"/>
        <function-ref name="rx" scoped="" ref="0xb5246630"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0xb5246710"/>
        <function-ref name="isUartTx" scoped="" ref="0xb52467f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0xb52468d0"/>
        <function-ref name="disableSpi" scoped="" ref="0xb52469b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0xb5246a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5248010" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5248010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb52481e8"/>
        <function-ref name="userId" scoped="" ref="0xb52482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb58dab48" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb58dab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb58dad20"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb58dae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb58d97b8" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb58d97b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb58d9990"/>
        <function-ref name="configure" scoped="" ref="0xb58d9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb58de8d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb58de8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb58deaa8"/>
        <function-ref name="txDone" scoped="" ref="0xb58deb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb58da100" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb58da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb58da2d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb58da3b8"/>
        <function-ref name="request" scoped="" ref="0xb58da498"/>
        <function-ref name="granted" scoped="" ref="0xb58da578"/>
        <function-ref name="isOwner" scoped="" ref="0xb58da658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb58d9010" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb58d91e8"/>
        <function-ref name="userId" scoped="" ref="0xb58d92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb58d74c8" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d74c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb58d76a0"/>
        <function-ref name="userId" scoped="" ref="0xb58d7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0xb58d8458" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0xb58d8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb58d8640"/>
        <function-ref name="txDone" scoped="" ref="0xb58d8720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0xb58d7190" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0xb58d7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb58d7368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0xb58d8938" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0xb58d8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb58d8b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0xb58d8ca0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0xb58d8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0xb58d8e78"/>
        <function-ref name="txDone" scoped="" ref="0xb58d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb58d4568" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb58d4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb58d4750"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb58d4830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb58d34e0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb58d34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb58d36c8"/>
        <function-ref name="configure" scoped="" ref="0xb58d37a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb58d4970" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb58d4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb58d4b48"/>
        <function-ref name="requested" scoped="" ref="0xb58d4c28"/>
        <function-ref name="granted" scoped="" ref="0xb58d4d08"/>
        <function-ref name="isOwner" scoped="" ref="0xb58d4de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb58d4ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb58d5d80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb58d5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb58d4010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb58d40f0"/>
        <function-ref name="request" scoped="" ref="0xb58d41d0"/>
        <function-ref name="granted" scoped="" ref="0xb58d42b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb58d4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb58d3030" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb58d3208"/>
        <function-ref name="userId" scoped="" ref="0xb58d32e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5210128" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0xb5210128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5210300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb5210460" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0xb5210460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5210638"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5210718"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb52107f8"/>
        <function-ref name="dequeue" scoped="" ref="0xb52108d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb520fd18" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0xb520fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb520ff00"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb520e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb520eca8" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0xb520eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb520ee90"/>
        <function-ref name="configure" scoped="" ref="0xb520d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb520d170" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0xb520d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb520d348"/>
        <function-ref name="isEmpty" scoped="" ref="0xb520d428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb520d508"/>
        <function-ref name="dequeue" scoped="" ref="0xb520d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb520e150" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb520e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb520e328"/>
        <function-ref name="requested" scoped="" ref="0xb520e408"/>
        <function-ref name="granted" scoped="" ref="0xb520e4e8"/>
        <function-ref name="isOwner" scoped="" ref="0xb520e5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb520e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb520d728" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0xb520d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb520d900"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb520d9e0"/>
        <function-ref name="led1On" scoped="" ref="0xb520dac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb520dba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb520dc80"/>
        <function-ref name="get" scoped="" ref="0xb520dd60"/>
        <function-ref name="led1Off" scoped="" ref="0xb520de40"/>
        <function-ref name="led0On" scoped="" ref="0xb520b1d8"/>
        <function-ref name="set" scoped="" ref="0xb520b018"/>
        <function-ref name="led2On" scoped="" ref="0xb520df20"/>
        <function-ref name="led2Off" scoped="" ref="0xb520b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb520f5d8" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb520f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb520f7c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb520f8a0"/>
        <function-ref name="request" scoped="" ref="0xb520f980"/>
        <function-ref name="granted" scoped="" ref="0xb520fa60"/>
        <function-ref name="isOwner" scoped="" ref="0xb520fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb520e7e8" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb520e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb520e9c0"/>
        <function-ref name="userId" scoped="" ref="0xb520eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb520b358" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0xb520b358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb520b530"/>
        <function-ref name="runTask" scoped="" ref="0xb520b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb58d0230" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb58d0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb58d0408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb58d0548" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb58d0548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb58d0720"/>
        <function-ref name="requested" scoped="" ref="0xb58d0800"/>
        <function-ref name="granted" scoped="" ref="0xb58d08e0"/>
        <function-ref name="isOwner" scoped="" ref="0xb58d09c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb58d0aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb58d1da8" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb58d1da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb58d0010"/>
        <function-ref name="stop" scoped="" ref="0xb58d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb58d0be0" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb58d0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb58d0db8"/>
        <function-ref name="userId" scoped="" ref="0xb58d0e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb51f3dc8" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb51f3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb51f1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb51f1150" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb51f1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb51f1328"/>
        <function-ref name="requested" scoped="" ref="0xb51f1408"/>
        <function-ref name="granted" scoped="" ref="0xb51f14e8"/>
        <function-ref name="isOwner" scoped="" ref="0xb51f15c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb51f16a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb51f39d0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0xb51f39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb51f3ba8"/>
        <function-ref name="stop" scoped="" ref="0xb51f3c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb51f17e8" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0xb51f17e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb51f19c0"/>
        <function-ref name="userId" scoped="" ref="0xb51f1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0xb58b7778" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0xb58b7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0xb58b7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb58b7b08" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0xb58b7b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb58b7ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb58b7dc0"/>
        <function-ref name="request" scoped="" ref="0xb58b7ea0"/>
        <function-ref name="granted" scoped="" ref="0xb58b4010"/>
        <function-ref name="isOwner" scoped="" ref="0xb58b40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb58b72a0" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0xb58b72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb58b7478"/>
        <function-ref name="stop" scoped="" ref="0xb58b7558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb58ada30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0xb58ada30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb58adc08"/>
        <function-ref name="offset" scoped="" ref="0xb58adce8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb58addc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb58a4238" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="DemoAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0xb58a4238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb68fb138"/>
            <typename><typedef-ref name="TMilli" ref="0xb68fb318"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb58a3d58"/>
        <function-ref name="fired" scoped="" ref="0xb58a3010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb58a3718"/>
        <function-ref name="isOneShot" scoped="" ref="0xb58a34c0"/>
        <function-ref name="getdt" scoped="" ref="0xb58a2268"/>
        <function-ref name="gett0" scoped="" ref="0xb58a2010"/>
        <function-ref name="isRunning" scoped="" ref="0xb58a3268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb58a4860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb58a3a38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb58a4ae0"/>
        <function-ref name="stop" scoped="" ref="0xb58a4d60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb694e910" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb694b3c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb694b3c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb694b870" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb6948060" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb694b3c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb694bcf0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb694bec0" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb694b3c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb69449d0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6944878" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb69093b8" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6909260" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6906370" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6906010" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69061f0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6908a00" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb6908060" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6909ce0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6909ec0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb690f698" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb690f138" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb690f350" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb690f530" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb690c248" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb690ded0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb690c0c8" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb690d970" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb690e350" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb690e1f8" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb690d060" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb690ecf0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb690eee8" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb6943878" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6943720" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb6942730" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb69425d8" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6943038" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6943d88" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb6be4800" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb6be4d18" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb6902ec8" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb6900360" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb69007e0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb68ff070" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb68ffd60" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb68fe230" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb6900c08" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb68fe970" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb68fe818" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb6902aa0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb68ff4f0" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb68ff918" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb68fa4b8" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb68fa4b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb68f6c28" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb68f9a58" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb68f8bc0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb68f8878" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb68f8a60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb68f83d0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb68f55c0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb68f5090" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb68f9ee8" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb68fab10" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb68fa9b8" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb68f6608" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb68f62c0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb68f64a8" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb68f91c0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb68f9068" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb68f9690" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb68d3390" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0xb68b6da8" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0xb68b8d18" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0xb68b69a8" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0xb68b8960" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0xb68b61a8" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0xb68b81f0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0xb68b85a8" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0xb68b65a8" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb695b2a0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb6b7e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0xb6886b40" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0xb68869e8" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0xb6887278" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb68b1750"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0xb68b1d40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0xb6885090" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0xb68858d0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0xb6886598" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0xb6885488" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb68876d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0xb6887b18" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb6886168" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb68b1750"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0xb68b1d40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6886010" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb68b1750"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0xb68b1d40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0xb68827c0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0xb687ddb0" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0xb687dc58" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb687b638" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb687b4e0" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb687d7b0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb687d310" loc="63:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0xb6882d28" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0xb6882bd0" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0xb6881378" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0xb68818d0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb6881778" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0xb6881e80" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0xb6881d28" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0xb6880440" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0xb68802e8" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb68807e8" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb688b8e8" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0xb688a6c8" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0xb688a570" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0xb688bcd8" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb688c070" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0xb688a0f8" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb688c8b8" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0xb688b540" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb688c4c0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb688cc80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0xb688b188" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb688b030" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0xb688acb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0xb688ab58" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb68652c8" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb6970cb8" loc="76:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb695c408" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb6bedf10" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb6beb838" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb6beb370" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb67c9720" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67c9720"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0xb67c55d8" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67c9720"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb67c5068" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb67c5268" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67c9720"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0xb67c5470" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0xb67c6010" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67c9720"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb67c9c30" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67c9720"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0xb67c9e38" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb67c6b08" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0xb67c69b0" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb67c33d0" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb67c3010" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0xb67c3270" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0xb68d7e20" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0xb67af4c0" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0xb67af4c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0xb67afa50" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0xb67af4c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb67a4ac8" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb67a41a8" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb67a9b78" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb67a4658" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb67a21d8" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb67a7440" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67a7440"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb67a7910" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb67a6170" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67a7440"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb67a7db0" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb67a6010" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb67a7440"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0xb6797b28" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0xb679e610" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb679e4b8" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0xb679c388" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb679c010" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0xb679c228" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0xb6799878" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb679ad80" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0xb67992c8" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb67994f0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0xb6799708" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0xb6795528" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0xb6795150" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb6795388" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0xb679bad8" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb679b010" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0xb679b518" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb679b750" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0xb679b968" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0xb6796338" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb67961e0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0xb6767d18" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb67673c8" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb67bfef0"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0xb67be1e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb6768718" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0xb67bf750"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb67bf238"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0xb6768988" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb67bfef0"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0xb67be1e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0xb6768ba8" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0xb6768dd8" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb6767030" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0xb6767248" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb67666b0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0xb6766318" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0xb6766550" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0xb676a798" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0xb676ac60" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb675c500" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb675c9e8" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0xb6752010" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb67b3780"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0xb67b3d68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0xb67513c8" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb67bfef0"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0xb67be1e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6751270" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0xb674fad8" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
          <long> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0xb674e5d8" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0xb674e168" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0xb674e010" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0xb67524c8" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb67b2ab8"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0xb67b0010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0xb6752ce8" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb67bfef0"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0xb67be1e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6752920" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0xb6752b88" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb67bfef0"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0xb67be1e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0xb674ef08" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
          <long>&#10; Starts a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0xb6753488" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb67b3780"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0xb67b3d68"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0xb6753330" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb67b3780"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0xb67b3d68"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0xb6751a50" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb67518f8" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0xb674f168" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb674f010" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0xb674f668" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0xb674ea40" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
          <long>&#10; Stops a conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0xb674d370" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0xb6753ab0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb67b2ab8"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0xb67b0010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0xb6753958" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0xb67b2ab8"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0xb67b0010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb6746508" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb6746930" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0xb67448a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb6744748" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb67477d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb6745168" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0xb6744e30" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb6746d18" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb67460c8" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0xb6745e10" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0xb6747c08" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6747010" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0xb6745590" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0xb6744268" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0xb6745a10" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb67473e0" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb6754010" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb6754510" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb66abf10" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb66a8508" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb66a61f0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb66aad10" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb66a0b68" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb66a9508"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb66a0a10" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb66a9508"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb66a37d8" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb66a3e98" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb66a9508"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb66a3d40" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb66a9508"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb66a0480" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb66a9508"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb64de828" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb64de828"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb64ded08" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb64d9990" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb64d9990"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb64d9af8" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb64d5dd0" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb64d6aa8" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb64d5788" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb64d5438" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          </variable>
          <variable name="dt" ref="0xb64d5628" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb64d6f18" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb64d4288" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb64d6168" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb64d6010" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb64d9af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb64d6648" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb649a8f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb649a8f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb649aa58" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb649aa58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb6497010" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb649aa58"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb6497a38" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb6497538" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb6497e60" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0xb633d170" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb633ed48" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb633d010" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0xb633d668" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0xb633e870" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0xb6340ab0" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0xb633c560" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb633c408" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6340010" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0xb633cbe8" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb633ca90" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0xb633dee8" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb633dba8" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb633dd88" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0xb63405c0" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6340468" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0xb633e360" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb633e010" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb633e200" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb6312628" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb63121c8" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xb6317da8" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xb6317840" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb6316ee0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb63152e8" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb6316750" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb6315ab8" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6316b10" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb63156c0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6316010" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb63163a0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb629d010" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb629c010" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb62a0b58" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xb629dac0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xb629d968" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xb62a0710" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb629d4a8" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb6205808" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0xb6203210" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb62052d8" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb6205d18" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb62037e8" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0xb61c4910" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb61c0db0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb61bd2a8" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb616c870" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
              <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb616c328" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb616c508" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb616c6e8" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb615de98" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb615de98"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb615a010" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb615a010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb6159220" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb615a010"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61590c8" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb6159cc0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6159b68" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb615a698" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb615a540" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb61567b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb615a010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6156440" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6156650" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb615a010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb61518e0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6151548" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb6151780" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb614f4a0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb614f348" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb6151070" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb61549d8" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb6154880" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb616b9d0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb616b878" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb615c4f8" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb615c3a0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb615d010" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb615ce30" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb6163c58" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6163b00" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb6167390" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6167238" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb61682d8" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb6168970" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6168818" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb6166d00" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6166998" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6166ba0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb6166010" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6167c18" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb6167e20" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb61625f0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6162498" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb6163170" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6162e00" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb6163010" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb691a4e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb6164a98" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb6164940" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb615f910" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb615f5b0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb615f7b0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb61601a8" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0xb6138888" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6138730" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0xb6139780" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6139628" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0xb613c8c0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb613c768" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0xb613c1e0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb613c088" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0xb613ceb8" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0xb613cd60" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0xb6138058" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6139ee0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb6130228" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb6137e98" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb61300c8" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0xb6141568" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6141210" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0xb6141408" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0xb613e540" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb613e1c0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0xb613e3e0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0xb6141bf0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb6d6a800"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6141a98" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0xb6140ba0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6140a48" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0xb6144d30" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6144bd8" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0xb61402f8" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb61401a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb6133188" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6133030" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb6135590" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61351f8" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb6135430" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb6134808" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb61346b0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb6134190" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6135dd8" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb6134030" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb6133ab0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6133958" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb6143cc0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6143b68" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb612b668" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb612b328" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb612b508" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb6127228" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6128e98" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb61270a8" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb6128938" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb61292e0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6129188" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6128010" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6129c28" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6129e20" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6113358" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6113010" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0xb61131f8" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb6113e80" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0xb61105c8" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb6112da0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb6110280" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6110460" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb61128b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb6112558" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb6112750" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0xb61139a8" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0xb6113850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb610e2e8" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6119e28" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0xb610a188" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb610a010" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb610cad8" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb69406e8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0xb693e768"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb610c940" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0xb610ac60" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xb693ee38"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0xb693ddc8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb610aac8" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0xb6116310" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0xb6115610" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0xb61151a8" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0xb6118490" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0xb6118e28" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0xb6116828" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0xb6116ce8" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0xb6118998" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0xb6107478" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0xb61085f0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0xb6107010" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0xb6108e80" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0xb6108a08" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0xb610fa90" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb610f938" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0xb6108168" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb6108010" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0xb60d1170" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0xb60d2d28" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0xb60d1010" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0xb60d2390" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0xb60d3d90" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0xb60d39a0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0xb60d3c30" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xb60d6168" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb60d6010" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0xb60d28a8" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0xb60d5a78" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb60d5920" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb60d6b00" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb60d69a8" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0xb60d1c58" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0xb60d3490" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb60d3338" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0xb60d1790" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0xb60d5010" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb6153808"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb6153cb0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0xb60d54a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb60d9ac8" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb60d6578" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0xb60d5eb8" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb60bb3c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb60bb268" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb60bba58" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb60bb900" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0xb60c97b8" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb6153808"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb6153cb0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb60c3e80" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb60c0700" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb60c0300" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb60c3990" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb60c3628" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb691a738"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb60c3830" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb691a998"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0xb60bade8" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb60c2e10" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb60c25c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb60c2aa8" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb60c2ca8" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb60bdd10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb60bd4c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb60bd9a8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb60bdba8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6023e78" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6020840" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb60203f8" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb60202a0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6023970" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0xb6005580" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0xb6005a70" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0xb6004010" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0xb5fee910" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5fee5b0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb5fee7b0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb5fea178" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5febba0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb5febda0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb5fea010" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb5feb370" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5feb010" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb5feb210" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0xb5ff1cb8" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb69453c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5ff1958" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb5ff1b58" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb5fed6e8" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5fed188" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb5fed388" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb5fed580" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb5fdac08" loc="70:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb5fda698" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb5fda8b0" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5fdaaa0" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb5fd7298" loc="82:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb5fd8b00" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb5fd8d18" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5fd8f08" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb5fd7128" loc="83:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb5fdd840" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb5fdd6e8" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0xb5f4f070" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0xb5f77b80"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0xb5f77dc8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb5f52860" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f52708" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb5f51488" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f51330" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb5f52d70" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb5f51ad0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f51978" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0xb5f47430" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f472d8" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb5f4ae30" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb5f32d78" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0xb5f38b58" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0xb5f3f010" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f87b60"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0xb5f86048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb5f42de0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f87b60"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0xb5f86048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0xb5f3a990" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Enables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0xb5f3d518" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f84010"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0xb5f844c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb5f3d3c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f84010"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0xb5f844c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb5f34bd8" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0xb5f32138" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0xb5f3ff00" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f86ce8"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0xb5f851a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0xb5f3d9b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f84010"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0xb5f844c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0xb5f3b318" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0xb5f3b1c0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0xb5f3cd78" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0xb5f347e8" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0xb5f3fa68" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f86ce8"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0xb5f851a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb5f3f910" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f86ce8"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0xb5f851a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0xb5f3c388" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb5f33010" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0xb5f3c928" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0xb5f3c7d0" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0xb5f3a138" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0xb5f3a560" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb5f34010" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0xb5f37ca0" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0xb5f38290" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb5f34408" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0xb5f37010" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
          <long>&#10; Disables the Uart RX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0xb5f333e8" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0xb5f3b798" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0xb5f8bea0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0xb5f88ce0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0xb5f33830" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0xb5f32930" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0xb5f3df20" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0xb5f3ddc8" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb5f30328" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5f301d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0xb5f3f488" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb5f87b60"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0xb5f86048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0xb5f3ade0" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb5f37430" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
          <long>&#10; Enables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0xb5f36b00" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5f6ce70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0xb5f6b0d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb5f369a8" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5f6ce70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0xb5f6b0d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0xb5f36360" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
          <long>&#10; Switches USART to Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0xb5f77b80"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0xb5f77dc8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb5f36208" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0xb5f77b80"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0xb5f77dc8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb5f30880" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0xb5f33cc0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0xb5f3bc48" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0xb5f32540" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0xb5f37868" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
          <long>&#10; Disables the USART when in Spi mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0xb5f38718" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
          <long>&#10; Disables the Uart TX module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb5ef8ed0" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0xb5ede0c8" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0xb5ee8010" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0xb5ee2168" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb5ee2010" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0xb5eee570" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0xb5ee1700" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0xb5ee6d30" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0xb5eea718" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0xb5ee8808" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0xb5eebdf8" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0xb5eebca0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0xb5eecec8" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0xb5ee7800" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0xb5ee29c0" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0xb5edfc80" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0xb5ee3b50" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0xb5edb090" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0xb5ed9010" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0xb5eeed30" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0xb5ee73f0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0xb5ee61f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0xb5eea310" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0xb5ef1a48" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0xb5ee36e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb5ee3588" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0xb5ef1658" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0xb5ee12c0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0xb5ede4e0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0xb5edbdf8" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0xb5edab98" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0xb5edf010" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0xb5ede8d0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0xb5ee25a0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0xb5edd780" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0xb5eec138" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0xb5ee5758" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0xb5edd138" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0xb5edf860" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0xb5ee68b8" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0xb5ee6760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0xb5eda2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0xb5ee3158" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0xb5ee1b30" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0xb5eee168" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5f60140"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0xb5f60388"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0xb5eee010" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5f60140"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0xb5f60388"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0xb5ee7010" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0xb5eecaa0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb5eec948" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0xb5ee7d38" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5ee7be0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0xb5eddc00" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0xb5eeb888" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0xb5eec558" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0xb5ee5ce8" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0xb5ee5b90" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0xb5eee960" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0xb5edecb0" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0xb5edf438" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0xb5ee2de8" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0xb5ee52f8" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0xb5ee51a0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0xb5ee8be0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0xb5eeab18" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0xb5eda700" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0xb5eeb440" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb5eeb2e8" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0xb5edb510" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0xb5ee8400" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0xb5edb988" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb5d87c50" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb5d87af8" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb5d79770" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0xb5d79228" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb5d79428" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5d79608" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb5d79ed8" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb5d79b98" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb5d79d78" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb5d683f0" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb5d683f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb5d68558" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5d68558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb5d68b70" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5d68558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb5d68a18" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb5d68558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0xb5d36648" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb5d17758" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb5d171d0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0xb5d175f8" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0xb5d1bcf0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0xb5d1b870" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb5d1b718" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0xb6d69550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0xb5d24920" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d247c8" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb5d24010" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb6bee388"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d28e78" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb5d23b10" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d239b8" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb5d23220" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5d230c8" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb5be87a0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb5be87a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb5be8df0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb5be87a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb5be8c98" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb5be87a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb5a66010" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5a68be8" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb5a68e18" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb5a6bce8" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb5a685d8" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb5a68260" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb6912e58"/>
                <typename><typedef-ref name="message_t" ref="0xb6911c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb5a68478" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb5a56158" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb5a5cd08" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb5a636b0" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb5a5b408" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb5a5a520" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5a5a3c8" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb5a5b930" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb5a63de0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5a63c88" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb5a5aa28" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb5a5be90" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb5a616a0" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb5a61c68" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb5a61090" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb5a64f20" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb5a60420" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb5a602c8" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb5a5f630" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb5a5fe18" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb5a5fcc0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb5a5d570" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb5a5d418" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb59ab898" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb59ab548" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb59ab738" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb59a7c60" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb59a7b08" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb59a5480" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb59a5130" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb59a5320" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb59a70c8" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb59a4370" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb59a5db8" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb59a4010" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb59a4208" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb59a7650" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb59a8730" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb59a81e0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb59a83d0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb6d69310"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb59a85c8" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb5994798" loc="46:../../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb5994640" loc="46:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb5991060" loc="56:../../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb6be8220"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb5994cc8" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb5994ed0" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb6d690f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0xb598b230" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0xb5f6ce70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0xb5f6b0d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
